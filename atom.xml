<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xplore&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.pzijigame.com/"/>
  <updated>2021-03-24T00:32:02.674Z</updated>
  <id>http://www.pzijigame.com/</id>
  
  <author>
    <name>BE I</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>蓝桥杯 2012年第三届省赛 C/C++ B组 01 微生物增殖</title>
    <link href="http://www.pzijigame.com/2021-03-24-LANQIAO201201.html"/>
    <id>http://www.pzijigame.com/2021-03-24-LANQIAO201201.html</id>
    <published>2021-03-24T00:19:36.000Z</published>
    <updated>2021-03-24T00:32:02.674Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>假设有两种微生物 X 和 Y<br>X出生后每隔3分钟分裂一次（数目加倍），Y出生后每隔2分钟分裂一次（数目加倍）。<br>一个新出生的X，半分钟之后吃掉1个Y，并且，从此开始，每隔1分钟吃1个Y。<br>现在已知有新出生的X=10, Y=89，求60分钟后Y的数目。<br>如果X=10，Y=90呢？<br>本题的要求就是写出这两种初始条件下，60分钟后Y的数目。<br>题目的结果令你震惊吗？这不是简单的数字游戏！真实的生物圈有着同样脆弱的性质！也许因为你消灭的那只 Y 就是最终导致 Y 种群灭绝的最后一根稻草！</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>将时间乘以2，即以0.5分钟为单位时间。我们发现：<br>t%2 == 1&emsp;Y = Y-X<br>t%4 == 0&emsp;Y = 2*Y<br>t%6 == 0&emsp;X = 2*X</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x,y,t=<span class="number">120</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line">    <span class="keyword">int</span> n=<span class="number">1</span>,f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n &lt;= t) &#123;</span><br><span class="line">        <span class="keyword">if</span>(f==<span class="number">0</span> &amp;&amp; n%<span class="number">2</span>==<span class="number">1</span>) &#123;</span><br><span class="line">            y-=x;</span><br><span class="line">            <span class="keyword">if</span>(y &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                f=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(f==<span class="number">0</span> &amp;&amp; n%<span class="number">4</span>==<span class="number">0</span>) &#123;</span><br><span class="line">            y*=<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">6</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            x*=<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        n++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;x=&quot;</span>&lt;&lt;x&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">if</span>(f == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;y=&quot;</span>&lt;&lt;y&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;y=0&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>0</strong><br><strong>94371840</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="模拟" scheme="http://www.pzijigame.com/tags/%E6%A8%A1%E6%8B%9F/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2015年第六届省赛 C/C++ B组 10 生命之树</title>
    <link href="http://www.pzijigame.com/2021-03-23-LANQIAO201510.html"/>
    <id>http://www.pzijigame.com/2021-03-23-LANQIAO201510.html</id>
    <published>2021-03-23T11:44:11.000Z</published>
    <updated>2021-03-23T13:51:29.403Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>在X森林里，上帝创建了生命之树。<br>他给每棵树的每个节点（叶子也称为一个节点）上，都标了一个整数，代表这个点的和谐值。<br>上帝要在这棵树内选出一个非空节点集S，使得对于S中的任意两个点a,b，都存在一个点列 {a, v1, v2, …, vk, b} 使得这个点列中的每个点都是S里面的元素，且序列中相邻两个点间有一条边相连。<br>在这个前提下，上帝要使得S中的点所对应的整数的和尽量大。<br>这个最大的和就是上帝给生命之树的评分。<br>经过atm的努力，他已经知道了上帝给每棵树上每个节点上的整数。但是由于atm不擅长计算，他不知道怎样有效的求评分。他需要你为他写一个程序来计算一棵树的分数。<br>「输入格式」<br>第一行一个整数 n 表示这棵树有 n 个节点。<br>第二行 n 个整数，依次表示每个节点的评分。<br>接下来 n-1 行，每行 2 个整数 u, v，表示存在一条 u 到 v 的边。由于这是一棵树，所以是不存在环的。<br>「输出格式」<br>输出一行一个数，表示上帝给这棵树的分数。<br>「样例输入」<br>5<br>1 -2 -3 4 5<br>4 2<br>3 1<br>1 2<br>2 5<br>「样例输出」<br>8<br>「数据范围」<br>对于 30% 的数据，n &lt;= 10<br>对于 100% 的数据，0 &lt; n &lt;= 10^5, 每个节点的评分的绝对值不超过10^6</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>使用树形DP，状态转移方程：<br>$dp[i]=\sum{max(dp[j],0)+w[i]}$<br>其中$dp[i]$为选择了i节点的情况下的最大分数，j为i的子节点，w[i]为i节点的权值<br>使用vector储存邻接矩阵</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100001</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> vis[N]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> d[N],ans=<span class="number">-1e6</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; node[N<span class="number">-1</span>]; <span class="comment">//邻接矩阵</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">    vis[u]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;node[u].<span class="built_in">size</span>();i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[node[u][i]]) &#123;</span><br><span class="line">            dfs(node[u][i]);</span><br><span class="line">            <span class="keyword">if</span>(d[node[u][i]] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                d[u]+=d[node[u][i]]; <span class="comment">//状态转移方程 </span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ans=<span class="built_in">max</span>(ans,d[u]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;d[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> u,v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;u&gt;&gt;v;</span><br><span class="line">        node[u].push_back(v);</span><br><span class="line">        node[v].push_back(u);</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(u);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="STL" scheme="http://www.pzijigame.com/tags/STL/"/>
    
      <category term="树状DP" scheme="http://www.pzijigame.com/tags/%E6%A0%91%E7%8A%B6DP/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2015年第六届省赛 C/C++ B组 09 垒骰子</title>
    <link href="http://www.pzijigame.com/2021-03-23-LANQIAO201509.html"/>
    <id>http://www.pzijigame.com/2021-03-23-LANQIAO201509.html</id>
    <published>2021-03-23T10:14:52.000Z</published>
    <updated>2021-03-23T13:56:15.158Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>赌圣atm晚年迷恋上了垒骰子，就是把骰子一个垒在另一个上边，不能歪歪扭扭，要垒成方柱体。<br>经过长期观察，atm发现了稳定骰子的奥秘：有些数字的面贴着会互相排斥！<br>我们先来规范一下骰子：1的对面是4，2的对面是5，3的对面是6。<br>假设有 m 组互斥现象，每组中的那两个数字的面紧贴在一起，骰子就不能稳定的垒起来。<br>atm想计算一下有多少种不同的可能的垒骰子方式。<br>两种垒骰子方式相同，当且仅当这两种方式中对应高度的骰子的对应数字的朝向都相同。<br>由于方案数可能过多，请输出模 10^9 + 7 的结果。<br>不要小看了 atm 的骰子数量哦～<br>「输入格式」<br>第一行两个整数 n m<br>n表示骰子数目，接下来 m 行，每行两个整数 a b ，表示 a 和 b 数字不能紧贴在一起。<br>「输出格式」<br>一行一个数，表示答案模 10^9 + 7 的结果。<br>「样例输入」<br>2 1<br>1 2<br>「样例输出」<br>544<br>「数据范围」<br>对于 30% 的数据：n &lt;= 5<br>对于 60% 的数据：n &lt;= 100<br>对于 100% 的数据：0 &lt; n &lt;= 10^9, m &lt;= 36</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><h3 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h3><p>使用动态规划，状态转移方程：<br>$dp[i][j]=\sum{dp[i-1][k]}$<br>其中$dp[i][j]$表示第i个骰子j面朝上的方案数，k表示能与j面的对面紧贴的面<br>使用vector储存面与面的紧贴关系<br>仅使用动态规划只能通过78%，需要使用矩阵快速幂</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; can[<span class="number">7</span>]; <span class="comment">//can[i]存能与点数i紧贴的点数</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> top[<span class="number">7</span>],bottom[<span class="number">7</span>]; <span class="comment">//top[i]存第n层骰子以点数i为顶面的方案数，bottom[i]存第n层骰子以点数i为底面的方案数</span></span><br><span class="line">    <span class="comment">//初始化 </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">6</span>;i++) &#123;</span><br><span class="line">        top[i]=<span class="number">1</span>; <span class="comment">//第1层骰子以点数i为顶面的方案数为1</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">6</span>;j++) &#123;</span><br><span class="line">            can[i].push_back(j);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++) &#123; <span class="comment">//删除不能紧贴的m组点</span></span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator it=can[a].<span class="built_in">begin</span>();it!=can[a].<span class="built_in">end</span>();it++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(*it == b) &#123;</span><br><span class="line">                can[a].erase(it);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator it=can[b].<span class="built_in">begin</span>();it!=can[b].<span class="built_in">end</span>();it++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(*it == a) &#123;</span><br><span class="line">                can[b].erase(it);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> k=<span class="number">4</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">6</span>;j++) &#123;</span><br><span class="line">            bottom[j]=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator it=can[j].<span class="built_in">begin</span>();it!=can[j].<span class="built_in">end</span>();it++) &#123;</span><br><span class="line">                bottom[j]+=top[*it]; <span class="comment">//状态转移方程</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">6</span>;j++) &#123;</span><br><span class="line">            top[j]=bottom[(j+<span class="number">3</span>)%<span class="number">6</span>==<span class="number">0</span> ? <span class="number">6</span> : (j+<span class="number">3</span>)%<span class="number">6</span>]%MOD;</span><br><span class="line">        &#125;</span><br><span class="line">        k*=<span class="number">4</span>;</span><br><span class="line">        k%=MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">6</span>;i++) &#123;</span><br><span class="line">        sum+=top[i];</span><br><span class="line">        sum%=MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum*k%MOD&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="动态规划-矩阵快速幂"><a href="#动态规划-矩阵快速幂" class="headerlink" title="动态规划+矩阵快速幂"></a>动态规划+矩阵快速幂</h3><p><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/201509.png"><br>其中T为转移矩阵，$T[i][j]$表示i面和j面的冲突关系，$A[k]$表示第1个骰子k面朝上的方案数，$B[k]$表示第2个骰子k面朝上的方案数。<br><a href="https://www.jianshu.com/p/1c3f88f63dec">矩阵快速幂入门</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    ll m[<span class="number">7</span>][<span class="number">7</span>];</span><br><span class="line">&#125; Mat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 矩阵乘法 </span></span><br><span class="line"><span class="function">Mat <span class="title">mul</span><span class="params">(Mat a,Mat b)</span> </span>&#123;</span><br><span class="line">    Mat c;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">6</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">6</span>;j++) &#123;</span><br><span class="line">            c.m[i][j]=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">6</span>;k++) &#123;</span><br><span class="line">                c.m[i][j]+=a.m[i][k]*b.m[k][j]%MOD;</span><br><span class="line">                c.m[i][j]%=MOD;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 矩阵快速幂 </span></span><br><span class="line"><span class="function">Mat <span class="title">pow</span><span class="params">(Mat a,<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    Mat r;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">6</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">6</span>;j++) &#123;</span><br><span class="line">            r.m[i][j]=i==j ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(n) &#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>) &#123;</span><br><span class="line">            r=mul(a,r);</span><br><span class="line">        &#125;</span><br><span class="line">        a=mul(a,a);</span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 快速幂 </span></span><br><span class="line"><span class="function">ll <span class="title">pow</span><span class="params">(ll a,<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    ll r=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n) &#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>) &#123;</span><br><span class="line">            r=r*a%MOD;</span><br><span class="line">        &#125;</span><br><span class="line">        a=a*a%MOD;</span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    Mat dp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">6</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">6</span>;j++) &#123;</span><br><span class="line">            dp.m[i][j]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++) &#123; <span class="comment">//构造转移矩阵（即冲突矩阵）</span></span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        dp.m[a][(b+<span class="number">3</span>)%<span class="number">6</span>==<span class="number">0</span> ? <span class="number">6</span> : (b+<span class="number">3</span>)%<span class="number">6</span>]=<span class="number">0</span>;</span><br><span class="line">        dp.m[b][(a+<span class="number">3</span>)%<span class="number">6</span>==<span class="number">0</span> ? <span class="number">6</span> : (a+<span class="number">3</span>)%<span class="number">6</span>]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    dp=<span class="built_in">pow</span>(dp,n<span class="number">-1</span>);</span><br><span class="line">    ll sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">6</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">6</span>;j++) &#123;</span><br><span class="line">            sum+=dp.m[i][j];</span><br><span class="line">            sum%=MOD;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;sum*pow(4,n)%MOD&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="动态规划" scheme="http://www.pzijigame.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="矩阵快速幂" scheme="http://www.pzijigame.com/tags/%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    
      <category term="STL" scheme="http://www.pzijigame.com/tags/STL/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2015年第六届省赛 C/C++ B组 08 移动距离</title>
    <link href="http://www.pzijigame.com/2021-03-23-LANQIAO201508.html"/>
    <id>http://www.pzijigame.com/2021-03-23-LANQIAO201508.html</id>
    <published>2021-03-23T09:15:04.000Z</published>
    <updated>2021-03-23T13:47:03.035Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>X星球居民小区的楼房全是一样的，并且按矩阵样式排列。其楼房的编号为1,2,3…<br>当排满一行时，从下一行相邻的楼往反方向排号。<br>比如：当小区排号宽度为6时，开始情形如下：<br>1 2 3 4 5 6<br>12 11 10 9 8 7<br>13 14 15 ……<br>我们的问题是：已知了两个楼号m和n，需要求出它们之间的最短移动距离（不能斜线方向移动）<br>输入为3个整数w m n，空格分开，都在1到10000范围内<br>w为排号宽度，m,n为待计算的楼号。<br>要求输出一个整数，表示m n 两楼间最短移动距离。<br>例如，用户输入：<br>6 8 2<br>则，程序应该输出：<br>4<br>再例如，用户输入：<br>4 7 20<br>则，程序应该输出：<br>5</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>横坐标x&ensp;&ensp;=&ensp;m/w<br>纵坐标y1&ensp;=&ensp;(m%w)==0 ? w : m%w //正向排号<br>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;y2&ensp;=&ensp;w-y1+1 //反向排号</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> w,d[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;w&gt;&gt;d[<span class="number">0</span>][<span class="number">0</span>]&gt;&gt;d[<span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++) &#123;</span><br><span class="line">        d[i][<span class="number">1</span>]=d[i][<span class="number">0</span>]/w; <span class="comment">//计算x坐标</span></span><br><span class="line">        <span class="comment">//计算y坐标</span></span><br><span class="line">        <span class="keyword">int</span> t=(d[i][<span class="number">0</span>]%w)==<span class="number">0</span>?w:d[i][<span class="number">0</span>]%w;</span><br><span class="line">        <span class="keyword">if</span>(d[i][<span class="number">1</span>]%<span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            d[i][<span class="number">2</span>]=t; <span class="comment">//正向排号</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            d[i][<span class="number">2</span>]=w-t+<span class="number">1</span>; <span class="comment">//反向排号</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">abs</span>(d[<span class="number">0</span>][<span class="number">1</span>]-d[<span class="number">1</span>][<span class="number">1</span>])+<span class="built_in">abs</span>(d[<span class="number">0</span>][<span class="number">2</span>]-d[<span class="number">1</span>][<span class="number">2</span>]); </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="坐标计算" scheme="http://www.pzijigame.com/tags/%E5%9D%90%E6%A0%87%E8%AE%A1%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2015年第六届省赛 C/C++ B组 07 牌型种数</title>
    <link href="http://www.pzijigame.com/2021-03-23-LANQIAO201507.html"/>
    <id>http://www.pzijigame.com/2021-03-23-LANQIAO201507.html</id>
    <published>2021-03-23T01:10:01.000Z</published>
    <updated>2021-03-23T12:51:10.812Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小明被劫持到X赌城，被迫与其他3人玩牌。<br>一副扑克牌（去掉大小王牌，共52张），均匀发给4个人，每个人13张。<br>这时，小明脑子里突然冒出一个问题：<br>如果不考虑花色，只考虑点数，也不考虑自己得到的牌的先后顺序，自己手里能拿到的初始牌型组合一共有多少种呢？<br>请填写该整数，不要填写任何多余的内容或说明文字。 </p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><h3 id="暴力枚举"><a href="#暴力枚举" class="headerlink" title="暴力枚举"></a>暴力枚举</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> a=<span class="number">0</span>;a&lt;=<span class="number">4</span>;a++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> b=<span class="number">0</span>;b&lt;=<span class="number">4</span>;b++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> c=<span class="number">0</span>;c&lt;=<span class="number">4</span>;c++)</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> d=<span class="number">0</span>;d&lt;=<span class="number">4</span>;d++)</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> e=<span class="number">0</span>;e&lt;=<span class="number">4</span>;e++)</span><br><span class="line">                        <span class="keyword">for</span>(<span class="keyword">int</span> f=<span class="number">0</span>;f&lt;=<span class="number">4</span>;f++)</span><br><span class="line">                            <span class="keyword">for</span>(<span class="keyword">int</span> g=<span class="number">0</span>;g&lt;=<span class="number">4</span>;g++)</span><br><span class="line">                                <span class="keyword">for</span>(<span class="keyword">int</span> h=<span class="number">0</span>;h&lt;=<span class="number">4</span>;h++)</span><br><span class="line">                                    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line">                                        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">4</span>;j++)</span><br><span class="line">                                            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=<span class="number">4</span>;k++)</span><br><span class="line">                                                <span class="keyword">for</span>(<span class="keyword">int</span> m=<span class="number">0</span>;m&lt;=<span class="number">4</span>;m++)</span><br><span class="line">                                                    <span class="keyword">for</span>(<span class="keyword">int</span> n=<span class="number">0</span>;n&lt;=<span class="number">4</span>;n++)</span><br><span class="line">                                                        <span class="keyword">if</span>(a+b+c+d+e+f+g+h+i+j+k+m+n == <span class="number">13</span>)</span><br><span class="line">                                                            sum++;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> res=<span class="number">0</span>,a[<span class="number">13</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">13</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">13</span>;i++) &#123;</span><br><span class="line">            sum+=a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sum == <span class="number">13</span>) &#123;</span><br><span class="line">            res++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">4</span>;i++) &#123;</span><br><span class="line">        a[n]=i;</span><br><span class="line">        fun(n+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fun(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h3><p>状态转移方程：<br>$dp[i][j]$ = //选完 i 点数的牌，剩余 j 张牌待选时的组合数<br>$dp[i-1][j]$ //上一点数的牌没有选<br>+ $dp[i-1][j+1]$ //上一点数的牌选了一张<br>+ $dp[i-1][j+2]$ //上一点数的牌选了两张<br>+ $dp[i-1][j+3]$ //上一点数的牌选了三张<br>+ $dp[i-1][j+4]$ //上一点数的牌选了四张</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> dp[<span class="number">14</span>][<span class="number">14</span>]=&#123;<span class="number">0</span>&#125;; <span class="comment">//dp[i][j]：选完i点数的牌，剩余j张牌待选时的组合数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">9</span>;i&lt;=<span class="number">13</span>;i++) &#123;</span><br><span class="line">        dp[<span class="number">1</span>][i]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">13</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">13</span>;j++) &#123;</span><br><span class="line">            <span class="comment">//状态转移方程 </span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=<span class="number">4</span>&amp;&amp;j+k&lt;=<span class="number">13</span>;k++) &#123;</span><br><span class="line">                dp[i][j]+=dp[i<span class="number">-1</span>][j+k];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;dp[<span class="number">13</span>][<span class="number">0</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>3598180</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="递归" scheme="http://www.pzijigame.com/tags/%E9%80%92%E5%BD%92/"/>
    
      <category term="动态规划" scheme="http://www.pzijigame.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2015年第六届省赛 C/C++ B组 03 三羊献瑞</title>
    <link href="http://www.pzijigame.com/2021-03-23-LANQIAO201503.html"/>
    <id>http://www.pzijigame.com/2021-03-23-LANQIAO201503.html</id>
    <published>2021-03-23T00:41:15.000Z</published>
    <updated>2021-03-24T00:09:12.365Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>观察下面的加法算式：<br><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/201503.jpg"><br>其中，相同的汉字代表相同的数字，不同的汉字代表不同的数字。<br>请你填写“三羊献瑞”所代表的4位数字（答案唯一），不要填写任何多余内容。</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>分析可得汉字‘三’代表数字‘1’；汉字‘祥’代表的数字不小于8；汉字‘辉’和汉字‘瑞’不可能代表数字‘0’，然后使用全排列函数next_permutation()即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">9</span>]=&#123;<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;; <span class="comment">//a[0]-a[6]分别代表羊、献、瑞、祥、生、辉、气 </span></span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[<span class="number">3</span>]&gt;=<span class="number">8</span> &amp;&amp; a[<span class="number">2</span>]!=<span class="number">0</span> &amp;&amp; a[<span class="number">5</span>]!=<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> x=<span class="number">1</span>*<span class="number">1000</span>+a[<span class="number">0</span>]*<span class="number">100</span>+a[<span class="number">1</span>]*<span class="number">10</span>+a[<span class="number">2</span>];</span><br><span class="line">            <span class="keyword">int</span> y=a[<span class="number">3</span>]*<span class="number">1000</span>+a[<span class="number">2</span>]*<span class="number">100</span>+a[<span class="number">4</span>]*<span class="number">10</span>+a[<span class="number">5</span>];</span><br><span class="line">            <span class="keyword">int</span> z=<span class="number">1</span>*<span class="number">10000</span>+a[<span class="number">0</span>]*<span class="number">1000</span>+a[<span class="number">4</span>]*<span class="number">100</span>+a[<span class="number">2</span>]*<span class="number">10</span>+a[<span class="number">6</span>];</span><br><span class="line">            <span class="keyword">if</span>(x+y == z) &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="number">1</span>&lt;&lt;a[<span class="number">0</span>]&lt;&lt;a[<span class="number">1</span>]&lt;&lt;a[<span class="number">2</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span>(next_permutation(a,a+<span class="number">9</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>1085</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="全排列" scheme="http://www.pzijigame.com/tags/%E5%85%A8%E6%8E%92%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2014年第五届省赛 C/C++ B组 10 小朋友排队</title>
    <link href="http://www.pzijigame.com/2021-03-19-LANQIAO201410.html"/>
    <id>http://www.pzijigame.com/2021-03-19-LANQIAO201410.html</id>
    <published>2021-03-19T01:54:20.000Z</published>
    <updated>2021-03-19T02:21:04.224Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>n个小朋友站成一排。现在要把他们按身高从低到高的顺序排列，但是每次只能交换位置相邻的两个小朋友。每个小朋友都有一个不高兴的程度。开始的时候，所有小朋友的不高兴程度都是0。如果某个小朋友第一次被要求交换，则他的不高兴程度增加1，如果第二次要求他交换，则他的不高兴程度增加2（即不高兴程度为3），依次类推。当要求某个小朋友第k次交换时，他的不高兴程度增加k。请问，要让所有小朋友按从低到高排队，他们的不高兴程度之和最小是多少。如果有两个小朋友身高一样，则他们谁站在谁前面是没有关系的。<br>输入的第一行包含一个整数n，表示小朋友的个数。<br>第二行包含 n 个整数 H1 H2 … Hn，分别表示每个小朋友的身高。<br>输出一行，包含一个整数，表示小朋友的不高兴程度和的最小值。<br>例如，输入：<br>3<br>3 2 1<br>程序应该输出：<br>9<br>首先交换身高为3和2的小朋友，再交换身高为3和1的小朋友，再交换身高为2和1的小朋友，每个小朋友的不高兴程度都是3，总和为9。<br>对于10%的数据，1&lt;=n&lt;=10；<br>对于30%的数据，1&lt;=n&lt;=1000；<br>对于50%的数据，1&lt;=n&lt;=10000；<br>对于100%的数据，1&lt;=n&lt;=100000，0&lt;=Hi&lt;=1000000。</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>小朋友的最小交换次数为小朋友的身高在逆序对（右边比其小或左边比其大）中出现的次数。<br>暴力枚举计算逆序对，只能通过55%，需要使用树状数组。<a href="https://blog.csdn.net/Small_Orange_glory/article/details/81290634">树状数组入门</a></p><h3 id="暴力枚举"><a href="#暴力枚举" class="headerlink" title="暴力枚举"></a>暴力枚举</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,h[<span class="number">100000</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;h[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> numR,numL;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        numR=numL=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(h[j] &lt; h[i]) &#123;</span><br><span class="line">                numR++; <span class="comment">//右边比起小 </span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i<span class="number">-1</span>;j&gt;=<span class="number">0</span>;j--) &#123;</span><br><span class="line">            <span class="keyword">if</span>(h[j] &gt; h[i]) &#123;</span><br><span class="line">                numL++; <span class="comment">//左边比起大 </span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sum+=(<span class="number">1</span>+numR+numL)*(numR+numL)/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用树状数组"><a href="#使用树状数组" class="headerlink" title="使用树状数组"></a>使用树状数组</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) x&amp;(-x) <span class="comment">//lowbit(x)=2^k,k为x的二进制中从最低位到高位连续零的长度</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> maxh=<span class="number">-1</span>,tree[<span class="number">1000001</span>]; <span class="comment">//树状数组下标为身高，原数组保存每个身高的小朋友个数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> val)</span> </span>&#123; <span class="comment">//更新树状数组</span></span><br><span class="line">    <span class="keyword">while</span>(x &lt;= maxh+<span class="number">1</span>) &#123;</span><br><span class="line">        tree[x]+=val;</span><br><span class="line">        x+=lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getsum</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123; <span class="comment">//通过树状数组计算原数组前x项和，这里即为小于等于h[i]的数据个数</span></span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        sum+=tree[x];</span><br><span class="line">        x-=lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,h[<span class="number">100000</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;h[i];</span><br><span class="line">        maxh=<span class="built_in">max</span>(maxh,h[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> swap[<span class="number">100000</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        update(h[i]+<span class="number">1</span>,<span class="number">1</span>); <span class="comment">//为什么是h[i]+1？树状数组下标从1开始，而h[i]可能为0</span></span><br><span class="line">        swap[i]=i+<span class="number">1</span>-getsum(h[i]+<span class="number">1</span>); <span class="comment">//计算左边比其大的数据个数，等于左边数据总个数-小于等于其的数据个数</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(tree,<span class="number">0</span>,<span class="keyword">sizeof</span>(tree));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) &#123;</span><br><span class="line">        update(h[i]+<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">        swap[i]+=getsum(h[i]); <span class="comment">//计算右边比其小的数据个数</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        res+=(<span class="number">1</span>+swap[i])*swap[i]/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="逆序对" scheme="http://www.pzijigame.com/tags/%E9%80%86%E5%BA%8F%E5%AF%B9/"/>
    
      <category term="树状数组" scheme="http://www.pzijigame.com/tags/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2014年第五届省赛 C/C++ B组 09 地宫取宝</title>
    <link href="http://www.pzijigame.com/2021-03-19-LANQIAO201409.html"/>
    <id>http://www.pzijigame.com/2021-03-19-LANQIAO201409.html</id>
    <published>2021-03-19T01:01:54.000Z</published>
    <updated>2021-03-23T12:42:19.738Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>X国王有一个地宫宝库。是 n x m 个格子的矩阵。每个格子放一件宝贝。每个宝贝贴着价值标签。地宫的入口在左上角，出口在右下角。小明被带到地宫的入口，国王要求他只能向右或向下行走。走过某个格子时，如果那个格子中的宝贝价值比小明手中任意宝贝价值都大，小明就可以拿起它（当然，也可以不拿）。当小明走到出口时，如果他手中的宝贝恰好是k件，则这些宝贝就可以送给小明。请你帮小明算一算，在给定的局面下，他有多少种不同的行动方案能获得这k件宝贝。<br>输入一行3个整数，用空格分开：n m k(1&lt;=n,m&lt;=50, 1&lt;=k&lt;=12)<br>接下来有 n 行数据，每行有 m 个整数 Ci (0&lt;=Ci&lt;=12)代表这个格子上的宝物的价值。<br>要求输出一个整数，表示正好取k个宝贝的行动方案数。该数字可能很大，输出它对 1000000007 取模的结果。<br>例如，输入：<br>2 2 2<br>1 2<br>2 1<br>程序应该输出：<br>2<br>再例如，输入：<br>2 3 2<br>1 2 3<br>2 1 5<br>程序应该输出：<br>14</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>使用递归算法，但若仅使用深度优先搜索算法，只能通过50%，需要使用记忆化搜索。</p><h3 id="深度优先搜索"><a href="#深度优先搜索" class="headerlink" title="深度优先搜索"></a>深度优先搜索</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k,sum=<span class="number">0</span>,mapVal[<span class="number">50</span>][<span class="number">50</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">int</span> maxVal,<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i==n<span class="number">-1</span> &amp;&amp; j==m<span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="comment">//走到出口时手中已有k件宝贝 或 手中有k-1件宝贝且出口格子中的宝贝价值比小明手中任意宝贝价值都大</span></span><br><span class="line">        <span class="keyword">if</span>(num==k || maxVal&lt;mapVal[i][j]&amp;&amp;num==k<span class="number">-1</span>) &#123;</span><br><span class="line">            sum++;</span><br><span class="line">            sum%=<span class="number">1000000007</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(i &lt; n<span class="number">-1</span>) &#123; <span class="comment">//能够向下走 </span></span><br><span class="line">        <span class="keyword">if</span>(maxVal &lt; mapVal[i][j]) &#123;</span><br><span class="line">            dfs(i+<span class="number">1</span>,j,mapVal[i][j],num+<span class="number">1</span>); <span class="comment">//拿起宝贝向下走 </span></span><br><span class="line">        &#125;</span><br><span class="line">        dfs(i+<span class="number">1</span>,j,maxVal,num); <span class="comment">//不拿起宝贝向下走 </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j &lt; m<span class="number">-1</span>) &#123; <span class="comment">//能够向右走 </span></span><br><span class="line">        <span class="keyword">if</span>(maxVal &lt; mapVal[i][j]) &#123;</span><br><span class="line">            dfs(i,j+<span class="number">1</span>,mapVal[i][j],num+<span class="number">1</span>); <span class="comment">//拿起宝贝向右走 </span></span><br><span class="line">        &#125;</span><br><span class="line">        dfs(i,j+<span class="number">1</span>,maxVal,num); <span class="comment">//不拿起宝贝向右走 </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++) &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;mapVal[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="深度优先搜索-记忆化搜索"><a href="#深度优先搜索-记忆化搜索" class="headerlink" title="深度优先搜索+记忆化搜索"></a>深度优先搜索+记忆化搜索</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k,mapVal[<span class="number">50</span>][<span class="number">50</span>],dp[<span class="number">50</span>][<span class="number">50</span>][<span class="number">13</span>][<span class="number">13</span>]; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">int</span> maxVal,<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(dp[i][j][maxVal+<span class="number">1</span>][num] != <span class="number">-1</span>) &#123; <span class="comment">//若不等于-1，则表示已搜索过</span></span><br><span class="line">        <span class="keyword">return</span> dp[i][j][maxVal+<span class="number">1</span>][num];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(i==n<span class="number">-1</span> &amp;&amp; j==m<span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(num==k || maxVal&lt;mapVal[i][j]&amp;&amp;num==k<span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> dp[i][j][maxVal+<span class="number">1</span>][num]=<span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> dp[i][j][maxVal+<span class="number">1</span>][num]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(i &lt; n<span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(maxVal &lt; mapVal[i][j]) &#123;</span><br><span class="line">            sum+=dfs(i+<span class="number">1</span>,j,mapVal[i][j],num+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        sum+=dfs(i+<span class="number">1</span>,j,maxVal,num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j &lt; m<span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(maxVal &lt; mapVal[i][j]) &#123;</span><br><span class="line">            sum+=dfs(i,j+<span class="number">1</span>,mapVal[i][j],num+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        sum+=dfs(i,j+<span class="number">1</span>,maxVal,num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//宝贝价值可能为0，所以手中已有宝贝的最大价值初始值为-1</span></span><br><span class="line">    <span class="comment">//数组下标最小值为0，所以是maxVal+1</span></span><br><span class="line">    <span class="keyword">return</span> dp[i][j][maxVal+<span class="number">1</span>][num]=sum%<span class="number">1000000007</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++) &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;mapVal[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(dp,<span class="number">-1</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;dfs(<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="递归" scheme="http://www.pzijigame.com/tags/%E9%80%92%E5%BD%92/"/>
    
      <category term="深度优先搜索" scheme="http://www.pzijigame.com/tags/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/"/>
    
      <category term="记忆化搜索" scheme="http://www.pzijigame.com/tags/%E8%AE%B0%E5%BF%86%E5%8C%96%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2014年第五届省赛 C/C++ B组 08 蚂蚁感冒</title>
    <link href="http://www.pzijigame.com/2021-03-19-LANQIAO201408.html"/>
    <id>http://www.pzijigame.com/2021-03-19-LANQIAO201408.html</id>
    <published>2021-03-19T00:35:45.000Z</published>
    <updated>2021-03-24T00:13:00.542Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>长100厘米的细长直杆子上有n只蚂蚁。它们的头有的朝左，有的朝右。 每只蚂蚁都只能沿着杆子向前爬，速度是1厘米/秒。当两只蚂蚁碰面时，它们会同时掉头往相反的方向爬行。这些蚂蚁中，有1只蚂蚁感冒了，并且在和其它蚂蚁碰面时，会把感冒传染给碰到的蚂蚁。请你计算，当所有蚂蚁都爬离杆子时，有多少只蚂蚁患上了感冒。<br>第一行输入一个整数n (1 &lt; n &lt; 50), 表示蚂蚁的总数。<br>接着的一行是n个用空格分开的整数 Xi (-100 &lt; Xi &lt; 100), Xi的绝对值表示蚂蚁离杆子左边端点的距离。正值表示头朝右，负值表示头朝左，数据中不会出现0值，也不会出现两只蚂蚁占用同一位置。其中，第一个数据代表的蚂蚁感冒了。<br>要求输出1个整数，表示最后感冒蚂蚁的数目。<br>例如，输入：<br>3<br>5 -2 8<br>程序应输出：<br>1<br>再例如，输入：<br>5<br>-10 8 -20 12 25<br>程序应输出：<br>3</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/201408.jpg"><br>无视不同蚂蚁的区别，只根据是否感冒分类。与感冒蚂蚁相遇后，两只蚂蚁都为感冒蚂蚁，为同一类，可以认为是保持原样擦肩而过。<br>那么我们就可以得到两种情况：<br>1.当首只蚂蚁右行，若其右边存在左行蚂蚁，则所有右边左行的蚂蚁全部感冒，然后所有左边右行的蚂蚁也全部感冒；<br>2.当首只蚂蚁左行，若其左边存在右行蚂蚁，则所有左边右行的蚂蚁全部感冒，然后所有右边左行的蚂蚁也全部感冒。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,a[<span class="number">50</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> sumL=<span class="number">0</span>,sumR=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">abs</span>(a[<span class="number">0</span>])&gt;<span class="built_in">abs</span>(a[i]) &amp;&amp; a[i]&gt;<span class="number">0</span>) &#123;</span><br><span class="line">            sumL++; <span class="comment">//所有左边右行蚂蚁的数量</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">abs</span>(a[<span class="number">0</span>])&lt;<span class="built_in">abs</span>(a[i]) &amp;&amp; a[i]&lt;<span class="number">0</span>) &#123;</span><br><span class="line">            sumR++; <span class="comment">//所有右边左行蚂蚁的数量</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a[<span class="number">0</span>]&gt;<span class="number">0</span> &amp;&amp; sumR&gt;<span class="number">0</span> || a[<span class="number">0</span>]&lt;<span class="number">0</span> &amp;&amp; sumL&gt;<span class="number">0</span>) &#123; <span class="comment">//存在第一次相遇</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="number">1</span>+sumL+sumR&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="模拟" scheme="http://www.pzijigame.com/tags/%E6%A8%A1%E6%8B%9F/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2014年第五届省赛 C/C++ B组 07 六角填数</title>
    <link href="http://www.pzijigame.com/2021-03-18-LANQIAO201407.html"/>
    <id>http://www.pzijigame.com/2021-03-18-LANQIAO201407.html</id>
    <published>2021-03-18T01:37:10.000Z</published>
    <updated>2021-03-24T00:14:00.932Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>如图所示六角形中，填入1~12的数字。<br>使得每条直线上的数字之和都相同。<br>图中，已经替你填好了3个数字，请你计算星号位置所代表的数字是多少？<br><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/201407.jpg"></p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>使用全排列函数next_permutation()或使用递归。<br>注意六条直线上的数字之和（每个顶点计算了两次）等于整个六角形上的数字之和的两倍，所以每条直线上的数字之和为(1+12)*12/6=26。</p><h3 id="使用next-permutation-函数"><a href="#使用next-permutation-函数" class="headerlink" title="使用next_permutation()函数"></a>使用next_permutation()函数</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">9</span>]=&#123;<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>&#125;;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">int</span> sum1=<span class="number">1</span>+a[<span class="number">0</span>]+a[<span class="number">3</span>]+a[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">int</span> sum2=<span class="number">1</span>+a[<span class="number">1</span>]+a[<span class="number">4</span>]+a[<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">int</span> sum3=a[<span class="number">5</span>]+a[<span class="number">6</span>]+a[<span class="number">7</span>]+a[<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">int</span> sum4=<span class="number">3</span>+a[<span class="number">6</span>]+a[<span class="number">3</span>]+<span class="number">8</span>;</span><br><span class="line">        <span class="keyword">int</span> sum5=<span class="number">3</span>+a[<span class="number">7</span>]+a[<span class="number">4</span>]+a[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">int</span> sum6=<span class="number">8</span>+a[<span class="number">0</span>]+a[<span class="number">1</span>]+a[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">if</span>(sum1==<span class="number">26</span> &amp;&amp; sum2==<span class="number">26</span> &amp;&amp; sum3==<span class="number">26</span> &amp;&amp; sum4==<span class="number">26</span> &amp;&amp; sum5==<span class="number">26</span> &amp;&amp; sum6==<span class="number">26</span>) &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;a[<span class="number">3</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span>(next_permutation(a,a+<span class="number">9</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> res[<span class="number">9</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">9</span>]=&#123;<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">9</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">9</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> sum1=<span class="number">1</span>+res[<span class="number">0</span>]+res[<span class="number">3</span>]+res[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">int</span> sum2=<span class="number">1</span>+res[<span class="number">1</span>]+res[<span class="number">4</span>]+res[<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">int</span> sum3=res[<span class="number">5</span>]+res[<span class="number">6</span>]+res[<span class="number">7</span>]+res[<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">int</span> sum4=<span class="number">3</span>+res[<span class="number">6</span>]+res[<span class="number">3</span>]+<span class="number">8</span>;</span><br><span class="line">        <span class="keyword">int</span> sum5=<span class="number">3</span>+res[<span class="number">7</span>]+res[<span class="number">4</span>]+res[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">int</span> sum6=<span class="number">8</span>+res[<span class="number">0</span>]+res[<span class="number">1</span>]+res[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">if</span>(sum1==<span class="number">26</span> &amp;&amp; sum2==<span class="number">26</span> &amp;&amp; sum3==<span class="number">26</span> &amp;&amp; sum4==<span class="number">26</span> &amp;&amp; sum5==<span class="number">26</span> &amp;&amp; sum6==<span class="number">26</span>) &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;res[<span class="number">3</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(vis[i] == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        vis[i]=<span class="number">1</span>;</span><br><span class="line">        res[n]=a[i];</span><br><span class="line">        dfs(n+<span class="number">1</span>);</span><br><span class="line">        vis[i]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    dfs(<span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>10</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="递归" scheme="http://www.pzijigame.com/tags/%E9%80%92%E5%BD%92/"/>
    
      <category term="深度优先搜索" scheme="http://www.pzijigame.com/tags/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/"/>
    
      <category term="全排列" scheme="http://www.pzijigame.com/tags/%E5%85%A8%E6%8E%92%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2014年第五届省赛 C/C++ B组 02 切面条</title>
    <link href="http://www.pzijigame.com/2021-03-18-LANQIAO201402.html"/>
    <id>http://www.pzijigame.com/2021-03-18-LANQIAO201402.html</id>
    <published>2021-03-18T01:07:43.000Z</published>
    <updated>2021-03-18T01:17:46.970Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>一根高筋拉面，中间切一刀，可以得到2根面条。<br>如果先对折1次，中间切一刀，可以得到3根面条。<br>如果连续对折2次，中间切一刀，可以得到5根面条。<br>那么，连续对折10次，中间切一刀，会得到多少面条呢？</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><table><thead><tr><th align="center">对折次数</th><th align="center">面条根数</th><th align="center">规律</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">3</td><td align="center">2^2 - (2^1 - 1)</td></tr><tr><td align="center">2</td><td align="center">5</td><td align="center">2^3 - (2^2 - 1)</td></tr><tr><td align="center">3</td><td align="center">9</td><td align="center">2^4 - (2^3 - 1)</td></tr><tr><td align="center">…</td><td align="center">…</td><td align="center">…</td></tr><tr><td align="center">n</td><td align="center">2^n + 1</td><td align="center">2^(n+1) - (2^n - 1)</td></tr></tbody></table><h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>1025</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="找规律" scheme="http://www.pzijigame.com/tags/%E6%89%BE%E8%A7%84%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2013年第四届省赛 C/C++ B组 10 连号区间数</title>
    <link href="http://www.pzijigame.com/2021-03-13-LANQIAO201310.html"/>
    <id>http://www.pzijigame.com/2021-03-13-LANQIAO201310.html</id>
    <published>2021-03-13T08:45:37.000Z</published>
    <updated>2021-03-18T01:08:41.428Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小明这些天一直在思考这样一个奇怪而有趣的问题：<br>在1~N的某个全排列中有多少个连号区间呢？这里所说的连号区间的定义是：<br>如果区间[L, R]里的所有元素（即此排列的第L个到第R个元素）递增排序后能得到一个长度为R-L+1的“连续”数列，则称这个区间为连号区间。<br>当N很小的时候，小明可以很快地算出答案，但是当N变大的时候，问题就不是那么简单了，现在小明需要你的帮助。<br>输入格式：<br>第一行是一个正整数N (1 &lt;= N &lt;= 50000)，表示全排列的规模。<br>第二行是N个不同的数字Pi(1 &lt;= Pi &lt;= N)，表示这N个数字的某一全排列。<br>输出格式：<br>输出一个整数，表示不同连号区间的数目。<br>示例：<br>用户输入：<br>4<br>3 2 4 1<br>程序应输出：<br>7<br>用户输入：<br>5<br>3 4 2 5 1<br>程序应输出：<br>9<br>解释：<br>第一个用例中，有7个连号区间分别是：[1,1], [1,2], [1,3], [1,4], [2,2], [3,3], [4,4]<br>第二个用例中，有9个连号区间分别是：[1,1], [1,2], [1,3], [1,4], [1,5], [2,2], [3,3], [4,4], [5,5]</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>直接将区间[L, R]里的元素排序后判断是否“连续”，只能通过67%。<br>我们发现若R - L = maxNum - minNum（maxNum、minNum分别为区间[L, R]里的最大元素和最小元素），则区间[L, R]为连号区间，且若L=R，则区间[L, R]为连号区间。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,maxNum,minNum,sum=<span class="number">0</span>,arr[<span class="number">50000</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++) &#123;</span><br><span class="line">        maxNum=arr[i];</span><br><span class="line">        minNum=arr[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[j] &gt; maxNum) &#123;</span><br><span class="line">                maxNum=arr[j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(arr[j] &lt; minNum) &#123;</span><br><span class="line">                minNum=arr[j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(maxNum-minNum == j-i) &#123; </span><br><span class="line">                sum++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum+n&lt;&lt;<span class="built_in">endl</span>; <span class="comment">//若L=R，则区间[L, R]为连号区间 </span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="找规律" scheme="http://www.pzijigame.com/tags/%E6%89%BE%E8%A7%84%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2013年第四届省赛 C/C++ B组 09 带分数</title>
    <link href="http://www.pzijigame.com/2021-03-13-LANQIAO201309.html"/>
    <id>http://www.pzijigame.com/2021-03-13-LANQIAO201309.html</id>
    <published>2021-03-13T08:31:41.000Z</published>
    <updated>2021-03-23T13:08:42.627Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>100可以表示为带分数的形式：100 = 3 + 69258 / 714<br>还可以表示为：100 = 82 + 3546 / 197<br>注意特征：带分数中，数字1-9分别出现且只出现一次（不包含0）。<br>类似这样的带分数，100 有 11 种表示法。<br>题目要求：<br>从标准输入读入一个正整数N (N&lt;1000*1000)<br>程序输出该数字用数码1-9不重复不遗漏地组成带分数表示的全部种数。<br>注意：不要求输出每个表示，只统计有多少表示法！<br>例如：<br>用户输入：<br>100<br>程序输出：<br>11<br>再例如：<br>用户输入：<br>105<br>程序输出：<br>6</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>全排列问题，使用next_permutation()函数（使用do-while结构，否则会少原始情况），然后切分为a、b、c三个数，比较N与a+b/c是否相等。<br>注意a的位数最大为7位，b的位数一定大于等于c的位数且c整除b。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> arr[<span class="number">9</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getNum</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123; <span class="comment">//由数组求出该数 </span></span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x;i&lt;=y;i++) &#123;</span><br><span class="line">        num=num*<span class="number">10</span>+arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">7</span>;i++) &#123; <span class="comment">//a的位数最大为7位 </span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;<span class="number">8</span>;j++) &#123; <span class="comment">//c的位数不能为0</span></span><br><span class="line">                <span class="keyword">if</span>(j-i &gt;= <span class="number">8</span>-j) &#123;</span><br><span class="line">                    <span class="keyword">int</span> a=getNum(<span class="number">0</span>,i); <span class="comment">//a=arr[0]...arr[i]</span></span><br><span class="line">                    <span class="keyword">int</span> b=getNum(i+<span class="number">1</span>,j); <span class="comment">//b=arr[i+1]...arr[j]</span></span><br><span class="line">                    <span class="keyword">int</span> c=getNum(j+<span class="number">1</span>,<span class="number">8</span>); <span class="comment">//c=arr[j+1]..a[8]</span></span><br><span class="line">                    <span class="keyword">if</span>(b%c==<span class="number">0</span> &amp;&amp; a+b/c==n) &#123;</span><br><span class="line">                        sum++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span>(next_permutation(arr,arr+<span class="number">9</span>));</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="全排列" scheme="http://www.pzijigame.com/tags/%E5%85%A8%E6%8E%92%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2013年第四届省赛 C/C++ B组 08 翻硬币</title>
    <link href="http://www.pzijigame.com/2021-03-13-LANQIAO201308.html"/>
    <id>http://www.pzijigame.com/2021-03-13-LANQIAO201308.html</id>
    <published>2021-03-13T07:52:41.000Z</published>
    <updated>2021-03-23T13:08:33.729Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小明正在玩一个“翻硬币”的游戏。<br>桌上放着排成一排的若干硬币。我们用 * 表示正面，用 o 表示反面（是小写字母，不是零）。<br>比如，可能情形是：**oo***oooo<br>如果同时翻转左边的两个硬币，则变为：oooo***oooo<br>现在小明的问题是：如果已知了初始状态和要达到的目标状态，每次只能同时翻转相邻的两个硬币,那么对特定的局面，最少要翻动多少次呢？<br>我们约定：把翻动相邻的两个硬币叫做一步操作，那么要求：<br>程序输入：<br>两行等长的字符串，分别表示初始状态和要达到的目标状态。每行的长度&lt;1000<br>程序输出：<br>一个整数，表示最小操作步数<br>例如：<br>用户输入：<br>**********<br>o****o****<br>程序应该输出：<br>5<br>再例如：<br>用户输入：<br>*o**o***o***<br>*o***o**o***<br>程序应该输出：<br>1</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><h3 id="解法一"><a href="#解法一" class="headerlink" title="解法一"></a>解法一</h3><p>我们发现若初始状态与目标状态的第 i 个硬币正反面不同，则必然有另外一个第 j 个硬币正反面也不同（正反面不同的硬币个数必然是偶数，否则初始状态无法通过每次只能同时翻转相邻两个硬币的操作达到目标状态），且翻动 j - i 次，初始状态与目标状态的第 i 个硬币至第 j 个硬币正反面相同。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str1,str2;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;str1&gt;&gt;str2;</span><br><span class="line">    <span class="keyword">int</span> n=<span class="number">-1</span>,sum=<span class="number">0</span>; <span class="comment">//n不能取0 </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str1.<span class="built_in">size</span>();i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(str1[i] != str2[i]) &#123;</span><br><span class="line">            <span class="keyword">if</span>(n != <span class="number">-1</span>) &#123;</span><br><span class="line">                sum+=i-n;</span><br><span class="line">                n=<span class="number">-1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                n=i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解法二"><a href="#解法二" class="headerlink" title="解法二"></a>解法二</h3><p>使用模拟法，循环比较初始状态与目标状态每个硬币的正反面是否相同，若第 i 个硬币正反面不同，则进行翻转操作，翻转初始状态的第 i 个硬币和第 i+1 个硬币，翻转后初始状态与目标状态的第 i 个硬币正反面必然相同，所以可以只翻转初始状态的第 i+1 个硬币，翻转后继续比较第 i+1 个硬币。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str1,str2;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;str1&gt;&gt;str2;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str2.<span class="built_in">size</span>();i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(str1[i] != str2[i]) &#123;</span><br><span class="line">            <span class="keyword">if</span>(str1[i+<span class="number">1</span>] == <span class="string">&#x27;*&#x27;</span>) &#123;</span><br><span class="line">                str1[i+<span class="number">1</span>]=<span class="string">&#x27;o&#x27;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                str1[i+<span class="number">1</span>]=<span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="找规律" scheme="http://www.pzijigame.com/tags/%E6%89%BE%E8%A7%84%E5%BE%8B/"/>
    
      <category term="模拟" scheme="http://www.pzijigame.com/tags/%E6%A8%A1%E6%8B%9F/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2013年第四届省赛 C/C++ B组 07 错误票据</title>
    <link href="http://www.pzijigame.com/2021-03-13-LANQIAO201307.html"/>
    <id>http://www.pzijigame.com/2021-03-13-LANQIAO201307.html</id>
    <published>2021-03-13T01:48:48.000Z</published>
    <updated>2021-03-13T07:47:35.484Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>某涉密单位下发了某种票据，并要在年终全部收回。<br>每张票据有唯一的ID号。全年所有票据的ID号是连续的，但ID的开始数码是随机选定的。<br>因为工作人员疏忽，在录入ID号的时候发生了一处错误，造成了某个ID断号，另外一个ID重号。<br>你的任务是通过编程，找出断号的ID和重号的ID。<br>假设断号不可能发生在最大和最小号。<br>要求程序首先输入一个整数N(N&lt;100)表示后面数据行数。<br>接着读入N行数据。<br>每行数据长度不等，是用空格分开的若干个（不大于100个）正整数（不大于100000）<br>每个整数代表一个ID号。<br>要求程序输出1行，含两个整数m n，用空格分隔。<br>其中，m表示断号ID，n表示重号ID<br>例如：<br>用户输入：<br>2<br>5 6 8 11 9<br>10 12 9<br>则程序输出：<br>7 9<br>再例如：<br>用户输入：<br>6<br>164 178 108 109 180 155 141 159 104 182 179 118 137 184 115 124 125 129 168 196<br>172 189 127 107 112 192 103 131 133 169 158<br>128 102 110 148 139 157 140 195 197<br>185 152 135 106 123 173 122 136 174 191 145 116 151 143 175 120 161 134 162 190<br>149 138 142 146 199 126 165 156 153 193 144 166 170 121 171 132 101 194 187 188<br>113 130 176 154 177 120 117 150 114 183 186 181 100 163 160 167 147 198 111 119<br>则程序输出：<br>105 120</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>数据行数N有什么用？<br>注意每行数据以换行符’\n’结束，所以可以通过检测是否输入换行符’\n’来确定每行数据是否输入结束。<br>使用哈希表记录每个ID号输入的次数后或排序后寻找断号ID和重号ID。</p><h3 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,t,minNum=<span class="number">100000</span>,maxNum=<span class="number">0</span>,hash[<span class="number">100001</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--) &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;t) &#123;</span><br><span class="line">            <span class="keyword">if</span>(t&lt;minNum) &#123;</span><br><span class="line">                minNum=t;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;maxNum) &#123;</span><br><span class="line">                maxNum=t;</span><br><span class="line">            &#125;</span><br><span class="line">            hash[t]++;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">cin</span>.<span class="built_in">get</span>() == <span class="string">&#x27;\n&#x27;</span>) &#123; <span class="comment">//每行数据以换行符&#x27;\n&#x27;结束</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> a,b; <span class="comment">//a为断号ID，b为重号ID</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=minNum;i&lt;=maxNum;i++) &#123; <span class="comment">//使用minNum和maxNum保存最大ID号和最小ID号，从而减少循环次数</span></span><br><span class="line">        <span class="keyword">if</span>(hash[i] == <span class="number">0</span>) &#123;</span><br><span class="line">            a=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(hash[i] &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">            b=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;a&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;b&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,i=<span class="number">0</span>,a[<span class="number">10000</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--) &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;a[i++]) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">cin</span>.<span class="built_in">get</span>() == <span class="string">&#x27;\n&#x27;</span>) &#123; <span class="comment">//每行数据以换行符&#x27;\n&#x27;结束 </span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a,a+i);</span><br><span class="line">    <span class="keyword">int</span> x,y; <span class="comment">//x为断号ID，y为重号ID</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[j]+<span class="number">1</span> &lt; a[j+<span class="number">1</span>]) &#123;</span><br><span class="line">            x=a[j]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a[j] == a[j+<span class="number">1</span>]) &#123;</span><br><span class="line">            y=a[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;y&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="哈希表" scheme="http://www.pzijigame.com/tags/%E5%93%88%E5%B8%8C%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2013年第四届省赛 C/C++ B组 04 黄金连分数</title>
    <link href="http://www.pzijigame.com/2021-03-12-LANQIAO201304.html"/>
    <id>http://www.pzijigame.com/2021-03-12-LANQIAO201304.html</id>
    <published>2021-03-12T13:24:55.000Z</published>
    <updated>2021-03-23T12:33:23.030Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>黄金分割数0.61803… 是个无理数，这个常数十分重要，在许多工程问题中会出现。有时需要把这个数字求得很精确。<br>对于某些精密工程，常数的精度很重要。也许你听说过哈勃太空望远镜，它首次升空后就发现了一处人工加工错误，对那样一个庞然大物，其实只是镜面加工时有比头发丝还细许多倍的一处错误而、已，却使它成了“近视眼”！<br>言归正传，我们如何求得黄金分割数的尽可能精确的值呢？有许多方法。<br>比较简单的一种是用连分数：</p><pre><code>                 1黄金数 = --------------------                    1          1 + --------------                     1            1 + ------------                      1              1 + ----------                   1 + ...</code></pre><p>这个连分数计算的“层数”越多，它的值越接近黄金分割数。<br>请你利用这一特性，求出黄金分割数的足够精确值，要求四舍五入到小数点后100位。<br>小数点后3位的值为：0.618<br>小数点后4位的值为：0.6180<br>小数点后5位的值为：0.61803<br>小数点后7位的值为：0.6180340<br>（注意尾部的0，不能忽略）</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>我们发现1/2 2/3 3/5 5/8…为斐波那契数列前一项除以后一项，相除模拟手算除法，先整除，然后用余数乘以10继续整除。<br>但由于C/C++整型数据的限制（unsigned long long取值范围为[0,2^64-1]），无法精确到小数点后100位，除非自己创建大数类。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> a[<span class="number">100</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;<span class="number">100</span>;i++) &#123;</span><br><span class="line">        a[i]=a[i<span class="number">-1</span>]+a[i<span class="number">-2</span>];</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;a[i]&lt;&lt;<span class="built_in">endl</span>; <span class="comment">//a[94]越界</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> x=a[<span class="number">88</span>],y=a[<span class="number">89</span>];</span><br><span class="line">    <span class="comment">// 模拟手算除法：先整除，然后用余数乘以10继续整除</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">102</span>;i++) &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;x/y;</span><br><span class="line">        x=(x%y)*<span class="number">10</span>; <span class="comment">//乘10可能导致越界，测试得x=a[88],y=a[89]，但只能精确到小数点后36位</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大数处理推荐使用Java的BigInteger类，填空题可以使用Java、Python，哪种语言解决这道题简单用哪种！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lanqiao2013;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">BigInteger类相关运算</span></span><br><span class="line"><span class="comment">a+b:a.add(b)</span></span><br><span class="line"><span class="comment">a-b:a.subtract(b)</span></span><br><span class="line"><span class="comment">a*b:a.multiply(b)</span></span><br><span class="line"><span class="comment">a/b:a.divide(b)</span></span><br><span class="line"><span class="comment">a%b:a.mod(b)</span></span><br><span class="line"><span class="comment">a==b:a.compareTo(b)==0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">D</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        BigInteger a, b;</span><br><span class="line">        BigInteger arr1[] = <span class="keyword">new</span> BigInteger[<span class="number">102</span>];</span><br><span class="line">        BigInteger arr2[] = <span class="keyword">new</span> BigInteger[<span class="number">102</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> f = <span class="number">1</span>, f2; <span class="comment">//f标志是否为第一次循环，f2标志是否精确到了小数点后100位</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> end = <span class="number">100</span>; end &lt; <span class="number">200</span>; end++) &#123; <span class="comment">//end为斐波拉契数列循环次数</span></span><br><span class="line">            a = BigInteger.ZERO;</span><br><span class="line">            b = BigInteger.ONE;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 计算斐波拉契数列</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; end; i++) &#123;</span><br><span class="line">                a = a.add(b);</span><br><span class="line">                b = b.add(a);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 模拟手算除法：先整除，然后用余数乘以10继续整除</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">102</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (f == <span class="number">1</span>) &#123;</span><br><span class="line">                    arr1[i] = a.divide(b);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    arr2[i] = a.divide(b);</span><br><span class="line">                &#125;</span><br><span class="line">                a = a.mod(b).multiply(BigInteger.TEN);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (f == <span class="number">0</span>) &#123;</span><br><span class="line">                f2 = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">102</span>; i++) &#123; <span class="comment">//判断是否精确到了小数点后100位</span></span><br><span class="line">                    System.out.print(arr1[i]);</span><br><span class="line">                    <span class="keyword">if</span> (arr1[i].compareTo(arr2[i]) != <span class="number">0</span>) &#123;</span><br><span class="line">                        arr1[i] = arr2[i];</span><br><span class="line">                        f2 = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println();</span><br><span class="line">                <span class="keyword">if</span> (f2 == <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            f = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>0.6180339887498948482045868343656381177203091798057628621354486227052604628189024497072072041893911375</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="大数处理" scheme="http://www.pzijigame.com/tags/%E5%A4%A7%E6%95%B0%E5%A4%84%E7%90%86/"/>
    
      <category term="斐波那契数列" scheme="http://www.pzijigame.com/tags/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2013年第四届省赛 C/C++ B组 03 第39级台阶</title>
    <link href="http://www.pzijigame.com/2021-03-12-LANQIAO201303.html"/>
    <id>http://www.pzijigame.com/2021-03-12-LANQIAO201303.html</id>
    <published>2021-03-12T13:04:39.000Z</published>
    <updated>2021-03-12T14:39:31.779Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小明刚刚看完电影《第39级台阶》，离开电影院的时候，他数了数礼堂前的台阶数，恰好是39级!<br>站在台阶前，他突然又想着一个问题：<br>如果我每一步只能迈上1个或2个台阶。先迈左脚，然后左右交替，最后一步是迈右脚，也就是说一共要走偶数步。<br>那么，上完39级台阶，有多少种不同的上法呢？<br>请你利用计算机的优势，帮助小明寻找答案。<br>要求提交的是一个整数。</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>使用递归算法，以迈上1个台阶或迈上2个台阶进行递归，递归的终止条件是上完39级台阶，若一共走了偶数步则为一种上法。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> <span class="built_in">step</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(num &gt; <span class="number">39</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(num==<span class="number">39</span> &amp;&amp; <span class="built_in">step</span>%<span class="number">2</span>==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> fun(num+<span class="number">1</span>,<span class="built_in">step</span>+<span class="number">1</span>)+fun(num+<span class="number">2</span>,<span class="built_in">step</span>+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;fun(<span class="number">0</span>,<span class="number">0</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>51167078</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="递归" scheme="http://www.pzijigame.com/tags/%E9%80%92%E5%BD%92/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2013年第四届省赛 C/C++ B组 01 高斯日记</title>
    <link href="http://www.pzijigame.com/2021-03-12-LANQIAO201301.html"/>
    <id>http://www.pzijigame.com/2021-03-12-LANQIAO201301.html</id>
    <published>2021-03-12T12:33:32.000Z</published>
    <updated>2021-03-12T14:39:07.822Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>大数学家高斯有个好习惯：无论如何都要记日记。<br>他的日记有个与众不同的地方，他从不注明年月日，而是用一个整数代替，比如：4210<br>后来人们知道，那个整数就是日期，它表示那一天是高斯出生后的第几天。这或许也是个好习惯，它时时刻刻提醒着主人：日子又过去一天，还有多少时光可以用于浪费呢？<br>高斯出生于：1777年4月30日。<br>在高斯发现的一个重要定理的日记上标注着：5343，因此可算出那天是：1791年12月15日。<br>高斯获得博士学位的那天日记上标着：8113<br>请你算出高斯获得博士学位的年月日。<br>提交答案的格式是：yyyy-mm-dd，例如：1980-03-21</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>日期计算题常使用计算器自带的日期计算功能，这道题可能需要多尝试几次，但也比编程快，且准确性高。</p><h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>1799-07-16</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="日期计算" scheme="http://www.pzijigame.com/tags/%E6%97%A5%E6%9C%9F%E8%AE%A1%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 省赛 C/C++ B组 历年真题及解答</title>
    <link href="http://www.pzijigame.com/2021-03-10-LANQIAO.html"/>
    <id>http://www.pzijigame.com/2021-03-10-LANQIAO.html</id>
    <published>2021-03-10T07:15:10.000Z</published>
    <updated>2021-03-24T00:43:29.986Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="2012年第三届"><a href="#2012年第三届" class="headerlink" title="2012年第三届"></a>2012年第三届</h2><h3 id="01-微生物增殖"><a href="#01-微生物增殖" class="headerlink" title="01 微生物增殖"></a><a href="https://blog.pzijigame.com/2021-03-24-LANQIAO201201.html">01 微生物增殖</a></h3><h3 id="02-古堡算式"><a href="#02-古堡算式" class="headerlink" title="02 古堡算式"></a><a href="https://blog.pzijigame.com/2021-03-09-LANQIAO201202.html">02 古堡算式</a></h3><h3 id="03-比酒量"><a href="#03-比酒量" class="headerlink" title="03 比酒量"></a><a href="https://blog.pzijigame.com/2021-03-10-LANQIAO201203.html">03 比酒量</a></h3><h3 id="04-奇怪的比赛"><a href="#04-奇怪的比赛" class="headerlink" title="04 奇怪的比赛"></a><a href="https://blog.pzijigame.com/2021-03-10-LANQIAO201204.html">04 奇怪的比赛</a></h3><h3 id="08-密码发生器"><a href="#08-密码发生器" class="headerlink" title="08 密码发生器"></a><a href="https://blog.pzijigame.com/2021-03-10-LANQIAO201208.html">08 密码发生器</a></h3><h3 id="09-夺冠概率"><a href="#09-夺冠概率" class="headerlink" title="09 夺冠概率"></a><a href="https://blog.pzijigame.com/2021-03-10-LANQIAO201209.html">09 夺冠概率</a></h3><h3 id="10-取球游戏"><a href="#10-取球游戏" class="headerlink" title="10 取球游戏"></a><a href="https://blog.pzijigame.com/2021-03-10-LANQIAO201210.html">10 取球游戏</a></h3><h2 id="2013年第四届"><a href="#2013年第四届" class="headerlink" title="2013年第四届"></a>2013年第四届</h2><h3 id="01-高斯日记"><a href="#01-高斯日记" class="headerlink" title="01 高斯日记"></a><a href="https://blog.pzijigame.com/2021-03-12-LANQIAO201301.html">01 高斯日记</a></h3><h3 id="02-马虎的算式"><a href="#02-马虎的算式" class="headerlink" title="02 马虎的算式"></a>02 马虎的算式</h3><h3 id="03-第39级台阶"><a href="#03-第39级台阶" class="headerlink" title="03 第39级台阶"></a><a href="https://blog.pzijigame.com/2021-03-12-LANQIAO201303.html">03 第39级台阶</a></h3><h3 id="04-黄金连分数"><a href="#04-黄金连分数" class="headerlink" title="04 黄金连分数"></a><a href="https://blog.pzijigame.com/2021-03-12-LANQIAO201304.html">04 黄金连分数</a></h3><h3 id="07-错误票据"><a href="#07-错误票据" class="headerlink" title="07 错误票据"></a><a href="https://blog.pzijigame.com/2021-03-13-LANQIAO201307.html">07 错误票据</a></h3><h3 id="08-翻硬币"><a href="#08-翻硬币" class="headerlink" title="08 翻硬币"></a><a href="https://blog.pzijigame.com/2021-03-13-LANQIAO201308.html">08 翻硬币</a></h3><h3 id="09-带分数"><a href="#09-带分数" class="headerlink" title="09 带分数"></a><a href="https://blog.pzijigame.com/2021-03-13-LANQIAO201309.html">09 带分数</a></h3><h3 id="10-连号区间数"><a href="#10-连号区间数" class="headerlink" title="10 连号区间数"></a><a href="https://blog.pzijigame.com/2021-03-13-LANQIAO201310.html">10 连号区间数</a></h3><h2 id="2014年第五届"><a href="#2014年第五届" class="headerlink" title="2014年第五届"></a>2014年第五届</h2><h3 id="01-啤酒和饮料"><a href="#01-啤酒和饮料" class="headerlink" title="01 啤酒和饮料"></a>01 啤酒和饮料</h3><h3 id="02-切面条"><a href="#02-切面条" class="headerlink" title="02 切面条"></a><a href="https://blog.pzijigame.com/2021-03-18-LANQIAO201402.html">02 切面条</a></h3><h3 id="03-李白打酒-emsp-参考：递归"><a href="#03-李白打酒-emsp-参考：递归" class="headerlink" title="03 李白打酒&emsp;参考：递归"></a>03 李白打酒&emsp;参考：<a href="https://blog.pzijigame.com/tags/%E9%80%92%E5%BD%92/">递归</a></h3><h3 id="06-奇怪的分式"><a href="#06-奇怪的分式" class="headerlink" title="06 奇怪的分式"></a>06 奇怪的分式</h3><h3 id="07-六角填数"><a href="#07-六角填数" class="headerlink" title="07 六角填数"></a><a href="https://blog.pzijigame.com/2021-03-18-LANQIAO201407.html">07 六角填数</a></h3><h3 id="08-蚂蚁感冒"><a href="#08-蚂蚁感冒" class="headerlink" title="08 蚂蚁感冒"></a><a href="https://blog.pzijigame.com/2021-03-19-LANQIAO201408.html">08 蚂蚁感冒</a></h3><h3 id="09-地宫取宝"><a href="#09-地宫取宝" class="headerlink" title="09 地宫取宝"></a><a href="https://blog.pzijigame.com/2021-03-19-LANQIAO201409.html">09 地宫取宝</a></h3><h3 id="10-小朋友排队"><a href="#10-小朋友排队" class="headerlink" title="10 小朋友排队"></a><a href="https://blog.pzijigame.com/2021-03-19-LANQIAO201410.html">10 小朋友排队</a></h3><h2 id="2015年第六届"><a href="#2015年第六届" class="headerlink" title="2015年第六届"></a>2015年第六届</h2><h3 id="01-奖券数目"><a href="#01-奖券数目" class="headerlink" title="01 奖券数目"></a>01 奖券数目</h3><h3 id="02-星系炸弹-emsp-参考：日期计算"><a href="#02-星系炸弹-emsp-参考：日期计算" class="headerlink" title="02 星系炸弹&emsp;参考：日期计算"></a>02 星系炸弹&emsp;参考：<a href="https://blog.pzijigame.com/tags/%E6%97%A5%E6%9C%9F%E8%AE%A1%E7%AE%97/">日期计算</a></h3><h3 id="03-三羊献瑞"><a href="#03-三羊献瑞" class="headerlink" title="03 三羊献瑞"></a><a href="https://blog.pzijigame.com/2021-03-23-LANQIAO201503.html">03 三羊献瑞</a></h3><h3 id="06-加法变乘法"><a href="#06-加法变乘法" class="headerlink" title="06 加法变乘法"></a>06 加法变乘法</h3><h3 id="07-牌型种数"><a href="#07-牌型种数" class="headerlink" title="07 牌型种数"></a><a href="https://blog.pzijigame.com/2021-03-23-LANQIAO201507.html">07 牌型种数</a></h3><h3 id="08-移动距离"><a href="#08-移动距离" class="headerlink" title="08 移动距离"></a><a href="https://blog.pzijigame.com/2021-03-23-LANQIAO201508.html">08 移动距离</a></h3><h3 id="09-垒骰子"><a href="#09-垒骰子" class="headerlink" title="09 垒骰子"></a><a href="https://blog.pzijigame.com/2021-03-23-LANQIAO201509.html">09 垒骰子</a></h3><h3 id="10-生命之树"><a href="#10-生命之树" class="headerlink" title="10 生命之树"></a><a href="https://blog.pzijigame.com/2021-03-23-LANQIAO201510.html">10 生命之树</a></h3><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>1、以上均为博主备战2021年蓝桥杯所刷的题，所以目录上只有结果填空题和程序设计题，没有代码填空题（2019年第十届已取消）。</p><p>2、非所有题都有解析，有解析的题都是博主个人觉得有一定意义的。</p><p>3、代码及结果仅供参考，欢迎交流，共同进步！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2012年第三届省赛 C/C++ B组 10 取球游戏</title>
    <link href="http://www.pzijigame.com/2021-03-10-LANQIAO201210.html"/>
    <id>http://www.pzijigame.com/2021-03-10-LANQIAO201210.html</id>
    <published>2021-03-10T06:47:26.000Z</published>
    <updated>2021-03-23T12:24:12.977Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>今盒子里有n个小球，A、B两人轮流从盒中取球，每个人都可以看到另一个人取了多少个，也可以看到盒中还剩下多少个，并且两人都很聪明，不会做出错误的判断。<br>我们约定：<br>每个人从盒子中取出的球的数目必须是：1，3，7或者8个。<br>轮到某一方取球时不能弃权！<br>A先取球，然后双方交替取球，直到取完。<br>被迫拿到最后一个球的一方为负方（输方）<br>请编程确定出在双方都不判断失误的情况下，对于特定的初始球数，A是否能赢？<br>程序运行时，从标准输入获得数据，其格式如下：<br>先是一个整数n(n&lt;100)，表示接下来有n个整数。然后是n个整数，每个占一行（整数&lt;10000），表示初始球数。<br>程序则输出n行，表示A的输赢情况（输为0，赢为1）。<br>例如，用户输入：<br>4<br>1<br>2<br>10<br>18<br>则程序应该输出：<br>0<br>1<br>1<br>0</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>使用动态规划算法，先确定盒子里有1至8个小球时A的输赢情况，然后使用状态转移方程：<br>a[i] = (a[i-1] &amp;&amp; a[i-3] &amp;&amp; a[i-7] &amp;&amp; a[i-8]) ? 0 : 1​<br>确定小球个数大于8时A的输赢情况<br>如小球个数等于9时，A有4种取法：<br>1、取1个小球 =&gt; B取时盒子里有8个小球 =&gt; a[8]=1 =&gt; B赢A输<br>2、取3个小球 =&gt; B取时盒子里有6个小球 =&gt; a[6]=1 =&gt; B赢A输<br>3、取7个小球 =&gt; B取时盒子里有2个小球 =&gt; a[2]=1 =&gt; B赢A输<br>4、取8个小球 =&gt; B取时盒子里有1个小球 =&gt; a[1]=0 =&gt; B输A赢<br>4种情况中至少1种情况A赢，则A赢</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">10000</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;; <span class="comment">//a[0]可为任意值</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">9</span>;i&lt;<span class="number">10000</span>;i++) &#123;</span><br><span class="line">        a[i]=(a[i<span class="number">-1</span>] &amp;&amp; a[i<span class="number">-3</span>] &amp;&amp; a[i<span class="number">-7</span>] &amp;&amp; a[i<span class="number">-8</span>]) ? <span class="number">0</span> : <span class="number">1</span>; <span class="comment">//状态转移方程 </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--) &#123;</span><br><span class="line">        <span class="keyword">int</span> num;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;num;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;a[num]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="动态规划" scheme="http://www.pzijigame.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
</feed>
