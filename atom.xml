<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xplore&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.pzijigame.com/"/>
  <updated>2021-05-19T12:26:04.446Z</updated>
  <id>http://www.pzijigame.com/</id>
  
  <author>
    <name>BE I</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>蓝桥杯 2019年第十届国赛 C/C++ B组 I 第八大奇迹</title>
    <link href="http://www.pzijigame.com/2021-05-19-LANQIAOFINAL201909.html"/>
    <id>http://www.pzijigame.com/2021-05-19-LANQIAOFINAL201909.html</id>
    <published>2021-05-19T12:11:11.000Z</published>
    <updated>2021-05-19T12:26:04.446Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/FINAL2019091.png"><br><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/FINAL2019092.png"><br><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/FINAL2019093.png"></p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>其实就是动态查询区间 [a, b] 中第八大的数，使用<a href="https://blog.csdn.net/zearot/article/details/52280189">线段树</a>，线段树中套一个 vector 保存前八大的数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">400001</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Tree</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">&#125; tree[N];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将l和r归并到v中</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushUp</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;v,<span class="keyword">const</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;l,<span class="keyword">const</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;r)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,k;</span><br><span class="line">    i=j=k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(k&lt;<span class="number">8</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(l[i]&gt;r[j]) &#123;</span><br><span class="line">            v[k++]=l[i++];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            v[k++]=r[j++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    tree[u].l=l;</span><br><span class="line">    tree[u].r=r;</span><br><span class="line">    tree[u].v.resize(<span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(l==r) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    build(u&lt;&lt;<span class="number">1</span>,l,mid);</span><br><span class="line">    build(u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">    <span class="comment">//因为一开始都是0，所以不用pushup</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> p,<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(tree[u].l==tree[u].r) &#123;</span><br><span class="line">        tree[u].v[<span class="number">0</span>]=x;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(tree[u].l+tree[u].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(p&lt;=mid) &#123;</span><br><span class="line">        modify(u&lt;&lt;<span class="number">1</span>,p,x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        modify(u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,p,x);</span><br><span class="line">    &#125;</span><br><span class="line">    pushUp(tree[u].v,tree[u&lt;&lt;<span class="number">1</span>].v,tree[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].v);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">query</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(tree[u].l&gt;=l &amp;&amp; tree[u].r&lt;=r) &#123;</span><br><span class="line">        <span class="keyword">return</span> tree[u].v;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(tree[u].l+tree[u].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(r&lt;=mid) &#123;</span><br><span class="line">        <span class="keyword">return</span> query(u&lt;&lt;<span class="number">1</span>,l,r);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;mid) &#123;</span><br><span class="line">        <span class="keyword">return</span> query(u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,l,r);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">ans</span><span class="params">(<span class="number">8</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">    pushUp(ans,query(u&lt;&lt;<span class="number">1</span>,l,r),query(u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,l,r));</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> L,N;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;L,&amp;N);</span><br><span class="line">    build(<span class="number">1</span>,<span class="number">1</span>,L);</span><br><span class="line">    <span class="keyword">char</span> op;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="keyword">while</span>(N--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;\n%c %d %d&quot;</span>,&amp;op,&amp;a,&amp;b);</span><br><span class="line">        <span class="keyword">if</span>(op==<span class="string">&#x27;C&#x27;</span>) &#123;</span><br><span class="line">            modify(<span class="number">1</span>,a,b);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,query(<span class="number">1</span>,a,b)[<span class="number">7</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="线段树" scheme="http://www.pzijigame.com/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2019年第十届国赛 C/C++ B组 H 解谜游戏</title>
    <link href="http://www.pzijigame.com/2021-05-19-LANQIAOFINAL201908.html"/>
    <id>http://www.pzijigame.com/2021-05-19-LANQIAOFINAL201908.html</id>
    <published>2021-05-19T11:50:06.000Z</published>
    <updated>2021-05-19T12:09:32.590Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/FINAL2019081.png"><br><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/FINAL2019082.png"><br><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/FINAL2019083.png"></p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>注意旋转操作都是三圈塑料棒同时旋转，所以内圈的每一根塑料棒都对应了中圈的两根塑料棒和外圈的三根塑料棒，具体如下表：</p><table><thead><tr><th align="center">内圈</th><th align="center">中圈</th><th align="center">外圈</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">0、4</td><td align="center">0、4、8</td></tr><tr><td align="center">1</td><td align="center">1、5</td><td align="center">1、5、9</td></tr><tr><td align="center">2</td><td align="center">2、6</td><td align="center">2、6、10</td></tr><tr><td align="center">3</td><td align="center">3、7</td><td align="center">3、7、11</td></tr></tbody></table><p>所以整体被分为了四个部分，我们只需要判断每个部分是否是 1 根黄色塑料棒、2 根红色塑料棒和 3 根绿色塑料棒即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">3</span>][<span class="number">12</span>];</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;s[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> f=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> y=<span class="number">0</span>,r=<span class="number">0</span>,g=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">3</span>;j++) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">3</span>-j;k++) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(s[j][i+<span class="number">4</span>*k]==<span class="string">&#x27;Y&#x27;</span>) &#123;</span><br><span class="line">                        y++;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(s[j][i+<span class="number">4</span>*k]==<span class="string">&#x27;R&#x27;</span>) &#123;</span><br><span class="line">                        r++;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        g++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!(y==<span class="number">1</span>&amp;&amp;r==<span class="number">2</span>&amp;&amp;g==<span class="number">3</span>)) &#123;</span><br><span class="line">                f=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(f==<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;YES\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="找规律" scheme="http://www.pzijigame.com/tags/%E6%89%BE%E8%A7%84%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2019年第十届国赛 C/C++ B组 G 排列数</title>
    <link href="http://www.pzijigame.com/2021-05-19-LANQIAOFINAL201907.html"/>
    <id>http://www.pzijigame.com/2021-05-19-LANQIAOFINAL201907.html</id>
    <published>2021-05-19T11:07:53.000Z</published>
    <updated>2021-05-19T11:44:57.827Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/FINAL2019071.png"><br><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/FINAL2019072.png"></p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><h3 id="暴力"><a href="#暴力" class="headerlink" title="暴力"></a>暴力</h3><p>暴力只能通过 20% 的数据。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">500</span>,MOD=<span class="number">123456</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,k;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="keyword">int</span> a[N];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++) &#123;</span><br><span class="line">        a[i]=i+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n<span class="number">-1</span>;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&lt;a[i<span class="number">-1</span>]&amp;&amp;a[i]&lt;a[i+<span class="number">1</span>] || a[i]&gt;a[i<span class="number">-1</span>]&amp;&amp;a[i]&gt;a[i+<span class="number">1</span>]) &#123;</span><br><span class="line">                num++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(num==k<span class="number">-1</span>) &#123;</span><br><span class="line">            ans=(ans+<span class="number">1</span>)%MOD;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span>(next_permutation(a,a+n));</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h3><p>设 $dp[i][j]$ 为填了前 i 个数后，j 单调序列的个数，则状态转移方程为<br>$dp[i][j]=dp[i][j] \times j+dp[i][j-1] \times 2+dp[i][j-2] \times (i-j)$<br><a href="https://www.acwing.com/solution/content/28097">状态转移方程详见</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">501</span>,MOD=<span class="number">123456</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[N][N]; <span class="comment">//dp[i][j]：填了前i个数后，j单调序列的个数 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,k;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    dp[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    dp[<span class="number">2</span>][<span class="number">1</span>]=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i&amp;&amp;j&lt;=k;j++) &#123;</span><br><span class="line">            dp[i][j]=(dp[i<span class="number">-1</span>][j]*j%MOD+dp[i<span class="number">-1</span>][j<span class="number">-1</span>]*<span class="number">2</span>%MOD)%MOD;</span><br><span class="line">            <span class="keyword">if</span>(j&gt;<span class="number">1</span>) &#123;</span><br><span class="line">                dp[i][j]=(dp[i][j]+dp[i<span class="number">-1</span>][j<span class="number">-2</span>]*(i-j)%MOD)%MOD;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;dp[n][k]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="动态规划" scheme="http://www.pzijigame.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2019年第十届国赛 C/C++ B组 F 最优包含</title>
    <link href="http://www.pzijigame.com/2021-05-19-LANQIAOFINAL201906.html"/>
    <id>http://www.pzijigame.com/2021-05-19-LANQIAOFINAL201906.html</id>
    <published>2021-05-19T10:45:50.000Z</published>
    <updated>2021-05-19T12:54:29.774Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/FINAL201906.png"></p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>使用动态规划，设 $dp[i][j]$ 为使 S 字符串的前 i 个字符包含 T 字符串的前 j 个字符需修改的字符的最少个数，则状态转移方程为<br>$dp[i][j]=min(dp[i][j],dp[i-1][j-1]),S[i]=T[j]$<br>$dp[i][j]=min(dp[i][j],dp[i-1][j-1]+1),S[i]!=T[j]$<br>初始化：<br>$dp[i][0]=0$，空字符串是任何字符串的子串<br>$dp[i][j]=INF,i-1&lt;j$，其中 $INF$ 为一个较大的数，这里 $INF=1000$。<br>$dp[i][j]=dp[i-1][j],i-1&gt;=j$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1001</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[N][N]; <span class="comment">//dp[i][j]：使S串的前i个字符包含T串的前j个字符需修改的字符的最少个数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s[N],t[N];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;s+<span class="number">1</span>&gt;&gt;t+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> n=<span class="built_in">strlen</span>(s+<span class="number">1</span>),m=<span class="built_in">strlen</span>(t+<span class="number">1</span>);</span><br><span class="line"><span class="comment">//    dp[0][0]=0;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line"><span class="comment">//        dp[i][0]=0; //空串是任何串的子串</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m&amp;&amp;j&lt;=i;j++) &#123;</span><br><span class="line">            dp[i][j]=N<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i<span class="number">-1</span>&gt;=j) &#123;</span><br><span class="line">                dp[i][j]=dp[i<span class="number">-1</span>][j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==t[j]) &#123;</span><br><span class="line">                dp[i][j]=<span class="built_in">min</span>(dp[i][j],dp[i<span class="number">-1</span>][j<span class="number">-1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                dp[i][j]=<span class="built_in">min</span>(dp[i][j],dp[i<span class="number">-1</span>][j<span class="number">-1</span>]+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;dp[n][m]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="动态规划" scheme="http://www.pzijigame.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2019年第十届国赛 C/C++ B组 E 路径计数</title>
    <link href="http://www.pzijigame.com/2021-05-19-LANQIAOFINAL201905.html"/>
    <id>http://www.pzijigame.com/2021-05-19-LANQIAOFINAL201905.html</id>
    <published>2021-05-19T10:23:10.000Z</published>
    <updated>2021-05-19T10:37:09.576Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/FINAL201905.png"></p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>使用深度优先搜索（DFS），注意 (0, 0) 点既是起点又是终点，所以出发时（路线长度为 0）不对其进行标记；<br>注意最终路线长度需大于 2，保证不计数 (0, 0) -&gt; (0, 1) -&gt; (0, 0) 和 (0, 0) -&gt; (1, 0) -&gt; (0, 0) 两条路线；<br>每个点不重复访问即可保证路线不自交。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dis[<span class="number">4</span>][<span class="number">2</span>]=&#123;&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-1</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> vis[N][N];</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n&gt;<span class="number">12</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x==<span class="number">0</span> &amp;&amp; y==<span class="number">0</span> &amp;&amp; n&gt;<span class="number">2</span>) &#123; <span class="comment">//n&gt;2保证不计数(0,0)-&gt;(0,1)-&gt;(0,0)和(0,0)-&gt;(1,0)-&gt;(0,0) </span></span><br><span class="line">        ans++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!(x==<span class="number">0</span>&amp;&amp;y==<span class="number">0</span>&amp;&amp;n==<span class="number">0</span>)) &#123; <span class="comment">//出发时不标记左上角 </span></span><br><span class="line">        vis[x][y]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> dx=x+dis[i][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> dy=y+dis[i][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(x&gt;=<span class="number">0</span> &amp;&amp; x&lt;N &amp;&amp; y&gt;=<span class="number">0</span> &amp;&amp; y&lt;N &amp;&amp; !vis[dx][dy]) &#123;</span><br><span class="line">            dfs(dx,dy,n+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    vis[x][y]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    dfs(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>206</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="深度优先搜索" scheme="http://www.pzijigame.com/tags/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2019年第十届国赛 C/C++ B组 D 求值</title>
    <link href="http://www.pzijigame.com/2021-05-19-LANQIAOFINAL201904.html"/>
    <id>http://www.pzijigame.com/2021-05-19-LANQIAOFINAL201904.html</id>
    <published>2021-05-19T03:44:01.000Z</published>
    <updated>2021-05-19T03:53:12.581Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/FINAL201904.png"></p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>暴力即可，注意 i % j = j 时需要去重。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">100000</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>,t=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j*j&lt;=t;j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(t%j==<span class="number">0</span>) &#123;</span><br><span class="line">                ans+=<span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(t%j==j) &#123; <span class="comment">//去重 </span></span><br><span class="line">                ans--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ans==<span class="number">100</span>) &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>45360</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="暴力" scheme="http://www.pzijigame.com/tags/%E6%9A%B4%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2019年第十届国赛 C/C++ B组 C 拼接</title>
    <link href="http://www.pzijigame.com/2021-05-19-LANQIAOFINAL201903.html"/>
    <id>http://www.pzijigame.com/2021-05-19-LANQIAOFINAL201903.html</id>
    <published>2021-05-19T03:22:45.000Z</published>
    <updated>2021-05-19T03:37:29.605Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/FINAL201903.png"></p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>切割后的两段若能够拼接成一个直角，则左右两段应分别都关于副对角线对称，所以我们可以只搜索右下角，从副对角线上的点出发，进行搜索，直至到达右边界或下边界。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">8</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dis[<span class="number">4</span>][<span class="number">2</span>]=&#123;&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-1</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> vis[N][N];</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x==N<span class="number">-1</span> || y==<span class="number">0</span>) &#123;</span><br><span class="line">        ans++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    vis[x][y]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> dx=x+dis[i][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> dy=y+dis[i][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(dy&gt;=<span class="number">0</span> &amp;&amp; dx&gt;dy &amp;&amp; !vis[dx][dy]) &#123; <span class="comment">//只能在x&lt;y的区域搜索 </span></span><br><span class="line">            dfs(dx,dy);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    vis[x][y]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++) &#123;</span><br><span class="line">        dfs(i,i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>2444</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="深度优先搜索" scheme="http://www.pzijigame.com/tags/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2019年第十届国赛 C/C++ B组 B 质数拆分</title>
    <link href="http://www.pzijigame.com/2021-05-19-LANQIAOFINAL201902.html"/>
    <id>http://www.pzijigame.com/2021-05-19-LANQIAOFINAL201902.html</id>
    <published>2021-05-19T02:47:14.000Z</published>
    <updated>2021-05-19T12:48:48.360Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/FINAL201902.png"></p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>注意不是将 2019 拆分为 2 个质数之和，而是拆分为多个质数之和。<br>其实是一个<a href="https://blog.csdn.net/chanmufeng/article/details/82955730"> 0-1 背包问题</a>，使用动态规划，设 $dp[i][j]$ 为从前 i 个质数中选，和为 j 的方案数，则状态转移方程为<br>$dp[i][j]=dp[i-1][j],j&lt;prime[i]$<br>$dp[i][j]=dp[i-1][j]+dp[i-1][j-prime[i]],j&gt;=prime[i]$<br>既分为不选第 i 个质数和选第 i 个质数两种情况。<br>初始化 $dp[0][0]=1$。</p><h3 id="基础代码"><a href="#基础代码" class="headerlink" title="基础代码"></a>基础代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">2020</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> k=<span class="number">1</span>,flag[N],prime[N];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> dp[N][N]; <span class="comment">//dp[i][j]为从前i个质数中选，和为j的方案数 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;<span class="number">2019</span>;i++) &#123; <span class="comment">//打质数表 </span></span><br><span class="line">        <span class="keyword">if</span>(!flag[i]) &#123;</span><br><span class="line">            prime[k++]=i;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i+i;j&lt;<span class="number">2019</span>;j+=i) &#123;</span><br><span class="line">                flag[j]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;k;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">2019</span>;j++) &#123;</span><br><span class="line">            dp[i][j]=dp[i<span class="number">-1</span>][j];</span><br><span class="line">            <span class="keyword">if</span>(j&gt;=prime[i]) &#123;</span><br><span class="line">                dp[i][j]+=dp[i<span class="number">-1</span>][j-prime[i]];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;dp[k<span class="number">-1</span>][<span class="number">2019</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="空间优化"><a href="#空间优化" class="headerlink" title="空间优化"></a>空间优化</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">2020</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> k=<span class="number">1</span>,flag[N],prime[N];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> dp[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;<span class="number">2019</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!flag[i]) &#123;</span><br><span class="line">            prime[k++]=i;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i+i;j&lt;<span class="number">2019</span>;j+=i) &#123;</span><br><span class="line">                flag[j]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dp[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;k;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2019</span>;j&gt;=prime[i];j--) &#123;</span><br><span class="line">            dp[j]+=dp[j-prime[i]];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;dp[<span class="number">2019</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>55965365465060</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="动态规划" scheme="http://www.pzijigame.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="0-1背包" scheme="http://www.pzijigame.com/tags/0-1%E8%83%8C%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 国赛 C/C++ B组 历年真题及解答</title>
    <link href="http://www.pzijigame.com/2021-05-19-LANQIAOFINAL.html"/>
    <id>http://www.pzijigame.com/2021-05-19-LANQIAOFINAL.html</id>
    <published>2021-05-19T01:54:20.000Z</published>
    <updated>2021-05-19T12:40:47.904Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="2019年第十届"><a href="#2019年第十届" class="headerlink" title="2019年第十届"></a>2019年第十届</h2><h3 id="A-平方序列-✨"><a href="#A-平方序列-✨" class="headerlink" title="A 平方序列 ✨"></a><a href="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/FINAL201901.png">A 平方序列</a> ✨</h3><h3 id="B-质数拆分"><a href="#B-质数拆分" class="headerlink" title="B 质数拆分"></a><a href="https://blog.pzijigame.com/2021-05-19-LANQIAOFINAL201902.html">B 质数拆分</a></h3><h3 id="C-拼接"><a href="#C-拼接" class="headerlink" title="C 拼接"></a><a href="https://blog.pzijigame.com/2021-05-19-LANQIAOFINAL201903.html">C 拼接</a></h3><h3 id="D-求值"><a href="#D-求值" class="headerlink" title="D 求值"></a><a href="https://blog.pzijigame.com/2021-05-19-LANQIAOFINAL201904.html">D 求值</a></h3><h3 id="E-路径计数"><a href="#E-路径计数" class="headerlink" title="E 路径计数"></a><a href="https://blog.pzijigame.com/2021-05-19-LANQIAOFINAL201905.html">E 路径计数</a></h3><h3 id="F-最优包含"><a href="#F-最优包含" class="headerlink" title="F 最优包含"></a><a href="https://blog.pzijigame.com/2021-05-19-LANQIAOFINAL201906.html">F 最优包含</a></h3><h3 id="G-排列数"><a href="#G-排列数" class="headerlink" title="G 排列数"></a><a href="https://blog.pzijigame.com/2021-05-19-LANQIAOFINAL201907.html">G 排列数</a></h3><h3 id="H-解谜游戏"><a href="#H-解谜游戏" class="headerlink" title="H 解谜游戏"></a><a href="https://blog.pzijigame.com/2021-05-19-LANQIAOFINAL201908.html">H 解谜游戏</a></h3><h3 id="I-第八大奇迹"><a href="#I-第八大奇迹" class="headerlink" title="I 第八大奇迹"></a><a href="https://blog.pzijigame.com/2021-05-19-LANQIAOFINAL201909.html">I 第八大奇迹</a></h3><h3 id="J-燃烧权杖【努力ing】"><a href="#J-燃烧权杖【努力ing】" class="headerlink" title="J 燃烧权杖【努力ing】"></a><a href="https://www.acwing.com/problem/content/2559/">J 燃烧权杖</a>【努力ing】</h3><h2 id="2020年第十一届"><a href="#2020年第十一届" class="headerlink" title="2020年第十一届"></a>2020年第十一届</h2><h3 id="A-美丽的2-✨"><a href="#A-美丽的2-✨" class="headerlink" title="A 美丽的2 ✨"></a><a href="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/2020FINAL.pdf">A 美丽的2</a> ✨</h3><h3 id="B-扩散"><a href="#B-扩散" class="headerlink" title="B 扩散"></a><a href="https://blog.pzijigame.com/2021-05-17-LANQIAOFINAL202002.html">B 扩散</a></h3><h3 id="C-阶乘约数"><a href="#C-阶乘约数" class="headerlink" title="C 阶乘约数"></a><a href="https://blog.pzijigame.com/2021-05-18-LANQIAOFINAL202003.html">C 阶乘约数</a></h3><h3 id="D-本质上升序列"><a href="#D-本质上升序列" class="headerlink" title="D 本质上升序列"></a><a href="https://blog.pzijigame.com/2021-05-18-LANQIAOFINAL202004.html">D 本质上升序列</a></h3><h3 id="E-玩具蛇"><a href="#E-玩具蛇" class="headerlink" title="E 玩具蛇"></a><a href="https://blog.pzijigame.com/2021-05-18-LANQIAOFINAL202005.html">E 玩具蛇</a></h3><h3 id="F-皮亚诺曲线距离"><a href="#F-皮亚诺曲线距离" class="headerlink" title="F 皮亚诺曲线距离"></a><a href="https://blog.pzijigame.com/2021-05-18-LANQIAOFINAL202006.html">F 皮亚诺曲线距离</a></h3><h3 id="G-游园安排"><a href="#G-游园安排" class="headerlink" title="G 游园安排"></a><a href="https://blog.pzijigame.com/2021-05-18-LANQIAOFINAL202007.html">G 游园安排</a></h3><h3 id="H-答疑"><a href="#H-答疑" class="headerlink" title="H 答疑"></a><a href="https://blog.pzijigame.com/2021-05-18-LANQIAOFINAL202008.html">H 答疑</a></h3><h3 id="I-出租车【努力ing】"><a href="#I-出租车【努力ing】" class="headerlink" title="I 出租车【努力ing】"></a><a href="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/2020FINAL.pdf">I 出租车</a>【努力ing】</h3><h3 id="J-质数行者"><a href="#J-质数行者" class="headerlink" title="J 质数行者"></a><a href="https://blog.pzijigame.com/2021-05-18-LANQIAOFINAL202010.html">J 质数行者</a></h3><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>1、以上均为博主备战2021年蓝桥杯所刷的题，所以目录上只有结果填空题和程序设计题，没有代码填空题（2019年第十届已取消）。</p><p>2、不是所有的题都有解析，有解析的题都是博主个人觉得有一定意义的。标记了 ✨ 的题无题解，但有题目链接。</p><p>3、代码及结果仅供参考，欢迎交流，共同进步！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2020年第十一届国赛 C/C++ B组 J 质数行者</title>
    <link href="http://www.pzijigame.com/2021-05-18-LANQIAOFINAL202010.html"/>
    <id>http://www.pzijigame.com/2021-05-18-LANQIAOFINAL202010.html</id>
    <published>2021-05-18T14:51:25.000Z</published>
    <updated>2021-05-19T01:11:58.952Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小蓝在玩一个叫质数行者的游戏。<br>游戏在一个 n × m × w 的立体方格图上进行，从北到南依次标号为第 1 行到第 n 行，从西到东依次标号为第 1 列到第 m 列，从下到上依次标号为第 1 层到第 w 层。<br>小蓝要控制自己的角色从第 1 行第 1 列第 1 层移动到第 n 行第 m 列第 w 层。每一步，他可以向东走质数格、向南走质数格或者向上走质数格。每走到一个位置，小蓝的角色要稍作停留。<br>在游戏中有两个陷阱，分别为第 r1 行第 c1 列第 h1 层和第 r2 行第 c2 列第 h2 层。这两个陷阱的位置可以跨过，但不能停留。也就是说，小蓝不能控制角色某一步正好走到陷阱上，但是某一步中间跨过了陷阱是允许的。<br>小蓝最近比较清闲，因此他想用不同的走法来完成这个游戏。所谓两个走法不同，是指小蓝稍作停留的位置集合不同。<br>请帮小蓝计算一下，他总共有多少种不同的走法。<br>提示：请注意内存限制，如果你的程序运行时超过内存限制将不得分。<br>【输入格式】<br>输入第一行包含三个整数 n, m, w，表示方格图的大小。<br>第二行包含 6 个整数，r1, c1, h1, r2, c2, h2，表示陷阱的位置。<br>【输出格式】<br>输出一行，包含一个整数，表示走法的数量。答案可能非常大，请输出答案除以 1000000007 的余数。<br>【样例输入】<br>5 6 1<br>3 4 1 1 2 1<br>【样例输出】<br>11<br>【样例说明】<br>用 (r, c, h) 表示第 r 行第 c 列第 h 层，可能的走法有以下几种：<br>1.(1, 1, 1) − (1, 3, 1) − (1, 6, 1) − (3, 6, 1) − (5, 6, 1)。<br>2.(1, 1, 1) − (1, 3, 1) − (3, 3, 1) − (3, 6, 1) − (5, 6, 1)。<br>3.(1, 1, 1) − (1, 3, 1) − (3, 3, 1) − (5, 3, 1) − (5, 6, 1)。<br>4.(1, 1, 1) − (3, 1, 1) − (3, 3, 1) − (3, 6, 1) − (5, 6, 1)。<br>5.(1, 1, 1) − (3, 1, 1) − (3, 3, 1) − (5, 3, 1) − (5, 6, 1)。<br>6.(1, 1, 1) − (3, 1, 1) − (5, 1, 1) − (5, 3, 1) − (5, 6, 1)。<br>7.(1, 1, 1) − (3, 1, 1) − (5, 1, 1) − (5, 4, 1) − (5, 6, 1)。<br>8.(1, 1, 1) − (1, 4, 1) − (1, 6, 1) − (3, 6, 1) − (5, 6, 1)。<br>9.(1, 1, 1) − (1, 6, 1) − (3, 6, 1) − (5, 6, 1)。<br>10.(1, 1, 1) − (3, 1, 1) − (3, 6, 1) − (5, 6, 1)。<br>11.(1, 1, 1) − (3, 1, 1) − (5, 1, 1) − (5, 6, 1)。<br>【评测用例规模与约定】<br>对于 30% 的评测用例 1 ≤ n, m, w ≤ 50。<br>对于 60% 的评测用例 1 ≤ n, m, w ≤ 300。<br>对于所有评测用例，1 ≤ n, m, w ≤ 1000，1 ≤ r1, r2 ≤ n, 1 ≤ c1, c2 ≤ m,1 ≤ h1, h2 ≤ w，陷阱不在起点或终点，两个陷阱不同。</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><h3 id="深度优先搜索"><a href="#深度优先搜索" class="headerlink" title="深度优先搜索"></a>深度优先搜索</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD=<span class="number">1000000007</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,w;</span><br><span class="line"><span class="keyword">int</span> r1,c1,h1,r2,c2,h2;</span><br><span class="line"><span class="keyword">int</span> maxPrime;</span><br><span class="line"><span class="keyword">int</span> prime[<span class="number">1001</span>];</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">isPrime</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i*i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> r,<span class="keyword">int</span> c,<span class="keyword">int</span> h)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(r==r1 &amp;&amp; c==c1 &amp;&amp; h==h1) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(r==r2 &amp;&amp; c==c2 &amp;&amp; h==h2) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> r,<span class="keyword">int</span> c,<span class="keyword">int</span> h)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(r==n &amp;&amp; c==m &amp;&amp; h==w) &#123;</span><br><span class="line">        ans=(ans+<span class="number">1</span>)%MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=maxPrime;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(prime[i]) &#123;</span><br><span class="line">            <span class="keyword">if</span>(r+i&lt;=n &amp;&amp; check(r+i,c,h)) &#123;</span><br><span class="line">                dfs(r+i,c,h);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(c+i&lt;=m &amp;&amp; check(r,c+i,h)) &#123;</span><br><span class="line">                dfs(r,c+i,h);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(h+i&lt;=w &amp;&amp; check(r,c,h+i)) &#123;</span><br><span class="line">                dfs(r,c,h+i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;w;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;r1&gt;&gt;c1&gt;&gt;h1&gt;&gt;r2&gt;&gt;c2&gt;&gt;h2;</span><br><span class="line">    maxPrime=<span class="built_in">max</span>(<span class="built_in">max</span>(n,m),w);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=maxPrime;i++) &#123;</span><br><span class="line">        prime[i]=isPrime(i);</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD=<span class="number">1000000007</span>,N=<span class="number">301</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> prime[N];</span><br><span class="line"><span class="keyword">int</span> dp[N][N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">isPrime</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i*i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,w;</span><br><span class="line">    <span class="keyword">int</span> r1,c1,h1,r2,c2,h2;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;w;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;r1&gt;&gt;c1&gt;&gt;h1&gt;&gt;r2&gt;&gt;c2&gt;&gt;h2;</span><br><span class="line">    <span class="keyword">int</span> maxPrime=<span class="built_in">max</span>(<span class="built_in">max</span>(n,m),w);</span><br><span class="line">    <span class="keyword">if</span>(maxPrime&gt;=N) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=maxPrime;i++) &#123;</span><br><span class="line">        prime[i]=isPrime(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=w;k++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(i==<span class="number">1</span> &amp;&amp; j==<span class="number">1</span> &amp;&amp; k==<span class="number">1</span>) &#123;</span><br><span class="line">                    dp[i][j][k]=<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(i==r1 &amp;&amp; j==c1 &amp;&amp; k==h1) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(i==r2 &amp;&amp; j==c2 &amp;&amp; k==h2) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> p=<span class="number">2</span>;p&lt;=maxPrime;p++) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(prime[p]) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(i-p&gt;=<span class="number">1</span>) &#123;</span><br><span class="line">                            dp[i][j][k]=(dp[i][j][k]+dp[i-p][j][k])%MOD;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span>(j-p&gt;=<span class="number">1</span>) &#123;</span><br><span class="line">                            dp[i][j][k]=(dp[i][j][k]+dp[i][j-p][k])%MOD;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span>(k-p&gt;=<span class="number">1</span>) &#123;</span><br><span class="line">                            dp[i][j][k]=(dp[i][j][k]+dp[i][j][k-p])%MOD;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;dp[n][m][w]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（代码仅供参考，应该都只能拿部分的分，无法Accept）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="动态规划" scheme="http://www.pzijigame.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="深度优先搜索" scheme="http://www.pzijigame.com/tags/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2020年第十一届国赛 C/C++ B组 H 答疑</title>
    <link href="http://www.pzijigame.com/2021-05-18-LANQIAOFINAL202008.html"/>
    <id>http://www.pzijigame.com/2021-05-18-LANQIAOFINAL202008.html</id>
    <published>2021-05-18T14:02:24.000Z</published>
    <updated>2021-05-18T14:49:36.932Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>有 n 位同学同时找老师答疑。每位同学都预先估计了自己答疑的时间。<br>老师可以安排答疑的顺序，同学们要依次进入老师办公室答疑。<br>一位同学答疑的过程如下：<br>1.首先进入办公室，编号为 i 的同学需要 s<sub>i</sub> 毫秒的时间。<br>2.然后同学问问题老师解答，编号为 i 的同学需要 a<sub>i</sub> 毫秒的时间。<br>3.答疑完成后，同学很高兴，会在课程群里面发一条消息，需要的时间可以忽略。<br>4.最后同学收拾东西离开办公室，需要 e<sub>i</sub> 毫秒的时间。一般需要 10 秒、20 秒或 30 秒，即 e<sub>i</sub> 取值为 10000，20000 或 30000。<br>一位同学离开办公室后，紧接着下一位同学就可以进入办公室了。<br>答疑从 0 时刻开始。老师想合理的安排答疑的顺序，使得同学们在课程群里面发消息的时刻之和最小。<br>【输入格式】<br>输入第一行包含一个整数 n，表示同学的数量。<br>接下来 n 行，描述每位同学的时间。其中第 i 行包含三个整数 s<sub>i</sub>, a<sub>i</sub>, e<sub>i</sub>，意义如上所述。<br>【输出格式】<br>输出一个整数，表示同学们在课程群里面发消息的时刻之和最小是多少。<br>【样例输入】<br>3<br>10000 10000 10000<br>20000 50000 20000<br>30000 20000 30000<br>【样例输出】<br>280000<br>【样例说明】<br>按照 1, 3, 2 的顺序答疑，发消息的时间分别是 20000, 80000, 180000。<br>【评测用例规模与约定】<br>对于 30% 的评测用例，1 ≤ n ≤ 20。<br>对于 60% 的评测用例，1 ≤ n ≤ 200。<br>对于所有评测用例，1 ≤ n ≤ 1000，1 ≤ s<sub>i</sub> ≤ 60000，1 ≤ a<sub>i</sub> ≤ 1000000，e<sub>i</sub> ∈ {10000, 20000, 30000}，即 e<sub>i</sub> 一定是 10000、20000、30000 之一。</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>假如第 i 次解答了第 j 个同学的问题，那么第 j 个同学之后的同学都需要等待 s<sub>i</sub>+a<sub>i</sub>+e<sub>i</sub> 毫秒，同时第 j 个同学需要等待 s<sub>i</sub>+a<sub>i</sub> 毫秒，即总共等待 $(n−i-1) \times (s_i+a_i+e_i)+(s_i+a_i)$，每次贪心地累加最小等待时间即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,s[N],a[N],e[N],vis[N]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;s[i]&gt;&gt;a[i]&gt;&gt;e[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> minTime=<span class="number">1090000000</span>,minIndex;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!vis[j]) &#123;</span><br><span class="line">                <span class="keyword">int</span> time=(n-i<span class="number">-1</span>)*(s[j]+a[j]+e[j])+(s[j]+a[j]);</span><br><span class="line">                <span class="keyword">if</span>(time&lt;minTime) &#123;</span><br><span class="line">                    minTime=time;</span><br><span class="line">                    minIndex=j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans+=minTime;</span><br><span class="line">        vis[minIndex]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="贪心" scheme="http://www.pzijigame.com/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2020年第十一届国赛 C/C++ B组 G 游园安排</title>
    <link href="http://www.pzijigame.com/2021-05-18-LANQIAOFINAL202007.html"/>
    <id>http://www.pzijigame.com/2021-05-18-LANQIAOFINAL202007.html</id>
    <published>2021-05-18T13:23:08.000Z</published>
    <updated>2021-05-18T13:59:58.197Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>L 星球游乐园非常有趣，吸引着各个星球的游客前来游玩。小蓝是 L 星球游乐园的管理员。<br>为了更好的管理游乐园，游乐园要求所有的游客提前预约，小蓝能看到系统上所有预约游客的名字。每个游客的名字由一个大写英文字母开始，后面跟 0 个或多个小写英文字母。游客可能重名。<br>小蓝特别喜欢递增的事物。今天，他决定在所有预约的游客中，选择一部分游客在上午游玩，其他的游客都在下午游玩，在上午游玩的游客要求按照预约的顺序排列后，名字是单调递增的，即排在前面的名字严格小于排在后面的名字。<br>一个名字 A 小于另一个名字 B 是指：存在一个整数 i，使得 A 的前 i 个字母与 B 的前 i 个字母相同，且 A 的第 i+1 个字母小于 B 的第 i+1 个字母。（如果 A 不存在第 i+1 个字母且 B 存在第 i+1 个字母，也视为 A 的第 i+1 个字母小于 B 的第 i+1 个字母）<br>作为小蓝的助手，你要按照小蓝的想法安排游客，同时你又希望上午有尽量多的游客游玩，请告诉小蓝让哪些游客上午游玩。<br>如果方案有多种，请输出上午游玩的第一个游客名字最小的方案。如果此时还有多种方案，请输出第一个游客名字最小的前提下第二个游客名字最小的方案。如果仍然有多种，依此类推选择第三个、第四个……游客名字最小的方案。<br>【输入格式】<br>输入包含一个字符串，按预约的顺序给出所有游客的名字，相邻的游客名字之间没有字符分隔。<br>【输出格式】<br>按预约顺序输出上午游玩的游客名单，中间不加任何分隔字符。<br>【样例输入】<br>WoAiLanQiaoBei<br>【样例输出】<br>AiLanQiao<br>【评测用例规模与约定】<br>对于 20% 的评测数据，输入的总长度不超过 20 个字母。<br>对于 50% 的评测数据，输入的总长度不超过 300 个字母。<br>对于 70% 的评测数据，输入的总长度不超过 10000 个字母。<br>对于所有评测数据，每个名字的长度不超过 10 个字母，输入的总长度不超过 1000000 个字母。</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>即求最长上升子序列，只是在过程中需保存路径，最后回溯输出。<br>（代码仅供参考，没有考虑方案有多种的情况）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[N],front[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str,t;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; v;</span><br><span class="line">    <span class="keyword">int</span> n=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;str;</span><br><span class="line">    <span class="keyword">int</span> len=str.length(),i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;len) &#123; <span class="comment">//分隔游客名字 </span></span><br><span class="line">        <span class="keyword">if</span>(str[i]&gt;=<span class="number">65</span> &amp;&amp; str[i]&lt;=<span class="number">90</span>) &#123;</span><br><span class="line">            t=str[i++];</span><br><span class="line">            <span class="keyword">while</span>(str[i]&gt;=<span class="number">97</span> &amp;&amp; str[i]&lt;=<span class="number">122</span>) &#123;</span><br><span class="line">                t+=str[i++];</span><br><span class="line">            &#125;</span><br><span class="line">            v.push_back(t);</span><br><span class="line">            n++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++) &#123; <span class="comment">//求最长上升子序列 </span></span><br><span class="line">        dp[i]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(v[i].compare(v[j])&gt;<span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(dp[j]+<span class="number">1</span>&gt;dp[i]) &#123;</span><br><span class="line">                    dp[i]=dp[j]+<span class="number">1</span>;</span><br><span class="line">                    front[i]=j; <span class="comment">//保存路径 </span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(dp[i]&gt;dp[ans]) &#123;</span><br><span class="line">            ans=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//回溯输出 </span></span><br><span class="line">    <span class="keyword">int</span> m=dp[ans],k=ans;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="built_in">string</span>&gt; s;</span><br><span class="line">    <span class="keyword">while</span>(m--) &#123;</span><br><span class="line">        s.push(v[k]);</span><br><span class="line">        k=front[k];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(!s.empty()) &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;s.top();</span><br><span class="line">        s.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="最长上升子序列" scheme="http://www.pzijigame.com/tags/%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2020年第十一届国赛 C/C++ B组 F 皮亚诺曲线距离</title>
    <link href="http://www.pzijigame.com/2021-05-18-LANQIAOFINAL202006.html"/>
    <id>http://www.pzijigame.com/2021-05-18-LANQIAOFINAL202006.html</id>
    <published>2021-05-18T12:33:31.000Z</published>
    <updated>2021-05-19T01:53:06.914Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>皮亚诺曲线是一条平面内的曲线。<br>下图给出了皮亚诺曲线的 1 阶情形，它是从左下角出发，经过一个 3 × 3 的方格中的每一个格子，最终到达右上角的一条曲线。</p><p><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/FINAL2020061.1.png"><br>下图给出了皮亚诺曲线的 2 阶情形，它是经过一个 3^2 × 3^2 的方格中的每一个格子的一条曲线。它是将 1 阶曲线的每个方格由 1 阶曲线替换而成。</p><p><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/FINAL2020062.1.png"><br>下图给出了皮亚诺曲线的 3 阶情形，它是经过一个 3^3 × 3^3 的方格中的每一个格子的一条曲线。它是将 2 阶曲线的每个方格由 1 阶曲线替换而成。</p><p><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/FINAL2020063.1.png"><br>皮亚诺曲线总是从左下角开始出发，最终到达右上角。<br>我们将这些格子放到坐标系中，对于 k 阶皮亚诺曲线，左下角的坐标是(0, 0)，右上角坐标是(3^k − 1, 3^k − 1)，右下角坐标是(3^k − 1, 0)，左上角坐标是(0, 3^k − 1)。<br>给定 k 阶皮亚诺曲线上的两个点的坐标，请问这两个点之间，如果沿着皮亚诺曲线走，距离是多少？<br>【输入格式】<br>输入的第一行包含一个正整数 k，皮亚诺曲线的阶数。<br>第二行包含两个整数 x1, y1，表示第一个点的坐标。<br>第三行包含两个整数 x2, y2，表示第二个点的坐标。<br>【输出格式】<br>输出一个整数，表示给定的两个点之间的距离。<br>【样例输入】<br>1<br>0 0<br>2 2<br>【样例输出】<br>8<br>【样例输入】<br>2<br>0 2<br>0 3<br>【样例输出】<br>13<br>【评测用例规模与约定】<br>对于 30% 的评测用例，0 ≤ k ≤ 10。<br>对于 50% 的评测用例，0 ≤ k ≤ 20。<br>对于所有评测用例，0 ≤ k ≤ 100, 0 ≤ x1,y1,x2,y2 &lt; 3^k, x1,y1,x2,y2 ≤ 10^18。<br>数据保证答案不超过 10^18。</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>把问题分解为分别求从左下角到第一个点和第二个点的距离，再把距离相减。<br>计算距离时把整个曲线看作由9个较小的方格（低阶的曲线）组成，先计算从左下角的方格到该点所在的方格要走几个方格，然后乘以每个方格低阶曲线的长度，再递归求在较小的方格中到该点所在的更小的方格要走几个方格，直至曲线的阶数降为0，最后把长度进行累加。<br>注意较小的方格的方向可能和原本的方向不一样，不需要分情况处理，对坐标进行对称变换即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">calc</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x,<span class="keyword">long</span> <span class="keyword">long</span> y,<span class="keyword">int</span> k,<span class="keyword">int</span> type)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="built_in">step</span>,base=<span class="built_in">pow</span>(<span class="number">9</span>,k<span class="number">-1</span>);</span><br><span class="line">    <span class="comment">//坐标变换 </span></span><br><span class="line">    <span class="keyword">if</span>(type==<span class="number">1</span>) &#123; <span class="comment">//左上角 </span></span><br><span class="line">        y=<span class="built_in">pow</span>(<span class="number">3</span>,k)<span class="number">-1</span>-y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(type==<span class="number">2</span>) &#123; <span class="comment">//右上角 </span></span><br><span class="line">        x=<span class="built_in">pow</span>(<span class="number">3</span>,k)<span class="number">-1</span>-x;</span><br><span class="line">        y=<span class="built_in">pow</span>(<span class="number">3</span>,k)<span class="number">-1</span>-y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(type==<span class="number">3</span>) &#123; <span class="comment">//右下角 </span></span><br><span class="line">        x=<span class="built_in">pow</span>(<span class="number">3</span>,k)<span class="number">-1</span>-x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="built_in">pow</span>(<span class="number">3</span>,k<span class="number">-1</span>)) &#123; <span class="comment">//第一列 </span></span><br><span class="line">        <span class="keyword">if</span>(y&lt;<span class="built_in">pow</span>(<span class="number">3</span>,k<span class="number">-1</span>)) &#123; <span class="comment">//第一行 </span></span><br><span class="line">            <span class="built_in">step</span>=<span class="number">0</span>;</span><br><span class="line">            <span class="built_in">step</span>+=calc(x,y,k<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(y&lt;<span class="number">2</span>*<span class="built_in">pow</span>(<span class="number">3</span>,k<span class="number">-1</span>)) &#123; <span class="comment">//第二行 </span></span><br><span class="line">            <span class="built_in">step</span>=base;</span><br><span class="line">            <span class="built_in">step</span>+=calc(x,y-<span class="built_in">pow</span>(<span class="number">3</span>,k<span class="number">-1</span>),k<span class="number">-1</span>,<span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123; <span class="comment">//第三行 </span></span><br><span class="line">            <span class="built_in">step</span>=<span class="number">2</span>*base;</span><br><span class="line">            <span class="built_in">step</span>+=calc(x,y<span class="number">-2</span>*<span class="built_in">pow</span>(<span class="number">3</span>,k<span class="number">-1</span>),k<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x&lt;<span class="number">2</span>*<span class="built_in">pow</span>(<span class="number">3</span>,k<span class="number">-1</span>)) &#123; <span class="comment">//第二列 </span></span><br><span class="line">        <span class="keyword">if</span>(y&lt;<span class="built_in">pow</span>(<span class="number">3</span>,k<span class="number">-1</span>)) &#123;</span><br><span class="line">            <span class="built_in">step</span>=<span class="number">5</span>*base;</span><br><span class="line">            <span class="built_in">step</span>+=calc(x-<span class="built_in">pow</span>(<span class="number">3</span>,k<span class="number">-1</span>),y,k<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(y&lt;<span class="number">2</span>*<span class="built_in">pow</span>(<span class="number">3</span>,k<span class="number">-1</span>)) &#123;</span><br><span class="line">            <span class="built_in">step</span>=<span class="number">4</span>*base;</span><br><span class="line">            <span class="built_in">step</span>+=calc(x-<span class="built_in">pow</span>(<span class="number">3</span>,k<span class="number">-1</span>),y-<span class="built_in">pow</span>(<span class="number">3</span>,k<span class="number">-1</span>),k<span class="number">-1</span>,<span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">step</span>=<span class="number">3</span>*base;</span><br><span class="line">            <span class="built_in">step</span>+=calc(x-<span class="built_in">pow</span>(<span class="number">3</span>,k<span class="number">-1</span>),y<span class="number">-2</span>*<span class="built_in">pow</span>(<span class="number">3</span>,k<span class="number">-1</span>),k<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123; <span class="comment">//第三列 </span></span><br><span class="line">        <span class="keyword">if</span>(y&lt;<span class="built_in">pow</span>(<span class="number">3</span>,k<span class="number">-1</span>)) &#123;</span><br><span class="line">            <span class="built_in">step</span>=<span class="number">6</span>*base;</span><br><span class="line">            <span class="built_in">step</span>+=calc(x<span class="number">-2</span>*<span class="built_in">pow</span>(<span class="number">3</span>,k<span class="number">-1</span>),y,k<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(y&lt;<span class="number">2</span>*<span class="built_in">pow</span>(<span class="number">3</span>,k<span class="number">-1</span>)) &#123;</span><br><span class="line">            <span class="built_in">step</span>=<span class="number">7</span>*base;</span><br><span class="line">            <span class="built_in">step</span>+=calc(x<span class="number">-2</span>*<span class="built_in">pow</span>(<span class="number">3</span>,k<span class="number">-1</span>),y-<span class="built_in">pow</span>(<span class="number">3</span>,k<span class="number">-1</span>),k<span class="number">-1</span>,<span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">step</span>=<span class="number">8</span>*base;</span><br><span class="line">            <span class="built_in">step</span>+=calc(x<span class="number">-2</span>*<span class="built_in">pow</span>(<span class="number">3</span>,k<span class="number">-1</span>),y<span class="number">-2</span>*<span class="built_in">pow</span>(<span class="number">3</span>,k<span class="number">-1</span>),k<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">step</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> x1,y1,x2,y2;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;k&gt;&gt;x1&gt;&gt;y1&gt;&gt;x2&gt;&gt;y2;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">abs</span>(calc(x2,y2,k,<span class="number">0</span>)-calc(x1,y1,k,<span class="number">0</span>))&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="找规律" scheme="http://www.pzijigame.com/tags/%E6%89%BE%E8%A7%84%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2020年第十一届国赛 C/C++ B组 E 玩具蛇</title>
    <link href="http://www.pzijigame.com/2021-05-18-LANQIAOFINAL202005.html"/>
    <id>http://www.pzijigame.com/2021-05-18-LANQIAOFINAL202005.html</id>
    <published>2021-05-18T09:50:39.000Z</published>
    <updated>2021-05-19T01:32:42.191Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小蓝有一条玩具蛇，一共有 16 节，上面标着数字 1 至 16。每一节都是一个正方形的形状。相邻的两节可以成直线或者成 90 度角。<br>小蓝还有一个 4 × 4 的方格盒子，用于存放玩具蛇，盒子的方格上依次标着字母 A 到 P 共 16 个字母。<br>小蓝可以折叠自己的玩具蛇放到盒子里面。他发现，有很多种方案可以将玩具蛇放进去。<br>下图给出了两种方案：</p><p><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/FINAL202005.png"><br>请帮小蓝计算一下，总共有多少种不同的方案。<br>如果两个方案中，存在玩具蛇的某一节放在了盒子的不同格子里，则认为是不同的方案。</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>使用深度优先搜索（DFS），以每个方格作为起点进行搜索即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dis[<span class="number">4</span>][<span class="number">2</span>]=&#123;&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-1</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(vis[x][y]) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">16</span>) &#123;</span><br><span class="line">        ans++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    vis[x][y]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> dx=x+dis[i][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> dy=y+dis[i][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(dx&gt;=<span class="number">0</span> &amp;&amp; dx&lt;<span class="number">4</span> &amp;&amp; dy&gt;=<span class="number">0</span> &amp;&amp; dy&lt;<span class="number">4</span>) &#123;</span><br><span class="line">            dfs(dx,dy,n+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    vis[x][y]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++) &#123;</span><br><span class="line">            dfs(i,j,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>552</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="深度优先搜索" scheme="http://www.pzijigame.com/tags/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2020年第十一届国赛 C/C++ B组 D 本质上升序列</title>
    <link href="http://www.pzijigame.com/2021-05-18-LANQIAOFINAL202004.html"/>
    <id>http://www.pzijigame.com/2021-05-18-LANQIAOFINAL202004.html</id>
    <published>2021-05-18T08:31:38.000Z</published>
    <updated>2021-05-19T01:23:47.326Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小蓝特别喜欢单调递增的事物。<br>在一个字符串中，如果取出若干个字符，将这些字符按照在字符串中的顺序排列后是单调递增的，则成为这个字符串中的一个单调递增子序列。<br>例如，在字符串 lanqiao 中，如果取出字符 n 和 q，则 nq 组成一个单调递增子序列。类似的单调递增子序列还有 lnq、i、ano 等等。<br>小蓝发现，有些子序列虽然位置不同，但是字符序列是一样的，例如取第二个字符和最后一个字符可以取到 ao，取最后两个字符也可以取到 ao。小蓝认为他们并没有本质不同。<br>对于一个字符串，小蓝想知道，本质不同的递增子序列有多少个？<br>例如，对于字符串 lanqiao，本质不同的递增子序列有 21 个。它们分别是 l、a、n、q、i、o、ln、an、lq、aq、nq、ai、lo、ao、no、io、lnq、anq、lno、ano、aio。<br>请问对于以下字符串（共 200 个小写英文字母，分四行显示）：<br>tocyjkdzcieoiodfpbgcncsrjbhmugdnojjddhllnofawllbhf<br>iadgdcdjstemphmnjihecoapdjjrprrqnhgccevdarufmliqij<br>gihhfgdcmxvicfauachlifhafpdccfseflcdgjncadfclvfmad<br>vrnaaahahndsikzssoywakgnfjjaihtniptwoulxbaeqkqhfwl<br>本质不同的递增子序列有多少个？</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>使用动态规划，设 $dp[i]$ 为从 $s[0]$ 开始以 $s[i]$ 结尾的子字符串中的本质上升序列个数，则状态转移方程为<br>$dp[i]\ +=dp[j],s[i]&gt;s[j]$<br>由于 $s[i]$ 单个字符也是本质上升序列，所有初始化 $dp[i]=1$；<br>若 $s[i]&gt;s[j]$，则 $dp[i]\ -=dp[j]$，因为最后要累加 $dp[i]$，所以在这里需去重。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">200</span>]; <span class="comment">//dp[i]为从s[0]开始以s[i]结尾的子字符串中的本质上升序列个数 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;str;</span><br><span class="line">    <span class="keyword">int</span> n=str.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123; <span class="comment">//s[i]单个字符是本质上升序列 </span></span><br><span class="line">        dp[i]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(str[i]&gt;str[j]) &#123;</span><br><span class="line">                dp[i]+=dp[j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(str[i]==str[j]) &#123; <span class="comment">//去重 </span></span><br><span class="line">                dp[i]-=dp[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        ans+=dp[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>3616159</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="动态规划" scheme="http://www.pzijigame.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2020年第十一届国赛 C/C++ B组 C 阶乘约数</title>
    <link href="http://www.pzijigame.com/2021-05-18-LANQIAOFINAL202003.html"/>
    <id>http://www.pzijigame.com/2021-05-18-LANQIAOFINAL202003.html</id>
    <published>2021-05-18T08:04:08.000Z</published>
    <updated>2021-05-18T08:22:20.148Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>定义阶乘 n! = 1 × 2 × 3 × · · · × n。<br>请问100!（100的阶乘）有多少个正约数。</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>对于任意大于 1 的正整数 n 可以分解质因数 $n=\prod p_i^{a_i}=p_1^{a_1}p_2^{a_2}\cdots p_k^{a_k}$<br>则 n 的正约数的个数 $f(n)=\prod ({a_i}+1)=({a_1}+1)({a_2}+1)\cdots ({a_k}+1)$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> p[<span class="number">101</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">100</span>;i++) &#123; <span class="comment">// 分解质因数 </span></span><br><span class="line">        <span class="keyword">int</span> n=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>;j*j&lt;=n;j++) &#123;</span><br><span class="line">            <span class="keyword">while</span>(n%j==<span class="number">0</span>) &#123;</span><br><span class="line">                p[j]++;</span><br><span class="line">                n/=j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n&gt;<span class="number">1</span>) &#123;</span><br><span class="line">            p[n]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">100</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(p[i]) &#123;</span><br><span class="line">            ans*=(p[i]+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>39001250856960000</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="数学" scheme="http://www.pzijigame.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2020年第十一届国赛 C/C++ B组 B 扩散</title>
    <link href="http://www.pzijigame.com/2021-05-17-LANQIAOFINAL202002.html"/>
    <id>http://www.pzijigame.com/2021-05-17-LANQIAOFINAL202002.html</id>
    <published>2021-05-17T13:40:54.000Z</published>
    <updated>2021-05-18T08:08:23.296Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小蓝在一张无限大的特殊画布上作画。<br>这张画布可以看成一个方格图，每个格子可以用一个二维的整数坐标表示。<br>小蓝在画布上首先点了一下几个点：(0, 0), (2020, 11), (11, 14), (2000, 2000)。<br>只有这几个格子上有黑色，其它位置都是白色的。<br>每过一分钟，黑色就会扩散一点。具体的，如果一个格子里面是黑色，它就会扩散到上、下、左、右四个相邻的格子中，使得这四个格子也变成黑色（如果原来就是黑色，则还是黑色）。<br>请问，经过 2020 分钟后，画布上有多少个格子是黑色的。</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>适合使用广度优先搜索（BFS），不适合使用深度优先搜索（DFS）。<br>注意将坐标加上 2020，使扩散过程中坐标一直都大于等于 0。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Nx=<span class="number">6061</span>,Ny=<span class="number">6041</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y,n;</span><br><span class="line">    Node(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> m) &#123;</span><br><span class="line">        x=a;</span><br><span class="line">        y=b;</span><br><span class="line">        n=m;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; node;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> vis[Nx][Ny];</span><br><span class="line"><span class="keyword">int</span> dis[<span class="number">4</span>][<span class="number">2</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-1</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;node&gt; q;</span><br><span class="line">    q.push(node(<span class="number">0</span>+<span class="number">2020</span>,<span class="number">0</span>+<span class="number">2020</span>,<span class="number">0</span>));</span><br><span class="line">    vis[<span class="number">0</span>+<span class="number">2020</span>][<span class="number">0</span>+<span class="number">2020</span>]=<span class="number">1</span>;</span><br><span class="line">    q.push(node(<span class="number">2020</span>+<span class="number">2020</span>,<span class="number">11</span>+<span class="number">2020</span>,<span class="number">0</span>));</span><br><span class="line">    vis[<span class="number">2020</span>+<span class="number">2020</span>][<span class="number">11</span>+<span class="number">2020</span>]=<span class="number">1</span>;</span><br><span class="line">    q.push(node(<span class="number">11</span>+<span class="number">2020</span>,<span class="number">14</span>+<span class="number">2020</span>,<span class="number">0</span>));</span><br><span class="line">    vis[<span class="number">11</span>+<span class="number">2020</span>][<span class="number">14</span>+<span class="number">2020</span>]=<span class="number">1</span>;</span><br><span class="line">    q.push(node(<span class="number">2000</span>+<span class="number">2020</span>,<span class="number">2000</span>+<span class="number">2020</span>,<span class="number">0</span>));</span><br><span class="line">    vis[<span class="number">2000</span>+<span class="number">2020</span>][<span class="number">2000</span>+<span class="number">2020</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        node p=q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">if</span>(p.n==<span class="number">2020</span>) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> tx=p.x+dis[i][<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> ty=p.y+dis[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(!vis[tx][ty]) &#123;</span><br><span class="line">                vis[tx][ty]=<span class="number">1</span>;</span><br><span class="line">                ans++;</span><br><span class="line">                q.push(node(tx,ty,p.n+<span class="number">1</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    bfs();</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>20312088</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="广度优先搜索" scheme="http://www.pzijigame.com/tags/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2020年第十一届省赛第二场 C/C++ B组 I 平面切分</title>
    <link href="http://www.pzijigame.com/2021-04-14-LANQIAO2020209.html"/>
    <id>http://www.pzijigame.com/2021-04-14-LANQIAO2020209.html</id>
    <published>2021-04-14T02:51:03.000Z</published>
    <updated>2021-04-14T09:05:08.417Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>平面上有 N 条直线，其中第 i 条直线是 y=Ai⋅x+Bi。<br>请计算这些直线将平面分成了几个部分。<br>输入格式<br>第一行包含一个整数 N。<br>以下 N 行，每行包含两个整数 Ai, Bi。<br>输出格式<br>一个整数代表答案。<br>输入样例：<br>3<br>1 1<br>2 2<br>3 3<br>输出样例：<br>6<br>数据范围<br>对于 50% 的评测用例，1 ≤ N ≤ 4，−10 ≤ Ai, Bi ≤ 10。<br>对于所有评测用例，1 ≤ N ≤ 1000，−100000 ≤ Ai, Bi ≤ 100000。</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>在同一个平面内，如果添加的每一条直线互不相交，则每添加一条直线，就会增加一个平面；<br>当添加一条直线时，这条直线与当前平面内已有直线每产生一个不同的交点时，这条直线对平面总数量的贡献会额外增加一个，<br>即每条直线对平面总数量的贡献为 n + 1，其中 n 为该直线与当前平面内现存直线存在的不同交点的个数。<br>我们在每添加一条直线时设置一个空的 set，将该直线与当前平面内现存直线的交点的坐标存入 set 中，则最后 size() 即为不同交点的个数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> lines[N][<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">int</span> vis[N]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">pair</span>&lt;<span class="keyword">long</span> <span class="keyword">double</span>,<span class="keyword">long</span> <span class="keyword">double</span>&gt; <span class="built_in">point</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;lines[i][<span class="number">0</span>]&gt;&gt;lines[i][<span class="number">1</span>];</span><br><span class="line">        <span class="built_in">set</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">long</span> <span class="keyword">double</span>,<span class="keyword">long</span> <span class="keyword">double</span>&gt;&gt; points;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(vis[j]) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(lines[i][<span class="number">0</span>]==lines[j][<span class="number">0</span>]) &#123;</span><br><span class="line">                <span class="keyword">if</span>(lines[i][<span class="number">1</span>]==lines[j][<span class="number">1</span>]) &#123; <span class="comment">//重合 </span></span><br><span class="line">                    vis[i]=<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">continue</span>; <span class="comment">//平行 </span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">point</span>.first=(lines[j][<span class="number">1</span>]-lines[i][<span class="number">1</span>])*<span class="number">1.0</span>/(lines[i][<span class="number">0</span>]-lines[j][<span class="number">0</span>]);</span><br><span class="line">            <span class="built_in">point</span>.second=lines[i][<span class="number">0</span>]*<span class="built_in">point</span>.first+lines[i][<span class="number">1</span>];</span><br><span class="line">            points.insert(<span class="built_in">point</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i]) &#123;</span><br><span class="line">            ans+=points.<span class="built_in">size</span>()+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans+<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="数学" scheme="http://www.pzijigame.com/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2020年第十一届省赛第二场 C/C++ B组 H 子串分值和</title>
    <link href="http://www.pzijigame.com/2021-04-14-LANQIAO2020208.html"/>
    <id>http://www.pzijigame.com/2021-04-14-LANQIAO2020208.html</id>
    <published>2021-04-14T02:27:10.000Z</published>
    <updated>2021-04-14T09:04:58.416Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>对于一个字符串 S，我们定义 S 的分值 f(S) 为 S 中出现的不同的字符个数。<br>例如 f(“aba”) = 2，f(“abc”) = 3，f(“aaa”) = 1。<br>现在给定一个字符串 S [0::n−1]（长度为 n），请你计算对于所有 S 的非空子串 S[i::j] (0 ≤ i ≤ j &lt; n)，f(S[i::j]) 的和是多少。<br>输入格式<br>输入一行包含一个由小写字母组成的字符串 S。<br>输出格式<br>输出一个整数表示答案。<br>输入样例<br>ababc<br>输出样例<br>28<br>样例解释<br>子串 f值<br>a 1<br>ab 2<br>aba 2<br>abab 2<br>ababc 3<br>b 1<br>ba 2<br>bab 2<br>babc 3<br>a 1<br>ab 2<br>abc 3<br>b 1<br>bc 2<br>c 1<br>数据范围<br>对于 20% 的评测用例，1 ≤ n ≤ 10；<br>对于 40% 的评测用例，1 ≤ n ≤ 100；<br>对于 50% 的评测用例，1 ≤ n ≤ 1000；<br>对于 60% 的评测用例，1 ≤ n ≤ 10000；<br>对于所有评测用例，1 ≤ n ≤ 100000。</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>暴力：使用unordered_set（只去重不排序，效率比set高）保存子串，s.size() 即为子串分值，但只能通过50%的数据。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;unordered_set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;str;</span><br><span class="line">    <span class="keyword">int</span> n=str.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">unordered_set</span>&lt;<span class="keyword">char</span>&gt; s;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;n;j++) &#123;</span><br><span class="line">            s.insert(str[j]);</span><br><span class="line">            ans+=s.<span class="built_in">size</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每个字母只有第一次出现时才有贡献度，因此可以统计每个字母在只出现一次的情况下，能被多少子串所包含。<br>用 last[S[i]] 记录字母 S[i] 上一次出现的位置。<br>那么往左最多能延伸到 last[S[i]] + 1，其到第 i 个字母一共有 i - last[S[i]] 个字母；<br>同理往右最多能延伸到 n，其到第 i 个字母一共有 n - i + 1 个字母，<br>二者相乘，就是该字母被不同子串所包含的总次数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;str;</span><br><span class="line">    <span class="keyword">int</span> n=str.<span class="built_in">size</span>();</span><br><span class="line">    str=<span class="string">&#x27; &#x27;</span>+str;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> last[<span class="number">26</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        ans+=<span class="number">1L</span>L*(i-last[str[i]-<span class="string">&#x27;a&#x27;</span>])*(n-i+<span class="number">1</span>);</span><br><span class="line">        last[str[i]-<span class="string">&#x27;a&#x27;</span>]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="STL" scheme="http://www.pzijigame.com/tags/STL/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯 2020年第十一届省赛第二场 C/C++ B组 G 回文日期</title>
    <link href="http://www.pzijigame.com/2021-04-14-LANQIAO2020207.html"/>
    <id>http://www.pzijigame.com/2021-04-14-LANQIAO2020207.html</id>
    <published>2021-04-14T02:11:44.000Z</published>
    <updated>2021-04-14T09:04:46.042Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>2020 年春节期间，有一个特殊的日期引起了大家的注意：2020 年 2 月 2 日。<br>因为如果将这个日期按 yyyymmdd 的格式写成一个 8 位数是 20200202，恰好是一个回文数。<br>我们称这样的日期是回文日期。<br>有人表示 20200202 是“千年一遇”的特殊日子。<br>对此小明很不认同，因为不到 2 年之后就是下一个回文日期：20211202 即 2021 年 12 月 2 日。<br>也有人表示 20200202 并不仅仅是一个回文日期，还是一个 ABABBABA 型的回文日期。<br>对此小明也不认同，因为大约 100 年后就能遇到下一个 ABABBABA 型的回文日期：21211212 即 2121 年 12 月 12 日。<br>算不上“千年一遇”，顶多算“千年两遇”。<br>给定一个 8 位数的日期，请你计算该日期之后下一个回文日期和下一个 ABABBABA 型的回文日期各是哪一天。<br>注意：下一个回文日期和下一个 ABABBABA 型的回文日期可能是同一天。<br>ABABBABA 型的回文日期，需要满足 A≠B。<br>输入格式<br>输入包含一个八位整数 N，表示日期。<br>输出格式<br>第一行表示下一个回文日期，<br>第二行表示下一个 ABABBABA 型的回文日期。<br>输入样例<br>20200202<br>输出样例<br>20211202<br>21211212<br>数据范围<br>对于所有评测用例，10000101 ≤ N ≤ 89991231，保证 N 是一个合法日期的 8 位数表示。</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>暴力往后寻找即可，注意数值转字符串的方法，使用 stringstream 对象。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> year,month,day;</span><br><span class="line">    year=n/<span class="number">10000</span>;</span><br><span class="line">    month=n%<span class="number">10000</span>/<span class="number">100</span>;</span><br><span class="line">    day=n%<span class="number">100</span>;</span><br><span class="line">    day++;</span><br><span class="line">    <span class="built_in">string</span> date,date1,date2,yearStr,monthStr,dayStr;</span><br><span class="line">    <span class="keyword">int</span> monthDay[<span class="number">13</span>]=&#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> f1=<span class="number">0</span>,f2=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(year%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;year%<span class="number">100</span>!=<span class="number">0</span> || year%<span class="number">400</span>==<span class="number">0</span>) &#123;</span><br><span class="line">            monthDay[<span class="number">2</span>]=<span class="number">29</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            monthDay[<span class="number">2</span>]=<span class="number">28</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">stringstream</span> yearSS;</span><br><span class="line">        yearSS&lt;&lt;year;</span><br><span class="line">        yearSS&gt;&gt;yearStr;</span><br><span class="line">        <span class="keyword">while</span>(month&lt;=<span class="number">12</span>) &#123;</span><br><span class="line">            <span class="built_in">stringstream</span> monthSS;</span><br><span class="line">            monthSS&lt;&lt;month;</span><br><span class="line">            monthSS&gt;&gt;monthStr;</span><br><span class="line">            <span class="keyword">if</span>(month&lt;<span class="number">10</span>) &#123;</span><br><span class="line">                monthStr=<span class="string">&quot;0&quot;</span>+monthStr;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(day&lt;=monthDay[month]) &#123;</span><br><span class="line">                <span class="built_in">stringstream</span> daySS;</span><br><span class="line">                daySS&lt;&lt;day;</span><br><span class="line">                daySS&gt;&gt;dayStr;</span><br><span class="line">                <span class="keyword">if</span>(day&lt;<span class="number">10</span>) &#123;</span><br><span class="line">                    dayStr=<span class="string">&quot;0&quot;</span>+dayStr;</span><br><span class="line">                &#125;</span><br><span class="line">                date=yearStr+monthStr+dayStr;</span><br><span class="line">                <span class="comment">//下一个回文日期</span></span><br><span class="line">                <span class="keyword">if</span>(!f1 &amp;&amp; date[<span class="number">0</span>]==date[<span class="number">7</span>] &amp;&amp; date[<span class="number">1</span>]==date[<span class="number">6</span>] &amp;&amp; date[<span class="number">2</span>]==date[<span class="number">5</span>] &amp;&amp; date[<span class="number">3</span>]==date[<span class="number">4</span>]) &#123;</span><br><span class="line">                    date1=date;</span><br><span class="line">                    f1=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//下一个 ABABBABA 型的回文日期</span></span><br><span class="line">                <span class="keyword">if</span>(date[<span class="number">0</span>]!=date[<span class="number">1</span>] &amp;&amp; date[<span class="number">2</span>]==date[<span class="number">0</span>] &amp;&amp; date[<span class="number">5</span>]==date[<span class="number">0</span>] &amp;&amp; date[<span class="number">7</span>]==date[<span class="number">0</span>] &amp;&amp; </span><br><span class="line">                   date[<span class="number">3</span>]==date[<span class="number">1</span>] &amp;&amp; date[<span class="number">4</span>]==date[<span class="number">1</span>] &amp;&amp; date[<span class="number">6</span>]==date[<span class="number">1</span>]) &#123;</span><br><span class="line">                    date2=date;</span><br><span class="line">                    f2=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(f1 &amp;&amp; f2) &#123;</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;date1&lt;&lt;<span class="built_in">endl</span>&lt;&lt;date2&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                day++;</span><br><span class="line">            &#125;</span><br><span class="line">            month++;</span><br><span class="line">            day=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        year++;</span><br><span class="line">        month=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="蓝桥杯" scheme="http://www.pzijigame.com/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="日期计算" scheme="http://www.pzijigame.com/tags/%E6%97%A5%E6%9C%9F%E8%AE%A1%E7%AE%97/"/>
    
  </entry>
  
</feed>
