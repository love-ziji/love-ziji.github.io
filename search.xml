<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>蓝桥杯 省赛 C/C++ B组 历年真题及解答</title>
    <url>/2021-03-10-LANQIAO.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="2012年第三届"><a href="#2012年第三届" class="headerlink" title="2012年第三届"></a>2012年第三届</h2><h3 id="01-微生物增殖"><a href="#01-微生物增殖" class="headerlink" title="01 微生物增殖"></a><a href="https://blog.pzijigame.com/2021-03-24-LANQIAO201201.html">01 微生物增殖</a></h3><h3 id="02-古堡算式"><a href="#02-古堡算式" class="headerlink" title="02 古堡算式"></a><a href="https://blog.pzijigame.com/2021-03-09-LANQIAO201202.html">02 古堡算式</a></h3><h3 id="03-比酒量"><a href="#03-比酒量" class="headerlink" title="03 比酒量"></a><a href="https://blog.pzijigame.com/2021-03-10-LANQIAO201203.html">03 比酒量</a></h3><h3 id="04-奇怪的比赛"><a href="#04-奇怪的比赛" class="headerlink" title="04 奇怪的比赛"></a><a href="https://blog.pzijigame.com/2021-03-10-LANQIAO201204.html">04 奇怪的比赛</a></h3><h3 id="08-密码发生器"><a href="#08-密码发生器" class="headerlink" title="08 密码发生器"></a><a href="https://blog.pzijigame.com/2021-03-10-LANQIAO201208.html">08 密码发生器</a></h3><h3 id="09-夺冠概率"><a href="#09-夺冠概率" class="headerlink" title="09 夺冠概率"></a><a href="https://blog.pzijigame.com/2021-03-10-LANQIAO201209.html">09 夺冠概率</a></h3><h3 id="10-取球游戏"><a href="#10-取球游戏" class="headerlink" title="10 取球游戏"></a><a href="https://blog.pzijigame.com/2021-03-10-LANQIAO201210.html">10 取球游戏</a></h3><h2 id="2013年第四届"><a href="#2013年第四届" class="headerlink" title="2013年第四届"></a>2013年第四届</h2><h3 id="01-高斯日记"><a href="#01-高斯日记" class="headerlink" title="01 高斯日记"></a><a href="https://blog.pzijigame.com/2021-03-12-LANQIAO201301.html">01 高斯日记</a></h3><h3 id="02-马虎的算式-✨"><a href="#02-马虎的算式-✨" class="headerlink" title="02 马虎的算式 ✨"></a><a href="https://www.lanqiao.cn/problems/715/learning/">02 马虎的算式</a> ✨</h3><h3 id="03-第39级台阶"><a href="#03-第39级台阶" class="headerlink" title="03 第39级台阶"></a><a href="https://blog.pzijigame.com/2021-03-12-LANQIAO201303.html">03 第39级台阶</a></h3><h3 id="04-黄金连分数"><a href="#04-黄金连分数" class="headerlink" title="04 黄金连分数"></a><a href="https://blog.pzijigame.com/2021-03-12-LANQIAO201304.html">04 黄金连分数</a></h3><h3 id="07-错误票据"><a href="#07-错误票据" class="headerlink" title="07 错误票据"></a><a href="https://blog.pzijigame.com/2021-03-13-LANQIAO201307.html">07 错误票据</a></h3><h3 id="08-翻硬币"><a href="#08-翻硬币" class="headerlink" title="08 翻硬币"></a><a href="https://blog.pzijigame.com/2021-03-13-LANQIAO201308.html">08 翻硬币</a></h3><h3 id="09-带分数"><a href="#09-带分数" class="headerlink" title="09 带分数"></a><a href="https://blog.pzijigame.com/2021-03-13-LANQIAO201309.html">09 带分数</a></h3><h3 id="10-连号区间数"><a href="#10-连号区间数" class="headerlink" title="10 连号区间数"></a><a href="https://blog.pzijigame.com/2021-03-13-LANQIAO201310.html">10 连号区间数</a></h3><h2 id="2014年第五届"><a href="#2014年第五届" class="headerlink" title="2014年第五届"></a>2014年第五届</h2><h3 id="01-啤酒和饮料-✨"><a href="#01-啤酒和饮料-✨" class="headerlink" title="01 啤酒和饮料 ✨"></a><a href="https://www.lanqiao.cn/problems/702/learning/">01 啤酒和饮料</a> ✨</h3><h3 id="02-切面条"><a href="#02-切面条" class="headerlink" title="02 切面条"></a><a href="https://blog.pzijigame.com/2021-03-18-LANQIAO201402.html">02 切面条</a></h3><h3 id="03-李白打酒-✨-相关例题"><a href="#03-李白打酒-✨-相关例题" class="headerlink" title="03 李白打酒 ✨ 相关例题"></a><a href="https://www.lanqiao.cn/problems/703/learning/">03 李白打酒</a> ✨ <a href="https://blog.pzijigame.com/2021-03-10-LANQIAO201204.html">相关例题</a></h3><h3 id="06-奇怪的分式-✨"><a href="#06-奇怪的分式-✨" class="headerlink" title="06 奇怪的分式 ✨"></a><a href="https://www.lanqiao.cn/problems/704/learning/">06 奇怪的分式</a> ✨</h3><h3 id="07-六角填数"><a href="#07-六角填数" class="headerlink" title="07 六角填数"></a><a href="https://blog.pzijigame.com/2021-03-18-LANQIAO201407.html">07 六角填数</a></h3><h3 id="08-蚂蚁感冒"><a href="#08-蚂蚁感冒" class="headerlink" title="08 蚂蚁感冒"></a><a href="https://blog.pzijigame.com/2021-03-19-LANQIAO201408.html">08 蚂蚁感冒</a></h3><h3 id="09-地宫取宝"><a href="#09-地宫取宝" class="headerlink" title="09 地宫取宝"></a><a href="https://blog.pzijigame.com/2021-03-19-LANQIAO201409.html">09 地宫取宝</a></h3><h3 id="10-小朋友排队"><a href="#10-小朋友排队" class="headerlink" title="10 小朋友排队"></a><a href="https://blog.pzijigame.com/2021-03-19-LANQIAO201410.html">10 小朋友排队</a></h3><h2 id="2015年第六届"><a href="#2015年第六届" class="headerlink" title="2015年第六届"></a>2015年第六届</h2><h3 id="01-奖券数目-✨"><a href="#01-奖券数目-✨" class="headerlink" title="01 奖券数目 ✨"></a><a href="https://www.lanqiao.cn/problems/673/learning/">01 奖券数目</a> ✨</h3><h3 id="02-星系炸弹-✨-相关例题"><a href="#02-星系炸弹-✨-相关例题" class="headerlink" title="02 星系炸弹 ✨ 相关例题"></a><a href="https://www.lanqiao.cn/problems/670/learning/">02 星系炸弹</a> ✨ <a href="https://blog.pzijigame.com/2021-03-12-LANQIAO201301.html">相关例题</a></h3><h3 id="03-三羊献瑞"><a href="#03-三羊献瑞" class="headerlink" title="03 三羊献瑞"></a><a href="https://blog.pzijigame.com/2021-03-23-LANQIAO201503.html">03 三羊献瑞</a></h3><h3 id="06-加法变乘法-✨"><a href="#06-加法变乘法-✨" class="headerlink" title="06 加法变乘法 ✨"></a>06 加法变乘法 ✨</h3><h3 id="07-牌型种数"><a href="#07-牌型种数" class="headerlink" title="07 牌型种数"></a><a href="https://blog.pzijigame.com/2021-03-23-LANQIAO201507.html">07 牌型种数</a></h3><h3 id="08-移动距离"><a href="#08-移动距离" class="headerlink" title="08 移动距离"></a><a href="https://blog.pzijigame.com/2021-03-23-LANQIAO201508.html">08 移动距离</a></h3><h3 id="09-垒骰子"><a href="#09-垒骰子" class="headerlink" title="09 垒骰子"></a><a href="https://blog.pzijigame.com/2021-03-23-LANQIAO201509.html">09 垒骰子</a></h3><h3 id="10-生命之树"><a href="#10-生命之树" class="headerlink" title="10 生命之树"></a><a href="https://blog.pzijigame.com/2021-03-23-LANQIAO201510.html">10 生命之树</a></h3><h2 id="2016年第七届"><a href="#2016年第七届" class="headerlink" title="2016年第七届"></a>2016年第七届</h2><h3 id="01-煤球数目-✨"><a href="#01-煤球数目-✨" class="headerlink" title="01 煤球数目 ✨"></a><a href="https://www.lanqiao.cn/problems/667/learning/">01 煤球数目</a> ✨</h3><h3 id="02-生日蜡烛-✨"><a href="#02-生日蜡烛-✨" class="headerlink" title="02 生日蜡烛 ✨"></a><a href="https://www.lanqiao.cn/problems/663/learning/">02 生日蜡烛</a> ✨</h3><h3 id="03-凑算式"><a href="#03-凑算式" class="headerlink" title="03 凑算式"></a><a href="https://blog.pzijigame.com/2021-03-27-LANQIAO201603.html">03 凑算式</a></h3><h3 id="06-方格填数"><a href="#06-方格填数" class="headerlink" title="06 方格填数"></a><a href="https://blog.pzijigame.com/2021-03-27-LANQIAO201606.html">06 方格填数</a></h3><h3 id="07-剪邮票"><a href="#07-剪邮票" class="headerlink" title="07 剪邮票"></a><a href="https://blog.pzijigame.com/2021-03-27-LANQIAO201607.html">07 剪邮票</a></h3><h3 id="08-四平方和"><a href="#08-四平方和" class="headerlink" title="08 四平方和"></a><a href="https://blog.pzijigame.com/2021-03-27-LANQIAO201608.html">08 四平方和</a></h3><h3 id="09-交换瓶子"><a href="#09-交换瓶子" class="headerlink" title="09 交换瓶子"></a><a href="https://blog.pzijigame.com/2021-03-27-LANQIAO201609.html">09 交换瓶子</a></h3><h3 id="10-最大比例"><a href="#10-最大比例" class="headerlink" title="10 最大比例"></a><a href="https://blog.pzijigame.com/2021-03-27-LANQIAO201610.html">10 最大比例</a></h3><h2 id="2017年第八届"><a href="#2017年第八届" class="headerlink" title="2017年第八届"></a>2017年第八届</h2><h3 id="01-购物单-✨"><a href="#01-购物单-✨" class="headerlink" title="01 购物单 ✨"></a><a href="https://www.lanqiao.cn/problems/645/learning/">01 购物单</a> ✨</h3><h3 id="02-等差素数列"><a href="#02-等差素数列" class="headerlink" title="02 等差素数列"></a><a href="https://blog.pzijigame.com/2021-03-28-LANQIAO201702.html">02 等差素数列</a></h3><h3 id="03-承压计算"><a href="#03-承压计算" class="headerlink" title="03 承压计算"></a><a href="https://blog.pzijigame.com/2021-03-28-LANQIAO201703.html">03 承压计算</a></h3><h3 id="04-方格分割"><a href="#04-方格分割" class="headerlink" title="04 方格分割"></a><a href="https://blog.pzijigame.com/2021-03-28-LANQIAO201704.html">04 方格分割</a></h3><h3 id="07-日期问题"><a href="#07-日期问题" class="headerlink" title="07 日期问题"></a><a href="https://blog.pzijigame.com/2021-03-28-LANQIAO201707.html">07 日期问题</a></h3><h3 id="08-包子凑数"><a href="#08-包子凑数" class="headerlink" title="08 包子凑数"></a><a href="https://blog.pzijigame.com/2021-03-28-LANQIAO201708.html">08 包子凑数</a></h3><h3 id="09-分巧克力"><a href="#09-分巧克力" class="headerlink" title="09 分巧克力"></a><a href="https://blog.pzijigame.com/2021-03-29-LANQIAO201709.html">09 分巧克力</a></h3><h3 id="10-k倍区间"><a href="#10-k倍区间" class="headerlink" title="10 k倍区间"></a><a href="https://blog.pzijigame.com/2021-03-29-LANQIAO201710.html">10 k倍区间</a></h3><h2 id="2018年第九届"><a href="#2018年第九届" class="headerlink" title="2018年第九届"></a>2018年第九届</h2><h3 id="01-第几天-✨"><a href="#01-第几天-✨" class="headerlink" title="01 第几天 ✨"></a><a href="https://www.lanqiao.cn/problems/614/learning/">01 第几天</a> ✨</h3><h3 id="02-明码"><a href="#02-明码" class="headerlink" title="02 明码"></a><a href="https://blog.pzijigame.com/2021-04-11-LANQIAO201802.html">02 明码</a></h3><h3 id="03-乘积尾零"><a href="#03-乘积尾零" class="headerlink" title="03 乘积尾零"></a><a href="https://blog.pzijigame.com/2021-04-11-LANQIAO201803.html">03 乘积尾零</a></h3><h3 id="04-测试次数"><a href="#04-测试次数" class="headerlink" title="04 测试次数"></a><a href="https://blog.pzijigame.com/2021-04-11-LANQIAO201804.html">04 测试次数</a></h3><h3 id="06-递增三元组"><a href="#06-递增三元组" class="headerlink" title="06 递增三元组"></a><a href="https://blog.pzijigame.com/2021-04-11-LANQIAO201806.html">06 递增三元组</a></h3><h3 id="07-螺旋折线"><a href="#07-螺旋折线" class="headerlink" title="07 螺旋折线"></a><a href="https://blog.pzijigame.com/2021-04-11-LANQIAO201807.html">07 螺旋折线</a></h3><h3 id="08-日志统计"><a href="#08-日志统计" class="headerlink" title="08 日志统计"></a><a href="https://blog.pzijigame.com/2021-04-11-LANQIAO201808.html">08 日志统计</a></h3><h3 id="09-全球变暖"><a href="#09-全球变暖" class="headerlink" title="09 全球变暖"></a><a href="https://blog.pzijigame.com/2021-04-11-LANQIAO201809.html">09 全球变暖</a></h3><h3 id="10-乘积最大【努力ing】"><a href="#10-乘积最大【努力ing】" class="headerlink" title="10 乘积最大【努力ing】"></a><a href="https://www.lanqiao.cn/problems/169/learning/">10 乘积最大</a>【努力ing】</h3><h2 id="2019年第十届"><a href="#2019年第十届" class="headerlink" title="2019年第十届"></a>2019年第十届</h2><h3 id="A-组队"><a href="#A-组队" class="headerlink" title="A 组队"></a><a href="https://blog.pzijigame.com/2021-04-11-LANQIAO201901.html">A 组队</a></h3><h3 id="B-年号字串"><a href="#B-年号字串" class="headerlink" title="B 年号字串"></a><a href="https://blog.pzijigame.com/2021-04-11-LANQIAO201902.html">B 年号字串</a></h3><h3 id="C-数列求值"><a href="#C-数列求值" class="headerlink" title="C 数列求值"></a><a href="https://blog.pzijigame.com/2021-04-12-LANQIAO201903.html">C 数列求值</a></h3><h3 id="D-数的分解"><a href="#D-数的分解" class="headerlink" title="D 数的分解"></a><a href="https://blog.pzijigame.com/2021-04-12-LANQIAO201904.html">D 数的分解</a></h3><h3 id="E-迷宫"><a href="#E-迷宫" class="headerlink" title="E 迷宫"></a><a href="https://blog.pzijigame.com/2021-04-12-LANQIAO201905.html">E 迷宫</a></h3><h3 id="F-特别数的和-✨"><a href="#F-特别数的和-✨" class="headerlink" title="F 特别数的和 ✨"></a><a href="https://www.lanqiao.cn/problems/191/learning/">F 特别数的和</a> ✨</h3><h3 id="G-完全二叉树的权值"><a href="#G-完全二叉树的权值" class="headerlink" title="G 完全二叉树的权值"></a><a href="https://blog.pzijigame.com/2021-04-12-LANQIAO201907.html">G 完全二叉树的权值</a></h3><h3 id="H-等差数列"><a href="#H-等差数列" class="headerlink" title="H 等差数列"></a><a href="https://blog.pzijigame.com/2021-04-12-LANQIAO201908.html">H 等差数列</a></h3><h3 id="I-后缀表达式"><a href="#I-后缀表达式" class="headerlink" title="I 后缀表达式"></a><a href="https://blog.pzijigame.com/2021-04-12-LANQIAO201909.html">I 后缀表达式</a></h3><h3 id="J-灵能传输"><a href="#J-灵能传输" class="headerlink" title="J 灵能传输"></a><a href="https://blog.pzijigame.com/2021-04-12-LANQIAO201910.html">J 灵能传输</a></h3><h2 id="2020年第十一届第一场"><a href="#2020年第十一届第一场" class="headerlink" title="2020年第十一届第一场"></a>2020年第十一届第一场</h2><h3 id="A-跑步训练-✨"><a href="#A-跑步训练-✨" class="headerlink" title="A 跑步训练 ✨"></a>A 跑步训练 ✨</h3><h3 id="B-纪念日-✨-相关例题"><a href="#B-纪念日-✨-相关例题" class="headerlink" title="B 纪念日 ✨  相关例题"></a>B 纪念日 ✨  <a href="https://blog.pzijigame.com/2021-03-12-LANQIAO201301.html">相关例题</a></h3><h3 id="C-合并检测"><a href="#C-合并检测" class="headerlink" title="C 合并检测"></a><a href="https://blog.pzijigame.com/2021-04-13-LANQIAO2020103.html">C 合并检测</a></h3><h3 id="D-REPEAT程序"><a href="#D-REPEAT程序" class="headerlink" title="D REPEAT程序"></a><a href="https://blog.pzijigame.com/2021-04-13-LANQIAO2020104.html">D REPEAT程序</a></h3><h3 id="E-矩阵"><a href="#E-矩阵" class="headerlink" title="E 矩阵"></a><a href="https://blog.pzijigame.com/2021-04-13-LANQIAO2020105.html">E 矩阵</a></h3><h3 id="F-整除序列-✨"><a href="#F-整除序列-✨" class="headerlink" title="F 整除序列 ✨"></a><a href="https://www.acwing.com/problem/content/2067/">F 整除序列</a> ✨</h3><h3 id="G-解码"><a href="#G-解码" class="headerlink" title="G 解码"></a><a href="https://blog.pzijigame.com/2021-04-13-LANQIAO2020107.html">G 解码</a></h3><h3 id="H-走方格"><a href="#H-走方格" class="headerlink" title="H 走方格"></a><a href="https://blog.pzijigame.com/2021-04-13-LANQIAO2020108.html">H 走方格</a></h3><h3 id="I-整数拼接"><a href="#I-整数拼接" class="headerlink" title="I 整数拼接"></a><a href="https://blog.pzijigame.com/2021-04-13-LANQIAO2020109.html">I 整数拼接</a></h3><h3 id="J-网络分析"><a href="#J-网络分析" class="headerlink" title="J 网络分析"></a><a href="https://blog.pzijigame.com/2021-04-13-LANQIAO2020110.html">J 网络分析</a></h3><h2 id="2020年第十一届第二场"><a href="#2020年第十一届第二场" class="headerlink" title="2020年第十一届第二场"></a>2020年第十一届第二场</h2><h3 id="A-门牌制作-✨"><a href="#A-门牌制作-✨" class="headerlink" title="A 门牌制作 ✨"></a><a href="https://www.lanqiao.cn/problems/592/learning/">A 门牌制作</a> ✨</h3><h3 id="B-既约分数"><a href="#B-既约分数" class="headerlink" title="B 既约分数"></a><a href="https://blog.pzijigame.com/2021-04-14-LANQIAO2020202.html">B 既约分数</a></h3><h3 id="C-蛇形填数"><a href="#C-蛇形填数" class="headerlink" title="C 蛇形填数"></a><a href="https://blog.pzijigame.com/2021-04-14-LANQIAO2020203.html">C 蛇形填数</a></h3><h3 id="D-跑步锻炼"><a href="#D-跑步锻炼" class="headerlink" title="D 跑步锻炼"></a><a href="https://blog.pzijigame.com/2021-04-14-LANQIAO2020204.html">D 跑步锻炼</a></h3><h3 id="E-七段码"><a href="#E-七段码" class="headerlink" title="E 七段码"></a><a href="https://blog.pzijigame.com/2021-04-14-LANQIAO2020205.html">E 七段码</a></h3><h3 id="F-成绩统计"><a href="#F-成绩统计" class="headerlink" title="F 成绩统计"></a><a href="https://blog.pzijigame.com/2021-04-14-LANQIAO2020206.html">F 成绩统计</a></h3><h3 id="G-回文日期"><a href="#G-回文日期" class="headerlink" title="G 回文日期"></a><a href="https://blog.pzijigame.com/2021-04-14-LANQIAO2020207.html">G 回文日期</a></h3><h3 id="H-字串分值和"><a href="#H-字串分值和" class="headerlink" title="H 字串分值和"></a><a href="https://blog.pzijigame.com/2021-04-14-LANQIAO2020208.html">H 字串分值和</a></h3><h3 id="I-平面切分"><a href="#I-平面切分" class="headerlink" title="I 平面切分"></a><a href="https://blog.pzijigame.com/2021-04-14-LANQIAO2020209.html">I 平面切分</a></h3><h3 id="J-字串排序【努力ing】"><a href="#J-字串排序【努力ing】" class="headerlink" title="J 字串排序【努力ing】"></a><a href="https://www.lanqiao.cn/problems/501/learning/">J 字串排序</a>【努力ing】</h3><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>1、以上均为博主备战2021年蓝桥杯所刷的题，所以目录上只有结果填空题和程序设计题，没有代码填空题（2019年第十届已取消）。</p>
<p>2、不是所有的题都有解析，有解析的题都是博主个人觉得有一定意义的。标记了 ✨ 的题无题解，但有题目链接。</p>
<p>3、代码及结果仅供参考，欢迎交流，共同进步！！！</p>
]]></content>
  </entry>
  <entry>
    <title>蓝桥杯 2020年第十一届省赛第二场 C/C++ B组 I 平面切分</title>
    <url>/2021-04-14-LANQIAO2020209.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>平面上有 N 条直线，其中第 i 条直线是 y=Ai⋅x+Bi。<br>请计算这些直线将平面分成了几个部分。<br>输入格式<br>第一行包含一个整数 N。<br>以下 N 行，每行包含两个整数 Ai, Bi。<br>输出格式<br>一个整数代表答案。<br>输入样例：<br>3<br>1 1<br>2 2<br>3 3<br>输出样例：<br>6<br>数据范围<br>对于 50% 的评测用例，1 ≤ N ≤ 4，−10 ≤ Ai, Bi ≤ 10。<br>对于所有评测用例，1 ≤ N ≤ 1000，−100000 ≤ Ai, Bi ≤ 100000。</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>在同一个平面内，如果添加的每一条直线互不相交，则每添加一条直线，就会增加一个平面；<br>当添加一条直线时，这条直线与当前平面内已有直线每产生一个不同的交点时，这条直线对平面总数量的贡献会额外增加一个，<br>即每条直线对平面总数量的贡献为 n + 1，其中 n 为该直线与当前平面内现存直线存在的不同交点的个数。<br>我们在每添加一条直线时设置一个空的 set，将该直线与当前平面内现存直线的交点的坐标存入 set 中，则最后 size() 即为不同交点的个数。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> lines[N][<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">int</span> vis[N]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">pair</span>&lt;<span class="keyword">long</span> <span class="keyword">double</span>,<span class="keyword">long</span> <span class="keyword">double</span>&gt; <span class="built_in">point</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;lines[i][<span class="number">0</span>]&gt;&gt;lines[i][<span class="number">1</span>];</span><br><span class="line">        <span class="built_in">set</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">long</span> <span class="keyword">double</span>,<span class="keyword">long</span> <span class="keyword">double</span>&gt;&gt; points;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(vis[j]) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(lines[i][<span class="number">0</span>]==lines[j][<span class="number">0</span>]) &#123;</span><br><span class="line">                <span class="keyword">if</span>(lines[i][<span class="number">1</span>]==lines[j][<span class="number">1</span>]) &#123; <span class="comment">//重合 </span></span><br><span class="line">                    vis[i]=<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">continue</span>; <span class="comment">//平行 </span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">point</span>.first=(lines[j][<span class="number">1</span>]-lines[i][<span class="number">1</span>])*<span class="number">1.0</span>/(lines[i][<span class="number">0</span>]-lines[j][<span class="number">0</span>]);</span><br><span class="line">            <span class="built_in">point</span>.second=lines[i][<span class="number">0</span>]*<span class="built_in">point</span>.first+lines[i][<span class="number">1</span>];</span><br><span class="line">            points.insert(<span class="built_in">point</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i]) &#123;</span><br><span class="line">            ans+=points.<span class="built_in">size</span>()+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans+<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>数学</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2020年第十一届省赛第二场 C/C++ B组 H 子串分值和</title>
    <url>/2021-04-14-LANQIAO2020208.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>对于一个字符串 S，我们定义 S 的分值 f(S) 为 S 中出现的不同的字符个数。<br>例如 f(“aba”) = 2，f(“abc”) = 3，f(“aaa”) = 1。<br>现在给定一个字符串 S [0::n−1]（长度为 n），请你计算对于所有 S 的非空子串 S[i::j] (0 ≤ i ≤ j &lt; n)，f(S[i::j]) 的和是多少。<br>输入格式<br>输入一行包含一个由小写字母组成的字符串 S。<br>输出格式<br>输出一个整数表示答案。<br>输入样例<br>ababc<br>输出样例<br>28<br>样例解释<br>子串 f值<br>a 1<br>ab 2<br>aba 2<br>abab 2<br>ababc 3<br>b 1<br>ba 2<br>bab 2<br>babc 3<br>a 1<br>ab 2<br>abc 3<br>b 1<br>bc 2<br>c 1<br>数据范围<br>对于 20% 的评测用例，1 ≤ n ≤ 10；<br>对于 40% 的评测用例，1 ≤ n ≤ 100；<br>对于 50% 的评测用例，1 ≤ n ≤ 1000；<br>对于 60% 的评测用例，1 ≤ n ≤ 10000；<br>对于所有评测用例，1 ≤ n ≤ 100000。</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>暴力：使用unordered_set（只去重不排序，效率比set高）保存子串，s.size() 即为子串分值，但只能通过50%的数据。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;unordered_set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;str;</span><br><span class="line">    <span class="keyword">int</span> n=str.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">unordered_set</span>&lt;<span class="keyword">char</span>&gt; s;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;n;j++) &#123;</span><br><span class="line">            s.insert(str[j]);</span><br><span class="line">            ans+=s.<span class="built_in">size</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>每个字母只有第一次出现时才有贡献度，因此可以统计每个字母在只出现一次的情况下，能被多少子串所包含。<br>用 last[S[i]] 记录字母 S[i] 上一次出现的位置。<br>那么往左最多能延伸到 last[S[i]] + 1，其到第 i 个字母一共有 i - last[S[i]] 个字母；<br>同理往右最多能延伸到 n，其到第 i 个字母一共有 n - i + 1 个字母，<br>二者相乘，就是该字母被不同子串所包含的总次数。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;str;</span><br><span class="line">    <span class="keyword">int</span> n=str.<span class="built_in">size</span>();</span><br><span class="line">    str=<span class="string">&#x27; &#x27;</span>+str;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> last[<span class="number">26</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        ans+=<span class="number">1L</span>L*(i-last[str[i]-<span class="string">&#x27;a&#x27;</span>])*(n-i+<span class="number">1</span>);</span><br><span class="line">        last[str[i]-<span class="string">&#x27;a&#x27;</span>]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>STL</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2020年第十一届省赛第二场 C/C++ B组 G 回文日期</title>
    <url>/2021-04-14-LANQIAO2020207.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>2020 年春节期间，有一个特殊的日期引起了大家的注意：2020 年 2 月 2 日。<br>因为如果将这个日期按 yyyymmdd 的格式写成一个 8 位数是 20200202，恰好是一个回文数。<br>我们称这样的日期是回文日期。<br>有人表示 20200202 是“千年一遇”的特殊日子。<br>对此小明很不认同，因为不到 2 年之后就是下一个回文日期：20211202 即 2021 年 12 月 2 日。<br>也有人表示 20200202 并不仅仅是一个回文日期，还是一个 ABABBABA 型的回文日期。<br>对此小明也不认同，因为大约 100 年后就能遇到下一个 ABABBABA 型的回文日期：21211212 即 2121 年 12 月 12 日。<br>算不上“千年一遇”，顶多算“千年两遇”。<br>给定一个 8 位数的日期，请你计算该日期之后下一个回文日期和下一个 ABABBABA 型的回文日期各是哪一天。<br>注意：下一个回文日期和下一个 ABABBABA 型的回文日期可能是同一天。<br>ABABBABA 型的回文日期，需要满足 A≠B。<br>输入格式<br>输入包含一个八位整数 N，表示日期。<br>输出格式<br>第一行表示下一个回文日期，<br>第二行表示下一个 ABABBABA 型的回文日期。<br>输入样例<br>20200202<br>输出样例<br>20211202<br>21211212<br>数据范围<br>对于所有评测用例，10000101 ≤ N ≤ 89991231，保证 N 是一个合法日期的 8 位数表示。</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>暴力往后寻找即可，注意数值转字符串的方法，使用 stringstream 对象。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> year,month,day;</span><br><span class="line">    year=n/<span class="number">10000</span>;</span><br><span class="line">    month=n%<span class="number">10000</span>/<span class="number">100</span>;</span><br><span class="line">    day=n%<span class="number">100</span>;</span><br><span class="line">    day++;</span><br><span class="line">    <span class="built_in">string</span> date,date1,date2,yearStr,monthStr,dayStr;</span><br><span class="line">    <span class="keyword">int</span> monthDay[<span class="number">13</span>]=&#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> f1=<span class="number">0</span>,f2=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(year%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;year%<span class="number">100</span>!=<span class="number">0</span> || year%<span class="number">400</span>==<span class="number">0</span>) &#123;</span><br><span class="line">            monthDay[<span class="number">2</span>]=<span class="number">29</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            monthDay[<span class="number">2</span>]=<span class="number">28</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">stringstream</span> yearSS;</span><br><span class="line">        yearSS&lt;&lt;year;</span><br><span class="line">        yearSS&gt;&gt;yearStr;</span><br><span class="line">        <span class="keyword">while</span>(month&lt;=<span class="number">12</span>) &#123;</span><br><span class="line">            <span class="built_in">stringstream</span> monthSS;</span><br><span class="line">            monthSS&lt;&lt;month;</span><br><span class="line">            monthSS&gt;&gt;monthStr;</span><br><span class="line">            <span class="keyword">if</span>(month&lt;<span class="number">10</span>) &#123;</span><br><span class="line">                monthStr=<span class="string">&quot;0&quot;</span>+monthStr;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(day&lt;=monthDay[month]) &#123;</span><br><span class="line">                <span class="built_in">stringstream</span> daySS;</span><br><span class="line">                daySS&lt;&lt;day;</span><br><span class="line">                daySS&gt;&gt;dayStr;</span><br><span class="line">                <span class="keyword">if</span>(day&lt;<span class="number">10</span>) &#123;</span><br><span class="line">                    dayStr=<span class="string">&quot;0&quot;</span>+dayStr;</span><br><span class="line">                &#125;</span><br><span class="line">                date=yearStr+monthStr+dayStr;</span><br><span class="line">                <span class="comment">//下一个回文日期</span></span><br><span class="line">                <span class="keyword">if</span>(!f1 &amp;&amp; date[<span class="number">0</span>]==date[<span class="number">7</span>] &amp;&amp; date[<span class="number">1</span>]==date[<span class="number">6</span>] &amp;&amp; date[<span class="number">2</span>]==date[<span class="number">5</span>] &amp;&amp; date[<span class="number">3</span>]==date[<span class="number">4</span>]) &#123;</span><br><span class="line">                    date1=date;</span><br><span class="line">                    f1=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//下一个 ABABBABA 型的回文日期</span></span><br><span class="line">                <span class="keyword">if</span>(date[<span class="number">0</span>]!=date[<span class="number">1</span>] &amp;&amp; date[<span class="number">2</span>]==date[<span class="number">0</span>] &amp;&amp; date[<span class="number">5</span>]==date[<span class="number">0</span>] &amp;&amp; date[<span class="number">7</span>]==date[<span class="number">0</span>] &amp;&amp; </span><br><span class="line">                   date[<span class="number">3</span>]==date[<span class="number">1</span>] &amp;&amp; date[<span class="number">4</span>]==date[<span class="number">1</span>] &amp;&amp; date[<span class="number">6</span>]==date[<span class="number">1</span>]) &#123;</span><br><span class="line">                    date2=date;</span><br><span class="line">                    f2=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(f1 &amp;&amp; f2) &#123;</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;date1&lt;&lt;<span class="built_in">endl</span>&lt;&lt;date2&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                day++;</span><br><span class="line">            &#125;</span><br><span class="line">            month++;</span><br><span class="line">            day=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        year++;</span><br><span class="line">        month=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>日期计算</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2020年第十一届省赛第二场 C/C++ B组 F 成绩统计</title>
    <url>/2021-04-14-LANQIAO2020206.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小蓝给学生们组织了一场考试，卷面总分为 100 分，每个学生的得分都是一个 0 到 100 的整数。<br>如果得分至少是 60 分，则称为及格。<br>如果得分至少为 85 分，则称为优秀。<br>请计算及格率和优秀率，用百分数表示，百分号前的部分四舍五入保留整数。<br>输入格式<br>输入的第一行包含一个整数 n，表示考试人数。<br>接下来 n 行，每行包含一个 0 至 100 的整数，表示一个学生的得分。<br>输出格式<br>输出两行，每行一个百分数，分别表示及格率和优秀率。<br>百分号前的部分四舍五入保留整数。<br>输入样例<br>7<br>80<br>92<br>56<br>74<br>88<br>100<br>0<br>输出样例<br>71%<br>43%<br>数据范围<br>对于 50% 的评测用例，1 ≤ n ≤ 100<br>对于所有评测用例，1 ≤ n ≤ 10000</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>四舍五入保留整数可以直接使用 round() 函数，也可以使用 int(n+0.5)，即加0.5后下取整。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> score,num1=<span class="number">0</span>,num2=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;score;</span><br><span class="line">        <span class="keyword">if</span>(score&gt;=<span class="number">60</span>) &#123;</span><br><span class="line">            num1++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(score&gt;=<span class="number">85</span>) &#123;</span><br><span class="line">            num2++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;round(num1*<span class="number">100.0</span>/n)&lt;&lt;<span class="string">&#x27;%&#x27;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;round(num2*<span class="number">100.0</span>/n)&lt;&lt;<span class="string">&#x27;%&#x27;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">//    cout&lt;&lt;int(num1*100.0/n+0.5)&lt;&lt;&#x27;%&#x27;&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//    cout&lt;&lt;int(num2*100.0/n+0.5)&lt;&lt;&#x27;%&#x27;&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>浮点数</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2020年第十一届省赛第二场 C/C++ B组 E 七段码</title>
    <url>/2021-04-14-LANQIAO2020205.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小蓝要用七段码数码管来表示一种特殊的文字。<br><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/2020205.png"><br>上图给出了七段码数码管的一个图示，数码管中一共有 7 段可以发光的二极管，分别标记为 a, b, c, d, e, f, g。<br>小蓝要选择一部分二极管（至少要有一个）发光来表达字符。在设计字符的表达时，要求所有发光的二极管是连成一片的。<br>例如：b 发光，其他二极管不发光可以用来表达一种字符。<br>例如：c 发光，其他二极管不发光可以用来表达一种字符。<br>这种方案与上一行的方案可以用来表示不同的字符，尽管看上去比较相似。<br>例如：a, b, c, d, e 发光，f, g 不发光可以用来表达一种字符。<br>例如：b, f 发光，其他二极管不发光则不能用来表达一种字符，因为发光的二极管没有连成一片。<br>请问，小蓝可以用七段码数码管表达多少种不同的字符？</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>使用深度优先搜索搜索出二极管所有的 128 种亮灭情况，再使用并查集判断所有发光的二极管是否连成一片。参考：<a href="https://blog.pzijigame.com/2021-04-13-LANQIAO2020110.html">并查集例题</a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> e[<span class="number">8</span>][<span class="number">8</span>]; <span class="comment">//i二极管与j二极管是否相连 </span></span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">8</span>];</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">8</span>];</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> p[x] == x ? p[x] : (p[x]=<span class="built_in">find</span>(p[x]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> px=<span class="built_in">find</span>(x);</span><br><span class="line">    <span class="keyword">int</span> py=<span class="built_in">find</span>(y);</span><br><span class="line">    <span class="keyword">if</span>(px!=py) &#123;</span><br><span class="line">        p[px]=py;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">8</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">8</span>;i++) &#123;</span><br><span class="line">            p[i]=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">8</span>;i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;<span class="number">8</span>;j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(e[i][j] &amp;&amp; vis[i] &amp;&amp; vis[j]) &#123; <span class="comment">//将相连的发光的二极管合并</span></span><br><span class="line">                    merge(i,j);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">8</span>;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(vis[i] &amp;&amp; p[i]==i) &#123; <span class="comment">//计算相连的发光的二极管的块数</span></span><br><span class="line">                cnt++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(cnt==<span class="number">1</span>) &#123; <span class="comment">//所有发光的二极管连成一片</span></span><br><span class="line">            ans++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    vis[n]=<span class="number">1</span>;</span><br><span class="line">    dfs(n+<span class="number">1</span>);</span><br><span class="line">    vis[n]=<span class="number">0</span>;</span><br><span class="line">    dfs(n+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[<span class="number">1</span>][<span class="number">2</span>]=e[<span class="number">1</span>][<span class="number">6</span>]=<span class="number">1</span>;</span><br><span class="line">    e[<span class="number">2</span>][<span class="number">1</span>]=e[<span class="number">2</span>][<span class="number">3</span>]=e[<span class="number">2</span>][<span class="number">7</span>]=<span class="number">1</span>;</span><br><span class="line">    e[<span class="number">3</span>][<span class="number">2</span>]=e[<span class="number">3</span>][<span class="number">4</span>]=e[<span class="number">3</span>][<span class="number">7</span>]=<span class="number">1</span>;</span><br><span class="line">    e[<span class="number">4</span>][<span class="number">3</span>]=e[<span class="number">4</span>][<span class="number">5</span>]=<span class="number">1</span>;</span><br><span class="line">    e[<span class="number">5</span>][<span class="number">4</span>]=e[<span class="number">5</span>][<span class="number">6</span>]=e[<span class="number">5</span>][<span class="number">7</span>]=<span class="number">1</span>;</span><br><span class="line">    e[<span class="number">6</span>][<span class="number">1</span>]=e[<span class="number">6</span>][<span class="number">5</span>]=e[<span class="number">6</span>][<span class="number">7</span>]=<span class="number">1</span>;</span><br><span class="line">    e[<span class="number">7</span>][<span class="number">2</span>]=e[<span class="number">7</span>][<span class="number">3</span>]=e[<span class="number">7</span>][<span class="number">5</span>]=e[<span class="number">7</span>][<span class="number">6</span>]=<span class="number">1</span>;</span><br><span class="line">    dfs(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>80</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>深度优先搜索</tag>
        <tag>并查集</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2020年第十一届省赛第二场 C/C++ B组 D 跑步锻炼</title>
    <url>/2021-04-14-LANQIAO2020204.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小蓝每天都锻炼身体。<br>正常情况下，小蓝每天跑 1 千米。<br>如果某天是周一或者月初（1日），为了激励自己，小蓝要跑 2 千米。<br>如果同时是周一或月初，小蓝也是跑 2 千米。<br>小蓝跑步已经坚持了很长时间，从 2000 年 1 月 1 日周六（含）到 2020 年 10 月 1 日周四（含）。<br>请问这段时间小蓝总共跑步多少千米？</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>模拟计算即可，注意一下闰年的判别方法。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> year=<span class="number">2000</span>,month=<span class="number">1</span>,day=<span class="number">1</span>,week=<span class="number">6</span>;</span><br><span class="line">    <span class="keyword">int</span> monthDay[<span class="number">13</span>]=&#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(year&lt;=<span class="number">2020</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(year%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;year%<span class="number">100</span>!=<span class="number">0</span> || year%<span class="number">400</span>==<span class="number">0</span>) &#123;</span><br><span class="line">            monthDay[<span class="number">2</span>]=<span class="number">29</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            monthDay[<span class="number">2</span>]=<span class="number">28</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(month&lt;=<span class="number">12</span>) &#123;</span><br><span class="line">            <span class="keyword">while</span>(day&lt;=monthDay[month]) &#123;</span><br><span class="line">                <span class="keyword">if</span>(day==<span class="number">1</span> || week==<span class="number">1</span>) &#123;</span><br><span class="line">                    ans+=<span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    ans+=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(year==<span class="number">2020</span> &amp;&amp; month==<span class="number">10</span> &amp;&amp; day==<span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                day++;</span><br><span class="line">                week=(week+<span class="number">1</span>)%<span class="number">7</span>; <span class="comment">//星期天时week=0，不影响结果 </span></span><br><span class="line">            &#125;</span><br><span class="line">            month++;</span><br><span class="line">            day=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        year++;</span><br><span class="line">        month=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>8879</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>日期计算</tag>
        <tag>模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2020年第十一届省赛第二场 C/C++ B组 C 蛇形填数</title>
    <url>/2021-04-14-LANQIAO2020203.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>如下所示，小明用从 1 开始的正整数“蛇形”填充无限大的矩阵。<br>1 2 6 7 15 …<br>3 5 8 14 …<br>4 9 13 …<br>10 12 …<br>11 …<br>容易看出矩阵第二行第二列中的数是 5，请你计算矩阵中第 20 行第 20 列的数是多少？</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>题目中提示矩阵第二行第二列中的数是 5，我们发现矩阵第三行第三列中的数是 13、矩阵第四行第四列中的数是 25 …，规律为矩阵第 i 行第 i 列的数为 1 + 1*4 + 2*4 + 3*4 + … + ( i - 1 )*4。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">20</span>;i++) &#123;</span><br><span class="line">        ans+=i*<span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>761</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>找规律</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2020年第十一届省赛第二场 C/C++ B组 B 既约分数</title>
    <url>/2021-04-14-LANQIAO2020202.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>如果一个分数的分子和分母的最大公约数是1，这个分数称为既约分数。<br>例如，3/4, 5/2, 1/8, 7/1 都是既约分数。<br>请问，有多少个既约分数，分子和分母都是 1 到 2020 之间的整数（包括1和2020）</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>熟悉一下怎么递归计算最大公约数。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a%b == <span class="number">0</span> ? b : gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2020</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">2020</span>;j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(gcd(i,j)==<span class="number">1</span>) &#123;</span><br><span class="line">                ans++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>2481215</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>最大公约数</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2020年第十一届省赛第一场 C/C++ B组 J 网络分析</title>
    <url>/2021-04-13-LANQIAO2020110.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小明正在做一个网络实验。<br>他设置了 n 台电脑，称为节点，用于收发和存储数据，初始时，所有节点都是独立的，不存在任何连接。<br>小明可以通过网线将两个节点连接起来，连接后两个节点就可以互相通信了，两个节点如果存在网线连接，称为相邻。<br>小明有时会测试当时的网络，他会在某个节点发送一条信息，信息会发送到每个相邻的节点，<br>之后这些节点又会转发到自己相邻的节点，直到所有直接或间接相邻的节点都收到了信息。<br>所有发送和接收的节点都会将信息存储下来，一条信息只存储一次。<br>给出小明连接和测试的过程，请计算出每个节点存储信息的大小。<br>输入格式<br>输入的第一行包含两个整数n,m，分别表示节点数量和操作数量，节点从 1 至 n 编号。<br>接下来 m 行，每行三个整数，表示一个操作。<br>如果操作为 1 a b，表示将节点 a 和节点 b 通过网线连接起来，当 a = b 时，表示连接了一个自环，对网络没有实质影响；<br>如果操作为 2 p t，表示在节点 p 上发送一条大小为 t 的信息。<br>输出格式<br>输出一行，包含 n 个整数，相邻整数之间用一个空格分割，依次表示进行完上述操作后节点 1 至节点 n 上存储信息的大小。<br>样例输入<br>4 8<br>1 1 2<br>2 1 10<br>2 3 5<br>1 4 1<br>2 2 2<br>1 1 2<br>1 2 4<br>2 2 1<br>样例输出<br>13 13 5 3<br>数据范围<br>对于 30% 的评测用例，1 ≤ n ≤ 20，1 ≤ m ≤ 100<br>对于 50% 的评测用例，1 ≤ n ≤ 100，1 ≤ m ≤ 1000<br>对于 70% 的评测用例，1 ≤ n ≤ 1000，1 ≤ m ≤ 10000<br>对于所有评测用例，1 ≤ n ≤ 10000，1 ≤ m ≤ 100000，1 ≤ t ≤ 100</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>使用一般的并查集，只能通过 70% 的数据。<a href="https://zhuanlan.zhihu.com/p/93647900">并查集</a><br>需要使用带权并查集。<a href="https://blog.csdn.net/yjr3426619/article/details/82315133">带权并查集</a></p>
<h3 id="并查集"><a href="#并查集" class="headerlink" title="并查集"></a>并查集</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">10001</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> p[N],ans[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> p[x] == x ? p[x] : (p[x]=<span class="built_in">find</span>(p[x])); <span class="comment">//路径压缩 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> px=<span class="built_in">find</span>(x);</span><br><span class="line">    <span class="keyword">int</span> py=<span class="built_in">find</span>(y);</span><br><span class="line">    <span class="keyword">if</span>(px!=py) &#123;</span><br><span class="line">        p[px]=py;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123; <span class="comment">//初始化 </span></span><br><span class="line">        p[i]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> op,a,b;</span><br><span class="line">    <span class="keyword">while</span>(m--) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;op&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="keyword">if</span>(op==<span class="number">1</span>) &#123;</span><br><span class="line">            merge(a,b);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">find</span>(i)==<span class="built_in">find</span>(a)) &#123;</span><br><span class="line">                    ans[i]+=b;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="带权并查集"><a href="#带权并查集" class="headerlink" title="带权并查集"></a>带权并查集</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">10001</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> p[N],value[N],d[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p[x]!=x) &#123;</span><br><span class="line">        <span class="keyword">int</span> t=p[x];</span><br><span class="line">        p[x]=<span class="built_in">find</span>(p[x]);</span><br><span class="line">        d[x]+=d[t];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> px=<span class="built_in">find</span>(x);</span><br><span class="line">    <span class="keyword">int</span> py=<span class="built_in">find</span>(y);</span><br><span class="line">    <span class="keyword">if</span>(px!=py) &#123;</span><br><span class="line">        d[px]+=value[px]-value[py];</span><br><span class="line">        p[px]=py;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        p[i]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> op,a,b;</span><br><span class="line">    <span class="keyword">while</span>(m--) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;op&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="keyword">if</span>(op==<span class="number">1</span>) &#123;</span><br><span class="line">            merge(a,b);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            value[<span class="built_in">find</span>(a)]+=b;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;value[<span class="built_in">find</span>(i)]+d[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>并查集</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2020年第十一届省赛第一场 C/C++ B组 I 整数拼接</title>
    <url>/2021-04-13-LANQIAO2020109.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个长度为 n 的数组 A1, A2 , ⋅⋅⋅ , An。<br>你可以从中选出两个数 Ai 和 Aj (i 不等于 j)，然后将 Ai 和 Aj 一前一后拼成一个新的整数。<br>例如 12 和 345 可以拼成 12345 或 34512。<br>注意交换 Ai 和 Aj 的顺序总是被视为 2 种拼法，即便是 Ai = Aj 时。<br>请你计算有多少种拼法满足拼出的整数是 K 的倍数。<br>输入格式<br>第一行包含 2 个整数 n 和 K。<br>第二行包含 n 个整数 A1, A2, ⋅⋅⋅ , An。<br>输出格式<br>一个整数代表答案。<br>输入样例：<br>4 2<br>1 2 3 4<br>输出样例：<br>6<br>数据范围<br>对于 30% 的评测用例，1 ≤ n ≤ 1000，1 ≤ K ≤ 20，1 ≤ Ai ≤ 10^4<br>对于所有评测用例，1 ≤ n ≤ 10^5，1 ≤ K ≤ 10^5，1 ≤ Ai ≤ 10^9</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>暴力只能通过27%的数据。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">digits</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n) &#123;</span><br><span class="line">        num++;</span><br><span class="line">        n/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,k,a[<span class="number">100000</span>],digit[<span class="number">100000</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">        digit[i]=digits(a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]%k==<span class="number">0</span> &amp;&amp; a[j]%k==<span class="number">0</span>) &#123;</span><br><span class="line">                ans+=<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">long</span> <span class="keyword">long</span> num1=a[i]*<span class="number">1L</span>L*<span class="built_in">pow</span>(<span class="number">10</span>,digit[j])+a[j];</span><br><span class="line">            <span class="keyword">long</span> <span class="keyword">long</span> num2=a[j]*<span class="number">1L</span>L*<span class="built_in">pow</span>(<span class="number">10</span>,digit[i])+a[i];</span><br><span class="line">            <span class="keyword">if</span>(num1%k==<span class="number">0</span>) &#123;</span><br><span class="line">                ans++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(num2%k==<span class="number">0</span>) &#123;</span><br><span class="line">                ans++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>考虑优化，首先最外层的循环肯定是去不掉的，因为我们一定要枚举所有整数。<br>考虑能否去掉内层的循环，也就是考虑如何求出与 A[i] 拼接起来为 K 的倍数的整数。<br>A[i] 与 A[j] 拼接的结果为$A[i] \times 10^{digit[A[i]]}+A[j]$，其中 digit[ A[i] ] 为 A[i] 的位数。<br>$A[i] \times 10^{digit[A[i]]}+A[j]$是 K 的倍数，那么$A[i] \times 10^{digit[A[i]]}%K+A[j]%K$也是 K 的倍数。<br>注意到$A[i] \times 10^{digit[A[i]]}%K$是小于 K 的，而 K 最大是 10^5。<br>所以我们可以用$cnt[i][j]$数组记录在之前遍历过的所有数中，乘以 10^i 后模 K 的结果为 j 的整数的个数。<br>对于所有 A[i] ，累加$cnt[digit[A[i]]][(k-A[i]%K)%K]$即可。<br>但这样只求出了 i &lt; j 时满足条件的 A[i]A[j] 的个数，从前往后跑一遍，再从后往前跑一遍即可。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="keyword">int</span> cnt[<span class="number">11</span>][N];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">digits</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n) &#123;</span><br><span class="line">        num++;</span><br><span class="line">        n/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        ans+=cnt[digits(a[i])][(k-a[i]%k)%k];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>,p=<span class="number">10</span>%k;j&lt;=<span class="number">10</span>;j++) &#123;</span><br><span class="line">            cnt[j][a[i]%k*<span class="number">1L</span>L*p%k]++;</span><br><span class="line">            p=p*<span class="number">10</span>%k;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    f(); <span class="comment">//AiAj,i&lt;j</span></span><br><span class="line">    reverse(a,a+n); <span class="comment">//反转数组</span></span><br><span class="line">    <span class="built_in">memset</span>(cnt,<span class="number">0</span>,<span class="keyword">sizeof</span>(cnt));</span><br><span class="line">    f(); <span class="comment">//AiAj,i&gt;j</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
  </entry>
  <entry>
    <title>蓝桥杯 2020年第十一届省赛第一场 C/C++ B组 H 走方格</title>
    <url>/2021-04-13-LANQIAO2020108.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>在平面上有一些二维的点阵。<br>这些点的编号就像二维数组的编号一样，从上到下依次为第 1 至第 n 行，从左到右依次为第 1 至第 m 列，每一个点可以用行号和列号来表示。<br>现在有个人站在第 1 行第 1 列，要走到第 n 行第 m 列。<br>只能向右或者向下走。<br>注意，如果行号和列数都是偶数，不能走入这一格中。<br>问有多少种方案。<br>输入格式<br>输入一行包含两个整数n,m。<br>输出格式<br>输出一个整数，表示答案。<br>输入样例1：<br>3 4<br>输出样例1：<br>2<br>输入样例2：<br>6 6<br>输出样例2：<br>0<br>数据范围<br>1 ≤ n, m ≤ 30</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><h3 id="深度优先搜索"><a href="#深度优先搜索" class="headerlink" title="深度优先搜索"></a>深度优先搜索</h3><p>只能通过90%的数据。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;n || y&gt;m) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x%<span class="number">2</span>==<span class="number">0</span> &amp;&amp; y%<span class="number">2</span>==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x==n &amp;&amp; y==m) &#123;</span><br><span class="line">        ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(x+<span class="number">1</span>,y);</span><br><span class="line">    dfs(x,y+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    dfs(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h3><p>设$dp[i][j]$为走到第 i 行第 j 列的方案数，则状态转移方程为：<br>$dp[i][j]=dp[i-1][j]+dp[i][j-1]$<br>即可以从左方走过来，也可以从上方走过来。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,dp[<span class="number">31</span>][<span class="number">31</span>]; <span class="comment">//dp[i][j]：走到第i行第j列的方案数</span></span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span> &amp;&amp; j%<span class="number">2</span>==<span class="number">0</span>) &#123;</span><br><span class="line">                dp[i][j]=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">1</span> &amp;&amp; j==<span class="number">1</span>) &#123;</span><br><span class="line">                dp[i][j]=<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(i==<span class="number">1</span>) &#123;</span><br><span class="line">                dp[i][j]=dp[i][j<span class="number">-1</span>];</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(j==<span class="number">1</span>) &#123;</span><br><span class="line">                dp[i][j]=dp[i<span class="number">-1</span>][j];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                dp[i][j]=dp[i<span class="number">-1</span>][j]+dp[i][j<span class="number">-1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;dp[n][m]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>动态规划</tag>
        <tag>深度优先搜索</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2020年第十一届省赛第一场 C/C++ B组 G 解码</title>
    <url>/2021-04-13-LANQIAO2020107.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小明有一串很长的英文字母，可能包含大写和小写。<br>在这串字母中，有很多连续的是重复的。<br>小明想了一个办法将这串字母表达得更短：将连续的几个相同字母写成字母 + 出现次数的形式。<br>例如，连续的 5 个 a，即 aaaaa，小明可以简写成 a5（也可能简写成 a4a、aa3a 等）。<br>对于这个例子：HHHellllloo，小明可以简写成 H3el5o2。<br>为了方便表达，小明不会将连续的超过 9 个相同的字符写成简写的形式。<br>现在给出简写后的字符串，请帮助小明还原成原来的串。<br>输入格式<br>输入一行包含一个字符串。<br>输出格式<br>输出一个字符串，表示还原后的串。<br>数据范围<br>输入字符串由大小写英文字母和数字组成，长度不超过 100。<br>请注意原来的串长度可能超过 100。<br>输入样例：<br>H3el5o2<br>输出样例：<br>HHHellllloo</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>先上代码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;str;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str.<span class="built_in">size</span>();i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(str[i+<span class="number">1</span>]&gt;=<span class="string">&#x27;2&#x27;</span> &amp;&amp; str[i+<span class="number">1</span>]&lt;=<span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;str[i+<span class="number">1</span>]-<span class="string">&#x27;0&#x27;</span>;j++) &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;str[i];</span><br><span class="line">            &#125;</span><br><span class="line">            i++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;str[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>细心的小伙伴一定会发现，当 i = str.size() - 1 时，判断 str[i + 1] 时 i + 1 不是越界了嘛？<br>其实不然，string对象以 ‘\0’ 结尾，即str[str.size()] = ‘\0’。<a href="https://blog.csdn.net/weixin_43939593/article/details/103632837">相关链接</a></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>字符串</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2020年第十一届省赛第一场 C/C++ B组 E 矩阵</title>
    <url>/2021-04-13-LANQIAO2020105.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>把 1 ∼ 2020 放在 2 × 1010 的矩阵里。<br>要求同一行中右边的比左边大，同一列中下边的比上边的大。一共有多少种方案？<br>答案很大，你只需要给出方案数除以 2020 的余数即可。</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>使用动态规划，按从小到大的顺序填数，设$dp[i][j]$为第一行有 i 个数，第二行有 j 个数的方案数，则状态转移方程为：<br>$dp[i][j]=dp[i-1][j]+dp[i][j-1]$<br>即第 i + j 个数可以放在第一行，也可以放在第二行。<br>由于是按从小到大的顺序填数，所以同一行中右边的一定比左边大；填数时只要保证 j &lt;= i ，同一列中下边的就会比上边的大。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">1011</span>][<span class="number">1011</span>]; <span class="comment">//dp[i][j]：第一行有i个数，第二行有j个数的方案数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">1010</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=i;j++) &#123; <span class="comment">//j&lt;=i保证同一列中下边的比上边的大（按从小到大的顺序填数）</span></span><br><span class="line">            <span class="keyword">if</span>(i&gt;=<span class="number">1</span> &amp;&amp; j&gt;=<span class="number">1</span>) &#123;</span><br><span class="line">                dp[i][j]=dp[i<span class="number">-1</span>][j]+dp[i][j<span class="number">-1</span>];</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(i&gt;=<span class="number">1</span>) &#123;</span><br><span class="line">                dp[i][j]=dp[i<span class="number">-1</span>][j];</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(j&gt;=<span class="number">1</span>) &#123;</span><br><span class="line">                dp[i][j]=dp[i][j<span class="number">-1</span>];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                dp[i][j]=<span class="number">1</span>; <span class="comment">//初始化</span></span><br><span class="line">            &#125;</span><br><span class="line">            dp[i][j]%=<span class="number">2020</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;dp[<span class="number">1010</span>][<span class="number">1010</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>1340</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>动态规划</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2020年第十一届省赛第一场 C/C++ B组 D REPEAT程序</title>
    <url>/2021-04-13-LANQIAO2020104.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>附件 <a href="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/prog.txt">prog.txt</a> 中是一个用某种语言写的程序。<br>其中 REPEAT k 表示一个次数为 k 的循环。循环控制的范围由缩进表达，从次行开始连续的缩进比该行多的（前面的空白更长的）为循环包含的内容。<br>例如如下片段：<br>REPEAT 2:<br>&emsp;A = A + 4<br>&emsp;REPEAT 5:<br>&emsp;&emsp;REPEAT 6:<br>&emsp;&emsp;&emsp;A = A + 5<br>&emsp;&emsp;A = A + 7<br>&emsp;A = A + 8<br>A = A + 9<br>该片段中从 A = A + 4 所在的行到 A = A + 8 所在的行都在第一行的循环两次中。<br>REPEAT 6: 所在的行到 A = A + 7 所在的行都在 REPEAT 5: 循环中。<br>A = A + 5 实际总共的循环次数是 2 × 5 × 6 = 60 次。<br>请问该程序执行完毕之后，A 的值是多少？</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><h3 id="Python程序"><a href="#Python程序" class="headerlink" title="Python程序"></a>Python程序</h3><p>prog.txt 中的程序与 Python 程序一样循环控制的范围由缩进表达，所以我们可以使用替换功能将 prog.txt 中的程序改为 Python 程序，然后运行输出结果。具体替换如下：<br>将 “REPEAT “ 替换为 “for _ in range(0, “；<br>将 “:” 替换为 “):”；<br>最后加上print(A)</p>
<h3 id="Stack"><a href="#Stack" class="headerlink" title="Stack"></a>Stack</h3><p>使用 stack 保存循环深度和循环次数，利用 stack 先进后出的性质，向内循环时进行 push 操作，循环结束时进行 pop 操作。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; s1,s2; <span class="comment">//s1保存循环深度，s2保存循环次数 </span></span><br><span class="line">    <span class="function">fstream <span class="title">prog</span><span class="params">(<span class="string">&quot;prog.txt&quot;</span>)</span></span>;</span><br><span class="line">    <span class="built_in">string</span> <span class="built_in">line</span>;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>,k=<span class="number">1</span>; <span class="comment">//k为当前总循环次数 </span></span><br><span class="line">    getline(prog,<span class="built_in">line</span>); <span class="comment">//舍弃第一行 </span></span><br><span class="line">    <span class="keyword">while</span>(getline(prog,<span class="built_in">line</span>)) &#123;</span><br><span class="line">        <span class="keyword">int</span> space,i; <span class="comment">//space为跳格数 </span></span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="built_in">line</span>.<span class="built_in">size</span>();i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">line</span>[i] != <span class="string">&#x27; &#x27;</span>) &#123;</span><br><span class="line">                space=i/<span class="number">4</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">line</span>[i]==<span class="string">&#x27;R&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> num=<span class="built_in">line</span>[i+<span class="number">7</span>]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="comment">//            if(s1.empty() || space&gt;s1.top()) &#123; //向内循环 </span></span><br><span class="line"><span class="comment">//                k*=num;</span></span><br><span class="line"><span class="comment">//                s1.push(space);</span></span><br><span class="line"><span class="comment">//                s2.push(num);</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//            else &#123; //循环结束 </span></span><br><span class="line">                <span class="keyword">while</span>(!s1.empty() &amp;&amp; space&lt;=s1.top()) &#123;</span><br><span class="line">                    k/=s2.top();</span><br><span class="line">                    s1.pop();</span><br><span class="line">                    s2.pop();</span><br><span class="line">                &#125;</span><br><span class="line">                k*=num;</span><br><span class="line">                s1.push(space);</span><br><span class="line">                s2.push(num);</span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> num=<span class="built_in">line</span>[i+<span class="number">8</span>]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="comment">//            if(space&gt;s1.top()) &#123; //向内循环 </span></span><br><span class="line"><span class="comment">//                ans+=num*k;</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//            else &#123; //循环结束 </span></span><br><span class="line">                <span class="keyword">while</span>(!s1.empty() &amp;&amp; space&lt;=s1.top()) &#123;</span><br><span class="line">                    k/=s2.top();</span><br><span class="line">                    s1.pop();</span><br><span class="line">                    s2.pop();</span><br><span class="line">                &#125;</span><br><span class="line">                ans+=num*k;</span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    prog.<span class="built_in">close</span>();</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>241830</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>STL</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2020年第十一届省赛第一场 C/C++ B组 C 合并检测</title>
    <url>/2021-04-13-LANQIAO2020103.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>新冠疫情由新冠病毒引起，最近在 A 国蔓延，为了尽快控制疫情，A 国准备给大量民众进行病毒核酸检测。然而，用于检测的试剂盒紧缺。<br>为了解决这一困难，科学家想了一个办法：合并检测。<br>即将从多个人（k个）采集的标本放到同一个试剂盒中进行检测。如果结果为阴性，则说明这 k 个人都是阴性，用一个试剂盒完成了 k 个人的检测。如果结果为阳性，则说明至少有一个人为阳性，需要将这 k 个人的样本全部重新独立检测（从理论上看，如果检测前 k−1 个人都是阴性可以推断出第 k 个人是阳性，但是在实际操作中不会利用此推断，而是将 k 个人独立检测），加上最开始的合并检测，一共使用了 k+1 个试剂盒完成了 k 个人的检测。<br>A 国估计被测的民众的感染率大概是 1%，呈均匀分布。请问 k 取多少能最节省试剂盒？</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>题目给出感染率为 1%，我们不妨假设民众数为 100，则有 1 个人为阴性，即 k+1 个试剂盒完成 k 个人的检测的情况会出现一次，再假设 1 个试剂盒完成 k 个人的检测的情况会出现 n 次，则问题转化为：<br>$min \quad n+k+1$<br>$s.t. \quad (n+1)k \geq 100$<br>$n+k+1 \geq n+1+\frac{100}{n+1}$<br>n + 1 = 10 时取最小值，即 k = 10 时取最小值。</p>
<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>10</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>数学</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2019年第十届省赛 C/C++ B组 J 灵能传输</title>
    <url>/2021-04-12-LANQIAO201910.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>【题目背景】<br>在游戏《星际争霸 II》中，高阶圣堂武士作为星灵的重要 AOE 单位，在游戏的中后期发挥着重要的作用，其技能”灵能风暴“可以消耗大量的灵能对一片区域内的敌军造成毁灭性的伤害。经常用于对抗人类的生化部队和虫族的刺蛇飞龙等低血量单位。<br>【问题描述】<br>你控制着 n 名高阶圣堂武士，方便起见标为 1, 2, · · · , n。每名高阶圣堂武士需要一定的灵能来战斗，每个人有一个灵能值 ai 表示其拥有的灵能的多少（ai 非负表示这名高阶圣堂武士比在最佳状态下多余了 ai 点灵能，ai 为负则表示这名高阶圣堂武士还需要 −ai 点灵能才能到达最佳战斗状态）。现在系统赋予了你的高阶圣堂武士一个能力，传递灵能，每次你可以选择一个 i ∈ [2, n − 1]，若 ai ≥ 0 则其两旁的高阶圣堂武士，也就是 i − 1、i + 1 这两名高阶圣堂武士会从 i 这名高阶圣堂武士这里各抽取 ai 点灵能；若 ai &lt; 0 则其两旁的高阶圣堂武士，也就是 i − 1、i + 1 这两名高阶圣堂武士会给 i 这名高阶圣堂武士 −ai 点灵能，形式化来讲就是 ai−1 += ai, ai+1 += ai, ai −= 2ai。<br>灵能是非常高效的作战工具，同时也非常危险且不稳定，一位高阶圣堂武士拥有的灵能过多或者过少都不好，定义一组高阶圣堂武士的不稳定度为 max| ai |，请你通过不限次数的传递灵能操作使得你控制的这一组高阶圣堂武士的不稳定度最小。<br>【输入格式】<br>本题包含多组询问。输入的第一行包含一个正整数 T 表示询问组数。接下来依次输入每一组询问。<br>每组询问的第一行包含一个正整数 n，表示高阶圣堂武士的数量。<br>接下来一行包含 n 个数 a1, a2, · · · , an。<br>【输出格式】<br>输出 T 行。每行一个整数依次表示每组询问的答案。<br>【样例输入】<br>3<br>3<br>5 -2 3<br>4<br>0 0 0 0<br>3<br>1 2 3<br>【样例输出】<br>3<br>0<br>3<br>【样例说明】<br>对于第一组询问：<br>对 2 号高阶圣堂武士进行传输操作后 a1 = 3，a2 = 2，a3 = 1。答案为 3。<br>对于第二组询问：<br>这一组高阶圣堂武士拥有的灵能都正好可以让他们达到最佳战斗状态。<br>【样例输入】<br>3<br>4<br>-1 -2 -3 7<br>4<br>2 3 4 -8<br>5<br>-1 -1 6 -1 -1<br>【样例输出】<br>5<br>7<br>4<br>【数据规模与约定】<br>对于所有评测用例，T ≤ 3，3 ≤ n ≤ 300000，| ai | ≤ 10^9。<br>评测时将使用 25 个评测用例测试你的程序，每个评测用例的限制如下：</p>
<table>
<thead>
<tr>
<th align="center">评测用例编号</th>
<th align="center">n</th>
<th align="center">| ai |</th>
<th align="center">特殊性质</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="center">=3</td>
<td align="center">&lt;=1000</td>
<td align="center">无</td>
</tr>
<tr>
<td align="center">2,3</td>
<td align="center">&lt;=5</td>
<td align="center">&lt;=1000</td>
<td align="center">无</td>
</tr>
<tr>
<td align="center">4,5,6,7</td>
<td align="center">&lt;=10</td>
<td align="center">&lt;=1000</td>
<td align="center">无</td>
</tr>
<tr>
<td align="center">8,9,10</td>
<td align="center">&lt;=20</td>
<td align="center">&lt;=1000</td>
<td align="center">无</td>
</tr>
<tr>
<td align="center">11</td>
<td align="center">&lt;=100</td>
<td align="center">&lt;=10^9</td>
<td align="center">所有 ai 非负</td>
</tr>
<tr>
<td align="center">12,13,14</td>
<td align="center">&lt;=100</td>
<td align="center">&lt;=10^9</td>
<td align="center">无</td>
</tr>
<tr>
<td align="center">15,16</td>
<td align="center">&lt;=500</td>
<td align="center">&lt;=10^9</td>
<td align="center">无</td>
</tr>
<tr>
<td align="center">17,18,19</td>
<td align="center">&lt;=5000</td>
<td align="center">&lt;=10^9</td>
<td align="center">无</td>
</tr>
<tr>
<td align="center">20</td>
<td align="center">&lt;=5000</td>
<td align="center">&lt;=10^9</td>
<td align="center">所有 ai 非负</td>
</tr>
<tr>
<td align="center">21</td>
<td align="center">&lt;=100000</td>
<td align="center">&lt;=10^9</td>
<td align="center">所有 ai 非负</td>
</tr>
<tr>
<td align="center">22,23</td>
<td align="center">&lt;=100000</td>
<td align="center">&lt;=10^9</td>
<td align="center">无</td>
</tr>
<tr>
<td align="center">24,25</td>
<td align="center">&lt;=300000</td>
<td align="center">&lt;=10^9</td>
<td align="center">无</td>
</tr>
</tbody></table>
<p>注意：本题输入量较大请使用快速的读入方式。</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>题目要求通过若干次灵能传递使max{|a[i]|}最小。<br>转化为前缀和形式，记为 s[1] ~ s[n]，此时的 a[1] ~ a[n] 变为 s[1], s[2] - s[1], s[3] - s[2], … , s[n] - s[n - 1]，补上 s[0] = 0，使得a[1] = s[1] - s[0]<br>现若 i 号高阶圣堂武士传递灵能，s[i] -= 2a[i], s[i - 1] += a[i], s[i + 1] += a[i]，即s[i - 1] -&gt; s[i], s[i] -&gt; s[i - 1], s[i + 1] -&gt; s[i + 1]，交换了 s[i - 1] 和 s[i]<br>如此，前缀和形式的传递灵能的操作是不是简单多了！<br>题目要求转化为任意交换 s[1] ~ s[n - 1]，使 s[1] - s[0], s[2] - s[1], s[3] - s[2], … , s[n] - s[n - 1] 的绝对值的最大值最小。<br>如果能任意交换 s[0] ~ s[n]，显然排序后差的绝对值的最大值最小，但题目固定了 s[0] 和 s[n] 两点，即固定了起点和终点。<br><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/201910.png"><br>排序后起点和终点一般情况下就不再是在两端，而是在中间，<br>我们设 min{ s[0], s[n] } 为起点，max{ s[0], s[n] } 为终点，保证排序后起点在终点左方，<br>取数以起点开始到最小值，再到最大值，最后到达终点。<br>两段重叠区也必须保证向左时和向右时差的绝对值的最大值最小，通过隔一个数取一个数解决。<br>取数完成后遍历一遍找到差的绝对值的最大值输出。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">300001</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> s[N],a[N];</span><br><span class="line"><span class="keyword">int</span> vis[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        s[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;s[i]);</span><br><span class="line">            s[i]+=s[i<span class="number">-1</span>]; <span class="comment">//计算前缀和 </span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> s0=s[<span class="number">0</span>],sn=s[n];</span><br><span class="line">        <span class="keyword">if</span>(s0&gt;sn) &#123;</span><br><span class="line">            swap(s0,sn);</span><br><span class="line">        &#125;</span><br><span class="line">        sort(s,s+n+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++) &#123; <span class="comment">//寻找最小值下标 </span></span><br><span class="line">            <span class="keyword">if</span>(s[i]==s0) &#123;</span><br><span class="line">                s0=i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">0</span>;i--) &#123; <span class="comment">//寻找最大值下标 </span></span><br><span class="line">            <span class="keyword">if</span>(s[i]==sn) &#123;</span><br><span class="line">                sn=i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> p=<span class="number">0</span>,q=n;</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">        <span class="comment">// 取数 </span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=s0;i&gt;=<span class="number">0</span>;i-=<span class="number">2</span>) &#123;</span><br><span class="line">            a[p++]=s[i];</span><br><span class="line">            vis[i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=sn;i&lt;=n;i+=<span class="number">2</span>) &#123;</span><br><span class="line">            a[q--]=s[i];</span><br><span class="line">            vis[i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!vis[i]) &#123;</span><br><span class="line">                a[p++]=s[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">            res=<span class="built_in">max</span>(res,<span class="built_in">abs</span>(a[i]-a[i<span class="number">-1</span>]));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,res);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>前缀和</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2019年第十届省赛 C/C++ B组 I 后缀表达式</title>
    <url>/2021-04-12-LANQIAO201909.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定 N 个加号、M 个减号以及 N + M + 1 个整数 A1, A2, · · · , AN+M+1 ，小明想知道在所有由这 N 个加号、M 个减号以及 N + M + 1 个整数凑出的合法的后缀表达式中，结果最大的是哪一个？<br>请你输出这个最大的结果。<br>例如使用1 2 3 + -，则 “2 3 + 1 -” 这个后缀表达式结果是 4，是最大的。<br>【输入格式】<br>第一行包含两个整数 N 和 M。<br>第二行包含 N + M + 1 个整数 A1, A2, · · · , AN+M+1。<br>【输出格式】<br>输出一个整数，代表答案。<br>【样例输入】<br>1 1<br>1 2 3<br>【样例输出】<br>4<br>【评测用例规模与约定】<br>对于所有评测用例，0 ≤ N, M ≤ 100000，−10^9 ≤ Ai ≤ 10^9。</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>分为以下几种情况：<br>1、如果全是加号，那么直接将所有的数字相加。<br>2、如果有减号：<br>如果有一个减号，我们可以转化为 …+…-(…+…+…) 的形式，因此有一个减号的情况可以视为有一个或多个减号的情况。<br>如果有多个减号，我们可以转化为 …+…-…-(…+…-…) 的形式，将减号放到括号里面即可变成加号，因此有多个减号的情况可以视为有一个或多个减号的情况。<br>即有减号即可视为有一个或多个减号。<br>如果全是正数，视为只有一个减号，把最小的那个数减去。<br>如果有正有负，所有正数匹配正号，所有负数匹配负号，即：将它们的绝对值相加。<br>如果全是负数，除最大的负数之外全部匹配负号。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,minNum=<span class="number">1e9</span>,maxNum=<span class="number">-1e9</span>,a[<span class="number">200001</span>];</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n+m+<span class="number">1</span>;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">        sum+=a[i];</span><br><span class="line">        minNum=<span class="built_in">min</span>(minNum,a[i]);</span><br><span class="line">        maxNum=<span class="built_in">max</span>(maxNum,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(m != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(minNum &gt; <span class="number">0</span>) &#123; <span class="comment">//全是正数 </span></span><br><span class="line">            sum-=<span class="number">2</span>*minNum;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            sum=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n+m+<span class="number">1</span>;i++) &#123; <span class="comment">//有正有负 </span></span><br><span class="line">                sum+=<span class="built_in">abs</span>(a[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(maxNum &lt; <span class="number">0</span>) &#123; <span class="comment">//全是负数 </span></span><br><span class="line">                sum+=maxNum*<span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>找规律</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2019年第十届省赛 C/C++ B组 H 等差数列</title>
    <url>/2021-04-12-LANQIAO201908.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>数学老师给小明出了一道等差数列求和的题目。但是粗心的小明忘记了一部分的数列，只记得其中 N 个整数。<br>现在给出这 N 个整数，小明想知道包含这 N 个整数的最短的等差数列有几项？<br>【输入格式】<br>输入的第一行包含一个整数 N。<br>第二行包含 N 个整数 A1, A2, · · · , AN。(注意 A1 ∼ AN 并不一定是按等差数列中的顺序给出)<br>【输出格式】<br>输出一个整数表示答案。<br>【样例输入】<br>5<br>2 6 4 10 20<br>【样例输出】<br>10<br>【样例说明】<br>包含 2、6、4、10、20 的最短的等差数列是 2、4、6、8、10、12、14、16、18、20。<br>【评测用例规模与约定】<br>对于所有评测用例，2 ≤ N ≤ 100000，0 ≤ Ai ≤ 10^9。</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>从小到大排序后计算相邻两项的差值，最小差值即为公差。<br>注意公差为 0 应单独讨论。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,a[<span class="number">100000</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a,a+n);</span><br><span class="line">    <span class="keyword">int</span> minDiff=a[<span class="number">1</span>]-a[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> diff=a[i]-a[i<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">if</span>(diff&lt;minDiff) &#123;</span><br><span class="line">            minDiff=diff;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(minDiff==<span class="number">0</span>) &#123; <span class="comment">//d=0 </span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;n&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;(a[n<span class="number">-1</span>]-a[<span class="number">0</span>])/minDiff+<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
  </entry>
  <entry>
    <title>蓝桥杯 2019年第十届省赛 C/C++ B组 G 完全二叉树的权值</title>
    <url>/2021-04-12-LANQIAO201907.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一棵包含 N 个节点的完全二叉树，树上每个节点都有一个权值，按从上到下、从左到右的顺序依次是 A1, A2, · · · AN，如下图所示：<br><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/201907.png"><br>现在小明要把相同深度的节点的权值加在一起，他想知道哪个深度的节点权值之和最大？如果有多个深度的权值和同为最大，请你输出其中最小的深度。<br>注：根的深度是 1。<br>【输入格式】<br>第一行包含一个整数 N。<br>第二行包含 N 个整数 A1, A2, · · · AN。<br>【输出格式】<br>输出一个整数代表答案。<br>【样例输入】<br>7<br>1 6 5 4 3 2 1<br>【样例输出】<br>2<br>【评测用例规模与约定】<br>对于所有评测用例，1 ≤ N ≤ 100000，−100000 ≤ Ai ≤ 100000。</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>完全二叉树深度 = h 的节点个数为 2<sup>h-1</sup>，根的深度是 1。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,a[<span class="number">100000</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; res;</span><br><span class="line">    <span class="keyword">int</span> p=<span class="number">0</span>,q=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p&lt;n) &#123;</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">pow</span>(<span class="number">2</span>,q)&amp;&amp;p&lt;n;i++) &#123;</span><br><span class="line">            sum+=a[p++];</span><br><span class="line">        &#125;</span><br><span class="line">        res.push_back(sum);</span><br><span class="line">        q++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> maxIndex=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;res.<span class="built_in">size</span>();i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(res[i]&gt;res[maxIndex]) &#123;</span><br><span class="line">            maxIndex=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;maxIndex+<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>树</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2019年第十届省赛 C/C++ B组 E 迷宫</title>
    <url>/2021-04-12-LANQIAO201905.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>下图给出了一个迷宫的平面图，其中标记为 1 的为障碍，标记为 0 的为可以通行的地方。<br>010000<br>000100<br>001001<br>110000<br>迷宫的入口为左上角，出口为右下角，在迷宫中，只能从一个位置走到它的上、下、左、右四个方向之一。<br>对于上面的迷宫，从入口开始，可以按 DRRURRDDDR 的顺序通过迷宫，一共 10 步。其中 D、 U、 L、 R 分别表示向下、向上、向左、向右走。<br>对于下面这个更复杂的迷宫（30 行 50 列），请找出一种通过迷宫的方式，其使用的步数最少，在步数最少的前提下，请找出字典序最小的一个作为答案。请注意在字典序中 D &lt; L &lt; R &lt; U。<br>01010101001011001001010110010110100100001000101010<br>00001000100000101010010000100000001001100110100101<br>01111011010010001000001101001011100011000000010000<br>01000000001010100011010000101000001010101011001011<br>00011111000000101000010010100010100000101100000000<br>11001000110101000010101100011010011010101011110111<br>00011011010101001001001010000001000101001110000000<br>10100000101000100110101010111110011000010000111010<br>00111000001010100001100010000001000101001100001001<br>11000110100001110010001001010101010101010001101000<br>00010000100100000101001010101110100010101010000101<br>11100100101001001000010000010101010100100100010100<br>00000010000000101011001111010001100000101010100011<br>10101010011100001000011000010110011110110100001000<br>10101010100001101010100101000010100000111011101001<br>10000000101100010000101100101101001011100000000100<br>10101001000000010100100001000100000100011110101001<br>00101001010101101001010100011010101101110000110101<br>11001010000100001100000010100101000001000111000010<br>00001000110000110101101000000100101001001000011101<br>10100101000101000000001110110010110101101010100001<br>00101000010000110101010000100010001001000100010101<br>10100001000110010001000010101001010101011111010010<br>00000100101000000110010100101001000001000000000010<br>11010000001001110111001001000011101001011011101000<br>00000110100010001000100000001000011101000000110011<br>10101000101000100010001111100010101001010000001000<br>10000010100101001010110000000100101010001011101000<br>00111100001000010000000110111000000001000000001011<br>10000001100111010111010001000110111010101101111000</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>题目要求路径最短，所以使用广度优先搜索，怎么保证字典序最小呢？按 D &lt; L &lt; R &lt; U 的顺序进行搜索即可。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Nx=<span class="number">30</span>,Ny=<span class="number">50</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Point</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">    <span class="built_in">string</span> path;</span><br><span class="line">    Point(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="built_in">string</span> str) &#123;</span><br><span class="line">        x=a;</span><br><span class="line">        y=b;</span><br><span class="line">        path=str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="built_in">point</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> m[<span class="number">30</span>][<span class="number">50</span>];</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">30</span>][<span class="number">50</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dis[<span class="number">4</span>][<span class="number">2</span>]=&#123;&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">1</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">char</span> dis_ch[<span class="number">4</span>]=&#123;<span class="string">&#x27;D&#x27;</span>,<span class="string">&#x27;L&#x27;</span>,<span class="string">&#x27;R&#x27;</span>,<span class="string">&#x27;U&#x27;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="built_in">point</span>&gt; q;</span><br><span class="line">    <span class="function"><span class="built_in">point</span> <span class="title">p</span><span class="params">(<span class="number">0</span>,<span class="number">0</span>,<span class="string">&quot;&quot;</span>)</span></span>;</span><br><span class="line">    q.push(p);</span><br><span class="line">    vis[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        <span class="built_in">point</span> t=q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">if</span>(t.x==Nx<span class="number">-1</span> &amp;&amp; t.y==Ny<span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;t.path&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> tx=t.x+dis[i][<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> ty=t.y+dis[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(tx&gt;=<span class="number">0</span> &amp;&amp; ty&gt;=<span class="number">0</span> &amp;&amp; tx&lt;Nx &amp;&amp; ty&lt;Ny) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!m[tx][ty] &amp;&amp; !vis[tx][ty]) &#123;</span><br><span class="line">                    <span class="function"><span class="built_in">point</span> <span class="title">t2</span><span class="params">(tx,ty,t.path+dis_ch[i])</span></span>;</span><br><span class="line">                    q.push(t2);</span><br><span class="line">                    vis[tx][ty]=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;Nx;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;Ny;j++) &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;ch;</span><br><span class="line">            m[i][j]=ch-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    bfs();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>DDDDRRURRRRRRDRRRRDDDLDDRDDDDDDDDDDDDRDDRRRURRUURRDDDDRDRRRRRRDRRURRDDDRRRRUURUUUUUUULULLUUUURRRRUULLLUUUULLUUULUURRURRURURRRDDRRRRRDDRRDDLLLDDRRDDRDDLDDDLLDDLLLDLDDDLDDRRRRRRRRRDDDDDDRR</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>STL</tag>
        <tag>广度优先搜索</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2019年第十届省赛 C/C++ B组 D 数的分解</title>
    <url>/2021-04-12-LANQIAO201904.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>把 2019 分解成 3 个各不相同的正整数之和，并且要求每个正整数都不包含数字 2 和 4，一共有多少种不同的分解方法？<br>注意交换 3 个整数的顺序被视为同一种方法，例如 1000 + 1001 + 18 和 1001 + 1000 + 18 被视为同一种。</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>三层循环即可，保证 3 个整数 i &lt; j &lt; k 即可保证不重复。<br>优化：可将三层循环变成二层循环，k = 2019 - i - j，第二层循环时使用 j &lt; 2019 - i - j 保证 j &lt; k。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(n) &#123;</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">10</span>==<span class="number">2</span> || n%<span class="number">10</span>==<span class="number">4</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        n/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2019</span><span class="number">-2</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(f(i)) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;<span class="number">2019</span>-i-j;j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(f(j) &amp;&amp; f(<span class="number">2019</span>-i-j)) &#123;</span><br><span class="line">                    res++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>40785</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
  </entry>
  <entry>
    <title>蓝桥杯 2019年第十届省赛 C/C++ B组 C 数列求值</title>
    <url>/2021-04-12-LANQIAO201903.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定数列 1, 1, 1, 3, 5, 9, 17, …，从第 4 项开始，每项都是前 3 项的和。求第 20190324 项的最后 4 位数字。</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>类似斐波那契数列，用数组保存三项值，通过对 3 取余依次计算下一项并进行替换。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">3</span>]=&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> index=<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">while</span>(index &lt; <span class="number">20190324</span>) &#123;</span><br><span class="line">        a[index%<span class="number">3</span>]=(a[<span class="number">0</span>]+a[<span class="number">1</span>]+a[<span class="number">2</span>])%<span class="number">10000</span>;</span><br><span class="line">        index++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;a[(index<span class="number">-1</span>)%<span class="number">3</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>觉得自己矩阵快速幂还没有完全掌握，所以又用矩阵快速幂做了一遍。参考：<a href="https://blog.pzijigame.com/2021-03-23-LANQIAO201509.html">矩阵快速幂例题</a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD=<span class="number">10000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">3</span>],<span class="keyword">int</span> b[<span class="number">3</span>][<span class="number">3</span>])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t[<span class="number">3</span>][<span class="number">3</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">3</span>;j++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">3</span>;k++) &#123;</span><br><span class="line">                t[i][j]=(t[i][j]+a[i][k]*b[k][j]%MOD)%MOD;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memcpy</span>(a,t,<span class="keyword">sizeof</span>(t));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t[<span class="number">3</span>][<span class="number">3</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;&#125;,res[<span class="number">3</span>][<span class="number">3</span>]=&#123;&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;&#125;;</span><br><span class="line">    <span class="keyword">int</span> n=<span class="number">20190324</span><span class="number">-3</span>;</span><br><span class="line">    <span class="keyword">while</span>(n) &#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>) &#123;</span><br><span class="line">            mul(res,t);</span><br><span class="line">        &#125;</span><br><span class="line">        mul(t,t);</span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;(res[<span class="number">2</span>][<span class="number">0</span>]+res[<span class="number">2</span>][<span class="number">1</span>]+res[<span class="number">2</span>][<span class="number">2</span>])%MOD&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>4659</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>矩阵快速幂</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2019年第十届省赛 C/C++ B组 B 年号字串</title>
    <url>/2021-04-11-LANQIAO201902.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小明用字母 A 对应数字 1，B 对应 2，以此类推，用 Z 对应 26。对于 27 以上的数字，小明用两位或更长位的字符串来对应，例如 AA 对应 27，AB 对应 28，AZ 对应 52，LQ 对应 329。<br>请问 2019 对应的字符串是什么？</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>这道题其实笔算更快，但因为进制转换比较常用，所以还是码了代码，使用栈 stack 先进后出的性质即可较容易的实现进制转换。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">char</span>&gt; s;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n) &#123;</span><br><span class="line">        s.push(<span class="string">&#x27;A&#x27;</span>+n%<span class="number">26</span><span class="number">-1</span>);</span><br><span class="line">        n/=<span class="number">26</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(!s.empty()) &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;s.top();</span><br><span class="line">        s.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h3><p><strong>BYQ</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>STL</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2019年第十届省赛 C/C++ B组 A 组队</title>
    <url>/2021-04-11-LANQIAO201901.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>作为篮球队教练，你需要从以下名单中选出 1 号位至 5 号位各一名球员，组成球队的首发阵容。<br>每位球员担任 1 号位至 5 号位时的评分如下表所示。<br>请你计算首发阵容 1 号位至 5 号位的评分之和最大可能是多少？</p>
<table>
<thead>
<tr>
<th align="center">编号</th>
<th align="center">1号位</th>
<th align="center">2号位</th>
<th align="center">3号位</th>
<th align="center">4号位</th>
<th align="center">5号位</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="center">97</td>
<td align="center">90</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">92</td>
<td align="center">85</td>
<td align="center">96</td>
<td align="center">0</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">93</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">80</td>
<td align="center">86</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">89</td>
<td align="center">83</td>
<td align="center">97</td>
<td align="center">0</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">6</td>
<td align="center">82</td>
<td align="center">86</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">7</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">87</td>
<td align="center">90</td>
</tr>
<tr>
<td align="center">8</td>
<td align="center">0</td>
<td align="center">97</td>
<td align="center">96</td>
<td align="center">0</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">9</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">89</td>
<td align="center">0</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">95</td>
<td align="center">99</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">11</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">96</td>
<td align="center">97</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">12</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">93</td>
<td align="center">98</td>
</tr>
<tr>
<td align="center">13</td>
<td align="center">94</td>
<td align="center">91</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">14</td>
<td align="center">0</td>
<td align="center">83</td>
<td align="center">87</td>
<td align="center">0</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">15</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">98</td>
<td align="center">97</td>
<td align="center">98</td>
</tr>
<tr>
<td align="center">16</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">93</td>
<td align="center">86</td>
</tr>
<tr>
<td align="center">17</td>
<td align="center">98</td>
<td align="center">83</td>
<td align="center">99</td>
<td align="center">98</td>
<td align="center">81</td>
</tr>
<tr>
<td align="center">18</td>
<td align="center">93</td>
<td align="center">87</td>
<td align="center">92</td>
<td align="center">96</td>
<td align="center">98</td>
</tr>
<tr>
<td align="center">19</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">89</td>
<td align="center">92</td>
</tr>
<tr>
<td align="center">20</td>
<td align="center">0</td>
<td align="center">99</td>
<td align="center">96</td>
<td align="center">95</td>
<td align="center">81</td>
</tr>
</tbody></table>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>直接笔算，填空题有时候笔算更快！！！</p>
<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>490</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
  </entry>
  <entry>
    <title>蓝桥杯 2018年第九届省赛 C/C++ B组 09 全球变暖</title>
    <url>/2021-04-11-LANQIAO201809.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>你有一张某海域 N x N 像素的照片，”.” 表示海洋、”#” 表示陆地，如下所示：<br>…….<br>.##….<br>.##….<br>….##.<br>..####.<br>…###.<br>…….<br>其中”上下左右”四个方向上连在一起的一片陆地组成一座岛屿。例如上图就有 2 座岛屿。<br>由于全球变暖导致了海面上升，科学家预测未来几十年，岛屿边缘一个像素的范围会被海水淹没。具体来说如果一块陆地像素与海洋相邻(上下左右四个相邻像素中有海洋)，它就会被淹没。<br>例如上图中的海域未来会变成如下样子：<br>…….<br>…….<br>…….<br>…….<br>….#..<br>…….<br>…….<br>请你计算：依照科学家的预测，照片中有多少岛屿会被完全淹没。<br>【输入格式】<br>第一行包含一个整数N。(1 &lt;= N &lt;= 1000)<br>以下 N 行 N 列代表一张海域照片。<br>照片保证第 1 行、第 1 列、第 N 行、第 N 列的像素都是海洋。<br>【输出格式】<br>一个整数表示答案。<br>【输入样例】<br>7<br>…….<br>.##….<br>.##….<br>….##.<br>..####.<br>…###.<br>…….<br>【输出样例】<br>1</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>即：判断连通块（岛屿）中是否存在某个位置其相邻的四个方向皆为 ‘#’，若存在，则该连通块不会被淹没，否则该连通块会被淹没。<br>遍历整个海域，每遍历到一个未被访问过的 ‘#’，使用dfs搜索出整个连通块，边搜索边判断是否存在某个位置其相邻的四个方向皆为 ‘#’。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">char</span> <span class="built_in">map</span>[N][N];</span><br><span class="line"><span class="keyword">int</span> vis[N][N]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> f[N*N]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span> || y&lt;<span class="number">0</span> || x&gt;=n || y&gt;=n) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">map</span>[x][y] == <span class="string">&#x27;.&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(vis[x][y]) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    vis[x][y]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">map</span>[x<span class="number">-1</span>][y]==<span class="string">&#x27;#&#x27;</span> &amp;&amp; <span class="built_in">map</span>[x+<span class="number">1</span>][y]==<span class="string">&#x27;#&#x27;</span> &amp;&amp; <span class="built_in">map</span>[x][y+<span class="number">1</span>]==<span class="string">&#x27;#&#x27;</span> &amp;&amp; <span class="built_in">map</span>[x][y<span class="number">-1</span>]==<span class="string">&#x27;#&#x27;</span>) &#123;</span><br><span class="line">        f[num]++;</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(x<span class="number">-1</span>,y,num);</span><br><span class="line">    dfs(x+<span class="number">1</span>,y,num);</span><br><span class="line">    dfs(x,y+<span class="number">1</span>,num);</span><br><span class="line">    dfs(x,y<span class="number">-1</span>,num);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++) &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;<span class="built_in">map</span>[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">map</span>[i][j]==<span class="string">&#x27;#&#x27;</span> &amp;&amp; !vis[i][j]) &#123;</span><br><span class="line">                dfs(i,j,num);</span><br><span class="line">                num++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(f[i] == <span class="number">0</span>) &#123;</span><br><span class="line">            ans++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>深度优先搜索</tag>
        <tag>连通块</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2018年第九届省赛 C/C++ B组 08 日志统计</title>
    <url>/2021-04-11-LANQIAO201808.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小明维护着一个程序员论坛。现在他收集了一份”点赞”日志，日志共有 N 行。其中每一行的格式是：<br>ts id<br>表示在 ts 时刻编号 id 的帖子收到一个”赞”。<br>现在小明想统计有哪些帖子曾经是”热帖”。如果一个帖子曾在任意一个长度为 D 的时间段内收到不少于 K 个赞，小明就认为这个帖子曾是”热帖”。<br>具体来说，如果存在某个时刻 T 满足该帖在[T, T+D)这段时间内（注意是左闭右开区间）收到不少于 K 个赞，该帖就曾是”热帖”。<br>给定日志，请你帮助小明统计出所有曾是”热帖”的帖子编号。<br>【输入格式】<br>第一行包含三个整数N、D 和K。<br>以下 N 行每行一条日志，包含两个整数 ts 和 id。<br>对于 50% 的数据，1 &lt;= K &lt;= N &lt;= 1000<br>对于 100% 的数据，1 &lt;= K &lt;= N &lt;= 100000，0 &lt;= ts &lt;= 100000，0 &lt;= id &lt;= 100000<br>【输出格式】<br>按从小到大的顺序输出热帖 id。每个 id 一行。<br>【输入样例】<br>7 10 2<br>0 1<br>0 10<br>10 10<br>10 1<br>9 1<br>100 3<br>100 3<br>【输出样例】<br>1<br>3</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>注意数据结构的合理选取及使用，使用结构体保存帖子的 id 和收到的赞的数量，为什么不直接用一维数组保存帖子的 id 和收到的赞的数量？因为要以收到的赞的数量对帖子排序，使用一维数组会丢失帖子的 id；使用动态二维数组 vector&lt; vector&lt;int&gt; &gt; 保存每个帖子收到赞的时间，提高空间效率；使用 set 保存热帖 id，自动排序。<br>该题输出的行数较大，使用 ‘\n’ 代替 endl 可以大大提高效率。输入输出使用较频繁时，尽量使用C语言的输入输出，C语言的输入输出更高效！</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100001</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 帖子结构体，保存帖子的id和收到的赞的数量 </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> id,num;</span><br><span class="line">&#125; Log;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">compare</span><span class="params">(Log a,Log b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.num&gt;b.num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,d,k;</span><br><span class="line">    Log <span class="built_in">log</span>[N];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++) &#123;</span><br><span class="line">        <span class="built_in">log</span>[i].id=i;</span><br><span class="line">        <span class="built_in">log</span>[i].num=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="built_in">vector</span>&lt; <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; <span class="title">time</span><span class="params">(N)</span></span>; <span class="comment">//保存每个帖子收到赞的时间 </span></span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; ans; <span class="comment">//保存热帖id，使用set自动排序 </span></span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;d&gt;&gt;k;</span><br><span class="line">    <span class="keyword">int</span> ts,id,maxid=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;ts&gt;&gt;id;</span><br><span class="line">        <span class="keyword">if</span>(id &gt; maxid) &#123;</span><br><span class="line">            maxid=id;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">log</span>[id].num++;</span><br><span class="line">        time[id].push_back(ts);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(<span class="built_in">log</span>,<span class="built_in">log</span>+maxid+<span class="number">1</span>,compare); <span class="comment">//以收到的赞的数量对帖子排序 </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=maxid &amp;&amp; <span class="built_in">log</span>[i].num&gt;=k;i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> f=<span class="number">0</span>;</span><br><span class="line">        sort(time[<span class="built_in">log</span>[i].id].<span class="built_in">begin</span>(),time[<span class="built_in">log</span>[i].id].<span class="built_in">end</span>()); <span class="comment">//将收到赞的时间排序 </span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;time[<span class="built_in">log</span>[i].id].<span class="built_in">size</span>();j++) &#123;</span><br><span class="line">            <span class="keyword">int</span> q=j;</span><br><span class="line">            <span class="keyword">while</span>(time[<span class="built_in">log</span>[i].id][q]-time[<span class="built_in">log</span>[i].id][j]&lt;d &amp;&amp; q&lt;time[<span class="built_in">log</span>[i].id].<span class="built_in">size</span>()) &#123;</span><br><span class="line">                <span class="keyword">if</span>(q-j+<span class="number">1</span>&gt;=k) &#123; <span class="comment">//判断是否是热帖 </span></span><br><span class="line">                    ans.insert(<span class="built_in">log</span>[i].id);</span><br><span class="line">                    f=<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                q++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(f) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator it=ans.<span class="built_in">begin</span>();it!=ans.<span class="built_in">end</span>();it++) &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;*it&lt;&lt;<span class="string">&#x27;\n&#x27;</span>; <span class="comment">//用&#x27;\n&#x27;代替endl提高效率 </span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>STL</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2018年第九届省赛 C/C++ B组 07 螺旋折线</title>
    <url>/2021-04-11-LANQIAO201807.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/2018071.png"><br>如图所示的螺旋折线经过平面上所有整点恰好一次。<br>对于整点(X, Y)，我们定义它到原点的距离dis(X, Y)是从原点到(X, Y)的螺旋折线段的长度。<br>例如dis(0, 1) = 3, dis(-2, -1) = 9<br>给出整点坐标(X, Y)，你能计算出dis(X, Y)吗？<br>【输入格式】<br>X和Y<br>对于40%的数据, -1000 &lt;= X, Y &lt;= 1000<br>对于70%的数据, -100000 &lt;= X, Y &lt;= 100000<br>对于100%的数据, -1000000000 &lt;= X, Y &lt;= 1000000000<br>【输出格式】<br>输出dis(X, Y)<br>【样例输入】<br>0 1<br>【样例输出】<br>3</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><h3 id="模拟"><a href="#模拟" class="headerlink" title="模拟"></a>模拟</h3><p>模拟计算，只能通过78%的数据。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x,y,x2=<span class="number">0</span>,y2=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> dis[<span class="number">4</span>][<span class="number">2</span>]=&#123;&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">1</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-1</span>&#125;&#125;;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>,n=<span class="number">0</span>,<span class="built_in">step</span>=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line">    <span class="keyword">while</span>(x2!=x || y2!=y) &#123;</span><br><span class="line">        ans+=<span class="built_in">step</span>;</span><br><span class="line">        <span class="keyword">int</span> d=(n++)%<span class="number">4</span>; <span class="comment">//前进方向 </span></span><br><span class="line">        x2+=<span class="built_in">step</span>*dis[d][<span class="number">0</span>];</span><br><span class="line">        y2+=<span class="built_in">step</span>*dis[d][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">0</span>) &#123; <span class="comment">//步长前进2次就+1 </span></span><br><span class="line">            <span class="built_in">step</span>++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(x2==x &amp;&amp; y2!=y) &#123; <span class="comment">//x相同y不同 </span></span><br><span class="line">            d=n%<span class="number">4</span>;</span><br><span class="line">            <span class="comment">//y2向上走或向下走到y </span></span><br><span class="line">            <span class="keyword">if</span>(dis[d][<span class="number">1</span>]&gt;<span class="number">0</span> &amp;&amp; y-y2&gt;<span class="number">0</span> &amp;&amp; y-y2&lt;=<span class="built_in">step</span> || dis[d][<span class="number">1</span>]&lt;<span class="number">0</span> &amp;&amp; y2-y&gt;<span class="number">0</span> &amp;&amp; y2-y&lt;=<span class="built_in">step</span>) &#123;</span><br><span class="line">                ans+=<span class="built_in">abs</span>(y-y2);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(y2==y &amp;&amp; x2!=x) &#123;</span><br><span class="line">            d=n%<span class="number">4</span>;</span><br><span class="line">            <span class="keyword">if</span>(dis[d][<span class="number">0</span>]&gt;<span class="number">0</span> &amp;&amp; x-x2&gt;<span class="number">0</span> &amp;&amp; x-x2&lt;=<span class="built_in">step</span> || dis[d][<span class="number">0</span>]&lt;<span class="number">0</span> &amp;&amp; x2-x&gt;<span class="number">0</span> &amp;&amp; x2-x&lt;=<span class="built_in">step</span>) &#123;</span><br><span class="line">                ans+=<span class="built_in">abs</span>(x-x2);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="找规律"><a href="#找规律" class="headerlink" title="找规律"></a>找规律</h3><p><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/2018072.png"><br>将螺旋折线改变一下，发现内部是正方形，正方形的边长构成等差数列8 16 24 …<br>所以内圈的螺旋折线的长度可以通过等差数列求和求得。<br>最外圈的螺旋折线的长度该怎么计算呢？<br><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/2018073.png"><br>我们用直线 y = x 将坐标轴平分，<br>y &gt; x 时，内圈等差数列和加上最外圈的螺旋折线的长度 (x , y) - (-m, -m) = x + y + 2m &gt; 0<br>y &lt;= x 时，内圈加完整最外圈等差数列和减去最外圈多余的螺旋折线的长度 (x, y) - (-m, -m) = x + y + 2m &gt;= 0<br>其中 m 为最外圈圈数，等于max(abs(x), abs(y))</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> x,y;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> m=<span class="built_in">max</span>(<span class="built_in">abs</span>(x),<span class="built_in">abs</span>(y)),ans;</span><br><span class="line">    <span class="keyword">if</span>(y &gt; x) &#123;</span><br><span class="line">        ans=(<span class="number">4</span>+<span class="number">4</span>*(m<span class="number">-1</span>))*(m<span class="number">-1</span>)+x+y+<span class="number">2</span>*m;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        ans=(<span class="number">4</span>+<span class="number">4</span>*m)*m-x-y<span class="number">-2</span>*m;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>找规律</tag>
        <tag>模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2018年第九届省赛 C/C++ B组 06 递增三元组</title>
    <url>/2021-04-11-LANQIAO201806.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定三个整数数组<br>A = [A1, A2, … AN]<br>B = [B1, B2, … BN]<br>C = [C1, C2, … CN]<br>请你统计有多少个三元组(i, j, k)满足：<br>1、 1 &lt;= i, j, k &lt;= N<br>2、 Ai &lt; Bj &lt; Ck<br>【输入格式】<br>第一行包含一个整数N。<br>第二行包含N个整数A1, A2, … AN。<br>第三行包含N个整数B1, B2, … BN。<br>第四行包含N个整数C1, C2, … CN。<br>对于30%的数据，1 &lt;= N &lt;= 100<br>对于60%的数据，1 &lt;= N &lt;= 1000<br>对于100%的数据，1 &lt;= N &lt;= 100000，0 &lt;= Ai, Bi, Ci &lt;= 100000<br>【输出格式】<br>一个整数表示答案<br>【样例输入】<br>3<br>1 1 1<br>2 2 2<br>3 3 3<br>【样例输出】<br>27</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>暴力只能通过 71% 的数据。<br>需要使用哈希表分别保存三个数组中每个整数出现的次数，若分别取自三个数组的三个整数 a &lt; b &lt; c，则<br>ans += num_a * num_b * num_c（num_a 为整数 a 在数组 A 中出现的次数）。</p>
<h3 id="暴力"><a href="#暴力" class="headerlink" title="暴力"></a>暴力</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,abc[<span class="number">3</span>][<span class="number">100000</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++) &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;abc[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(abc[<span class="number">0</span>][i] &lt; abc[<span class="number">1</span>][j]) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;n;k++) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(abc[<span class="number">1</span>][j] &lt; abc[<span class="number">2</span>][k]) &#123;</span><br><span class="line">                        ans++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,t,abc[<span class="number">3</span>][<span class="number">100001</span>]=&#123;<span class="number">0</span>&#125;,maxabc[<span class="number">3</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++) &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">            abc[i][t]++; <span class="comment">//分别保存三个数组中每个整数出现的次数</span></span><br><span class="line">            <span class="keyword">if</span>(t &gt; maxabc[i]) &#123;</span><br><span class="line">                maxabc[i]=t;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=maxabc[<span class="number">0</span>];i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(abc[<span class="number">0</span>][i]) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=maxabc[<span class="number">1</span>];j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(abc[<span class="number">1</span>][j]) &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> k=j+<span class="number">1</span>;k&lt;=maxabc[<span class="number">2</span>];k++) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(abc[<span class="number">2</span>][k]) &#123;</span><br><span class="line">                            ans+=abc[<span class="number">0</span>][i]*abc[<span class="number">1</span>][j]*abc[<span class="number">2</span>][k];</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>哈希表</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2018年第九届省赛 C/C++ B组 04 测试次数</title>
    <url>/2021-04-11-LANQIAO201804.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>x 星球的居民脾气不太好，但好在他们生气的时候唯一的异常举动是：摔手机。<br>各大厂商也就纷纷推出各种耐摔型手机。x 星球的质监局规定了手机必须经过耐摔测试，并且评定出一个耐摔指数来，之后才允许上市流通。<br>x 星球有很多高耸入云的高塔，刚好可以用来做耐摔测试。塔的每一层高度都是一样的，与地球上稍有不同的是，他们的第一层不是地面，而是相当于我们的 2 楼。<br>如果手机从第 7 层扔下去没摔坏，但第 8 层摔坏了，则手机耐摔指数 = 7。<br>特别地，如果手机从第1层扔下去就坏了，则耐摔指数 = 0。<br>如果到了塔的最高层第 n 层扔没摔坏，则耐摔指数 = n。<br>为了减少测试次数，从每个厂家抽样 3 部手机参加测试。<br>某次测试的塔高为 1000 层，如果我们总是采用最佳策略，在最坏的运气下最多需要测试多少次才能确定手机的耐摔指数呢？<br>请填写这个最多测试次数。</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><h3 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h3><p>总是采用最佳策略，在最坏的运气下的最多测试次数是什么意思？即摔坏了所有手机且测试到最后一次才能测出耐摔指数所需要的最少测试次数。<br>我们先假设这个测试次数为 k，n 部手机 m 层楼，既然有 k 次机会，我们不妨从第 k 层开始测试，若第 1 部手机摔坏了，那么接下来测试 n - 1 部手机 1 ~ k - 1 层的情况；若没有摔坏，就测试 n 部手机 k + 1 ~ m 层的情况（测试时只关心层数，所以 1 ~ m - k 等价于 k + 1 ~ m），即从 k + (k - 1) 层开始测试，若第 1 部手机这次摔坏了，那么接下来测试 n - 1 部手机 k + 1 ~ k + (k - 1) - 1 层的情况；若这次也没有摔坏，就测试 n 部手机 k + (k - 1) + 1 ~ m 层楼的情况，以此类推。<br>综上所述，设$dp[i][j]$表示 i 部手机 j 层楼的测试次数，则状态转移方程为:<br>$dp[i][j]=max(dp[i-1][k-1],dp[i][j-k])+1,1&lt;=k&lt;=j-1$<br>dp数组初始化时，初始化为最坏情况，即 j 层楼测试 j 次，则状态转移方程变化为:<br>$dp[i][j]=min(dp[i][j],max(dp[i-1][k-1],dp[i][j-k])+1),1&lt;=k&lt;=j-1$</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> phone=<span class="number">3</span>,<span class="built_in">floor</span>=<span class="number">1000</span>,dp[<span class="number">4</span>][<span class="number">1001</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=phone;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="built_in">floor</span>;j++) &#123;</span><br><span class="line">            dp[i][j]=j; <span class="comment">//初始化为最坏情况 </span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=phone;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="built_in">floor</span>;j++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;j;k++) &#123;</span><br><span class="line">                dp[i][j]=<span class="built_in">min</span>(dp[i][j],<span class="built_in">max</span>(dp[i<span class="number">-1</span>][k<span class="number">-1</span>],dp[i][j-k])+<span class="number">1</span>); <span class="comment">//状态转移方程 </span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;dp[<span class="number">3</span>][<span class="number">1000</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="数学推导"><a href="#数学推导" class="headerlink" title="数学推导"></a>数学推导</h3><p>将问题转换为：n 部手机 k 次测试最多可以测出多少层楼。<br>先分析 n = 2 的情况，同上第 1 部手机从第 k 层开始测试，既然要求最多可以测出多少层楼，那么手机应没有摔坏，从k+(k-1)层开始测试，以此类推，最多可以测出的层数为：<br>$k+(k-1)+(k-2)+\cdots+2+1=\frac{k(k+1)}{2}$<br>再分析 n = 3 的情况，由上可知 2 部手机 k - 1 测试最多可以测出$\frac{k(k-1)}{2}$层楼，所以第1部手机从$\frac{k(k-1)}{2}+1$层开始测试，同上既然要求最多可以测出多少层楼，那么手机应没有摔坏，从$\frac{k(k-1)}{2}+1+\frac{(k-1)(k-2)}{2}+1$层开始测试，以此类推，最多可以测出的层数为：<br>$[\frac{k(k-1)}{2}+1]+[\frac{(k-1)(k-2)}{2}+1]+\cdots+[\frac{2\times1}{2}+1]+[\frac{1\times0}{2}+1]$<br>$=\frac{1}{2}\lbrace[k^2+(k-1)^2+\cdots+1]-[k+(k-1)+\cdots+1]\rbrace+k$<br>$=\frac{1}{2}[\frac{k(k+1)(2k+1)}{6}-\frac{k(k+1)}{2}]+k$<br>$=\frac{k^3+5k}{6}$<br>能测出的最多楼层大于等于题目给出的 1000 就能求出测试次数 k：<br>$\frac{k^3+5k}{6}\geq1000$</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">pow</span>(k,<span class="number">3</span>)+<span class="number">5</span>*k &lt; <span class="number">6000</span>) &#123;</span><br><span class="line">        k++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;k&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>19</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>动态规划</tag>
        <tag>数学</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2018年第九届省赛 C/C++ B组 03 乘积尾零</title>
    <url>/2021-04-11-LANQIAO201803.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>如下的 10 行数据，每行有 10 个整数，请你求出它们的乘积的末尾有多少个零？</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5650 4542 3554 473 946 4114 3871 9073 90 4329 </span><br><span class="line">2758 7949 6113 5659 5245 7432 3051 4434 6704 3594 </span><br><span class="line">9937 1173 6866 3397 4759 7557 3070 2287 1453 9899 </span><br><span class="line">1486 5722 3135 1170 4014 5510 5120 729 2880 9019 </span><br><span class="line">2049 698 4582 4346 4427 646 9742 7340 1230 7683 </span><br><span class="line">5693 7015 6887 7381 4172 4341 2909 2027 7355 5649 </span><br><span class="line">6701 6645 1671 5978 2704 9926 295 3125 3878 6785 </span><br><span class="line">2066 4247 4800 1578 6652 4616 1113 6205 3264 2915 </span><br><span class="line">3966 5291 2904 1285 2193 1428 2265 8730 9436 7074 </span><br><span class="line">689 5510 8243 6114 337 4096 8199 7313 3685 211 </span><br></pre></td></tr></table></figure>

<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>计算每个整数中含有的 2 和 5 的个数，最小个数即为尾零个数。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,num_2=<span class="number">0</span>,num_5=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">        <span class="keyword">while</span>(a%<span class="number">5</span>==<span class="number">0</span>) &#123;</span><br><span class="line">            num_5++;</span><br><span class="line">            a/=<span class="number">5</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(a%<span class="number">2</span>==<span class="number">0</span>) &#123;</span><br><span class="line">            num_2++;</span><br><span class="line">            a/=<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">min</span>(num_2,num_5)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>31</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
  </entry>
  <entry>
    <title>蓝桥杯 2018年第九届省赛 C/C++ B组 02 明码</title>
    <url>/2021-04-11-LANQIAO201802.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>汉字的字形存在于字库中，即便在今天，16 点阵的字库也仍然使用广泛。<br>16 点阵的字库把每个汉字看成是 16 x 16 个像素信息，并把这些信息记录在字节中。<br>一个字节可以存储 8 位信息，用 32 个字节就可以存一个汉字的字形了。<br>把每个字节转为 2 进制表示，1 表示墨迹，0 表示底色。<br>每行 2 个字节，一共 16 行，布局是：<br>    第 1 字节，第 2 字节<br>    第 3 字节，第 4 字节<br>    ….<br>    第 31 字节, 第 32 字节<br>这道题目是给你一段多个汉字组成的信息，每个汉字用 32 个字节表示，这里给出了字节作为有符号整数的值。<br>题目的要求隐藏在这些信息中。你的任务是复原这些汉字的字形，从中看出题目的要求，并根据要求填写答案。<br>这段信息是（一共 10 个汉字）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 0 4 0 4 0 4 32 -1 -16 4 32 4 32 4 32 4 32 4 32 8 32 8 32 16 34 16 34 32 30 -64 0 </span><br><span class="line">16 64 16 64 34 68 127 126 66 -124 67 4 66 4 66 -124 126 100 66 36 66 4 66 4 66 4 126 4 66 40 0 16 </span><br><span class="line">4 0 4 0 4 0 4 32 -1 -16 4 32 4 32 4 32 4 32 4 32 8 32 8 32 16 34 16 34 32 30 -64 0 </span><br><span class="line">0 -128 64 -128 48 -128 17 8 1 -4 2 8 8 80 16 64 32 64 -32 64 32 -96 32 -96 33 16 34 8 36 14 40 4 </span><br><span class="line">4 0 3 0 1 0 0 4 -1 -2 4 0 4 16 7 -8 4 16 4 16 4 16 8 16 8 16 16 16 32 -96 64 64 </span><br><span class="line">16 64 20 72 62 -4 73 32 5 16 1 0 63 -8 1 0 -1 -2 0 64 0 80 63 -8 8 64 4 64 1 64 0 -128 </span><br><span class="line">0 16 63 -8 1 0 1 0 1 0 1 4 -1 -2 1 0 1 0 1 0 1 0 1 0 1 0 1 0 5 0 2 0 </span><br><span class="line">2 0 2 0 7 -16 8 32 24 64 37 -128 2 -128 12 -128 113 -4 2 8 12 16 18 32 33 -64 1 0 14 0 112 0 </span><br><span class="line">1 0 1 0 1 0 9 32 9 16 17 12 17 4 33 16 65 16 1 32 1 64 0 -128 1 0 2 0 12 0 112 0 </span><br><span class="line">0 0 0 0 7 -16 24 24 48 12 56 12 0 56 0 -32 0 -64 0 -128 0 0 0 0 1 -128 3 -64 1 -128 0 0 </span><br></pre></td></tr></table></figure>

<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>即：将有符号整数转换为 8 位二进制数，正整数直接计算原码即可，负整数计算其相反数的反码，再加 1（即补码）。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> b[<span class="number">8</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">binary</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123; <span class="comment">//计算原码 </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">7</span>;i&gt;=<span class="number">0</span>;i--) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a &gt;= <span class="built_in">pow</span>(<span class="number">2</span>,i)) &#123;</span><br><span class="line">            a-=<span class="built_in">pow</span>(<span class="number">2</span>,i);</span><br><span class="line">            b[i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">16</span>;j++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">2</span>;k++) &#123;</span><br><span class="line">                <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">                <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">                <span class="keyword">if</span>(a &gt;= <span class="number">0</span>) &#123; <span class="comment">//正数 </span></span><br><span class="line">                    binary(a);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123; <span class="comment">//负数 </span></span><br><span class="line">                    binary(<span class="number">-1</span>*a);</span><br><span class="line">                    <span class="comment">// 计算反码 </span></span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> p=<span class="number">0</span>;p&lt;<span class="number">8</span>;p++) &#123;</span><br><span class="line">                        b[p]=<span class="number">1</span>-b[p];</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// 计算补码 </span></span><br><span class="line">                    <span class="keyword">int</span> q=<span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">while</span>(b[q]) &#123;</span><br><span class="line">                        b[q++]=<span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    b[q]=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> p=<span class="number">7</span>;p&gt;=<span class="number">0</span>;p--) &#123;</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;b[p];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="built_in">pow</span>(<span class="number">9</span>,<span class="number">9</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>直接使用 C++ 提供的 bitset 类。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">16</span>;j++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">2</span>;k++) &#123;</span><br><span class="line">                <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">                <span class="function"><span class="built_in">bitset</span>&lt;8&gt; <span class="title">b</span><span class="params">(a)</span></span>;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;b.to_string();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="built_in">pow</span>(<span class="number">9</span>,<span class="number">9</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>九的九次方等于多少？</strong></p>
<p><strong>387420489</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>二进制</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2017年第八届省赛 C/C++ B组 10 k倍区间</title>
    <url>/2021-03-29-LANQIAO201710.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个长度为 N 的数列，A1, A2, … , AN，如果其中一段连续的子序列Ai, Ai+1, … , Aj (i &lt;= j) 之和是 K 的倍数，我们就称这个区间[i, j]是 K 倍区间。<br>你能求出数列中总共有多少个 K 倍区间吗？<br>输入<br>第一行包含两个整数 N 和 K (1 &lt;= N, K &lt;= 100000)<br>以下 N 行每行包含一个整数 Ai (1 &lt;= Ai &lt;= 100000)<br>输出<br>输出一个整数，代表 K 倍区间的数目。<br>例如，输入：<br>5 2<br>1<br>2<br>3<br>4<br>5<br>程序应该输出：<br>6</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>先计算前缀和 S<sub>i</sub>，因为若S<sub>i</sub> % K == S<sub>j</sub> % K，则区间[i, j]是 K 倍区间，所以以除以 K 的余数将 S<sub>i</sub> 分类，并将每个分类包含的 S<sub>i</sub> 的个数保存为N<sub>j</sub>（j 为除以 K 的余数），则每个分类 K 倍区间的个数为 N<sub>j</sub> * (N<sub>j</sub> - 1) / 2，注意最后要加上余数为 0 的个数。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,k,a[N+<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> s[N+<span class="number">1</span>]=&#123;<span class="number">0</span>&#125;,num[N]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">        s[i]=s[i<span class="number">-1</span>]+a[i];</span><br><span class="line">        num[s[i]%k]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=num[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(num[i] &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            ans+=num[i]*(num[i]<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>前缀和</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2017年第八届省赛 C/C++ B组 09 分巧克力</title>
    <url>/2021-03-29-LANQIAO201709.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>儿童节那天有 K 位小朋友到小明家做客。小明拿出了珍藏的巧克力招待小朋友们。<br>小明一共有 N 块巧克力，其中第 i 块是 Hi x Wi 的方格组成的长方形。<br>为了公平起见，小明需要从这 N 块巧克力中切出 K 块巧克力分给小朋友们。切出的巧克力需要满足：<br>1、形状是正方形，边长是整数<br>2、大小相同<br>例如一块 6 x 5 的巧克力可以切出 6 块 2 x 2 的巧克力或者 2 块 3 x 3 的巧克力。<br>当然小朋友们都希望得到的巧克力尽可能大，你能帮小 Hi 计算出最大的边长是多少么？<br>输入<br>第一行包含两个整数 N 和 K (1 &lt;= N, K &lt;= 100000)<br>以下 N 行每行包含两个整数 Hi 和 Wi (1 &lt;= Hi, Wi &lt;= 100000)<br>输入保证每位小朋友至少能获得一块 1 x 1 的巧克力。<br>输出<br>输出切出的正方形巧克力最大可能的边长。<br>样例输入：<br>2 10<br>6 5<br>5 6<br>样例输出：<br>2</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>需要使用二分法，否则只能通过 78% 的数据。</p>
<h3 id="未使用二分法"><a href="#未使用二分法" class="headerlink" title="未使用二分法"></a>未使用二分法</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,k,h,w,maxLen=<span class="number">0</span>,num[N+<span class="number">1</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;h&gt;&gt;w;</span><br><span class="line">        maxLen=<span class="built_in">max</span>(maxLen,<span class="built_in">min</span>(h,w));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="built_in">min</span>(h,w);j++) &#123;</span><br><span class="line">            num[j]+=(h/j)*(w/j);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=maxLen;i&gt;<span class="number">0</span>;i--) &#123;</span><br><span class="line">        <span class="keyword">if</span>(num[i] &gt;= k) &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="使用二分法"><a href="#使用二分法" class="headerlink" title="使用二分法"></a>使用二分法</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100000</span>;</span><br><span class="line"><span class="keyword">int</span> n,k,h[N],w[N],maxLen=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        num+=(h[i]/len)*(w[i]/len);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num&gt;=k;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;h[i]&gt;&gt;w[i];</span><br><span class="line">        maxLen=<span class="built_in">max</span>(maxLen,<span class="built_in">min</span>(h[i],w[i]));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> L=<span class="number">1</span>,R=maxLen,Mid;</span><br><span class="line">    <span class="keyword">while</span>(L&lt;=R) &#123;</span><br><span class="line">        Mid=(L+R)/<span class="number">2</span>;</span><br><span class="line">        f(Mid) ? L=Mid+<span class="number">1</span> : R=Mid<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;L<span class="number">-1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>二分法</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2017年第八届省赛 C/C++ B组 08 包子凑数</title>
    <url>/2021-03-28-LANQIAO201708.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小明几乎每天早晨都会在一家包子铺吃早餐。他发现这家包子铺有 N 种蒸笼，其中第 i 种蒸笼恰好能放 Ai 个包子。每种蒸笼都有非常多笼，可以认为是无限笼。<br>每当有顾客想买 X 个包子，卖包子的大叔就会迅速选出若干笼包子来，使得这若干笼中恰好一共有 X 个包子。比如一共有 3 种蒸笼，分别能放3、4和5个包子。当顾客想买 11 个包子时，大叔就会选 2 笼 3 个的再加 1 笼 5 个的（也可能选出 1 笼 3 个的再加 2 笼 4 个的）。<br>当然有时包子大叔无论如何也凑不出顾客想买的数量。比如一共有 3 种蒸笼，分别能放4、5和6个包子。而顾客想买 7 个包子时，大叔就凑不出来了。<br>小明想知道一共有多少种数目是包子大叔凑不出来的。<br>输入<br>第一行包含一个整数 N (1 &lt;= N &lt;= 100)<br>以下 N 行每行包含一个整数 Ai (1 &lt;= Ai &lt;= 100)<br>输出<br>一个整数代表答案。如果凑不出的数目有无限多个，输出 INF。<br>例如，输入：<br>2<br>4<br>5<br>程序应该输出：<br>6<br>再例如，输入：<br>2<br>4<br>6<br>程序应该输出：<br>INF<br>样例解释：<br>对于样例1，凑不出的数目包括：1, 2, 3, 6, 7, 11。<br>对于样例2，所有奇数都凑不出来，所以有无限多个。</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>若所有 Ai 的最大公约数不为 1，则有 INF 个数目是包子大叔凑不出来的。后面就是一个背包问题。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b==<span class="number">0</span> ? a : gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,d=<span class="number">0</span>,a[<span class="number">100</span>],dp[<span class="number">10001</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">        d=gcd(d,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(d != <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;INF&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        dp[a[i]]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j+a[i]&lt;=<span class="number">10000</span>;j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(dp[j]) &#123;</span><br><span class="line">                dp[j+a[i]]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10000</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!dp[i]) &#123;</span><br><span class="line">            ans++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>背包问题</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2017年第八届省赛 C/C++ B组 07 日期问题</title>
    <url>/2021-03-28-LANQIAO201707.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小明正在整理一批历史文献。这些历史文献中出现了很多日期。小明知道这些日期都在 1960 年 1 月 1 日至 2059 年 12 月 31 日。令小明头疼的是，这些日期采用的格式非常不统一，有采用年/月/日的，有采用月/日/年的，还有采用日/月/年的。更加麻烦的是，年份也都省略了前两位，使得文献上的一个日期，存在很多可能的日期与其对应。<br>比如02/03/04，可能是 2002 年 03 月 04 日、2004 年 02 月 03 日或 2004 年 03 月 02 日。<br>给出一个文献上的日期，你能帮助小明判断有哪些可能的日期对其对应吗？<br>输入<br>一个日期，格式是”AA/BB/CC”，(0 &lt;= A, B, C &lt;= 9)<br>输出<br>若干个不相同的日期，每个日期一行，格式是”yyyy-MM-dd”。多个日期按从早到晚排列。<br>样例输入<br>02/03/04<br>样例输出<br>2002-03-04<br>2004-02-03<br>2004-03-02</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>思维比较简单，直接判断三种可能的日期是否有意义。<br>输入输出比较考验技巧，难点在于排序和去重，去重容易忽略，不去重只能通过 78% 的数据。<br>先看一下我写的代码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> days[<span class="number">13</span>]=&#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">29</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> year,<span class="keyword">int</span> month,<span class="keyword">int</span> day)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(month == <span class="number">0</span> || month &gt; <span class="number">12</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(day == <span class="number">0</span> || day &gt; days[month]) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(year &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">        year+=<span class="number">1900</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        year+=<span class="number">2000</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(month == <span class="number">2</span> &amp;&amp; day == <span class="number">29</span> &amp;&amp; !(year%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;year%<span class="number">100</span>!=<span class="number">0</span> || year%<span class="number">400</span>==<span class="number">0</span>)) &#123; <span class="comment">//2月29日出现在非润年</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ans.insert(year*<span class="number">10000</span>+month*<span class="number">100</span>+day);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> dateStr;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;dateStr;</span><br><span class="line">    <span class="keyword">int</span> t=<span class="number">0</span>,k=<span class="number">0</span>,date[<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">8</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">3</span> != <span class="number">2</span>) &#123;</span><br><span class="line">            t*=<span class="number">10</span>;</span><br><span class="line">            t+=dateStr[i]<span class="number">-48</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            date[k++]=t;</span><br><span class="line">            t=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    f(date[<span class="number">0</span>],date[<span class="number">1</span>],date[<span class="number">2</span>]); <span class="comment">//年月日</span></span><br><span class="line">    f(date[<span class="number">2</span>],date[<span class="number">0</span>],date[<span class="number">1</span>]); <span class="comment">//月日年</span></span><br><span class="line">    f(date[<span class="number">2</span>],date[<span class="number">1</span>],date[<span class="number">0</span>]); <span class="comment">//日月年</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator it=ans.<span class="built_in">begin</span>();it!=ans.<span class="built_in">end</span>();it++) &#123;</span><br><span class="line">        <span class="keyword">int</span> day=*it%<span class="number">100</span>;</span><br><span class="line">        <span class="keyword">int</span> month=*it/<span class="number">100</span>%<span class="number">100</span>;</span><br><span class="line">        <span class="keyword">int</span> year=*it/<span class="number">10000</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;year&lt;&lt;<span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span>(month &lt; <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&#x27;0&#x27;</span>&lt;&lt;month&lt;&lt;<span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;month&lt;&lt;<span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(day &lt; <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&#x27;0&#x27;</span>&lt;&lt;day&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;day&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>再看一下我借鉴了其它题解之后写的代码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> year,month,day;</span><br><span class="line">&#125; Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> days[<span class="number">13</span>]=&#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">year</span><span class="params">(<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(y &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">        y+=<span class="number">1900</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        y+=<span class="number">2000</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">compare</span><span class="params">(Date a,Date b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.year != b.year) &#123;</span><br><span class="line">        <span class="keyword">return</span> a.year &lt; b.year;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a.month != b.month) &#123;</span><br><span class="line">        <span class="keyword">return</span> a.month &lt; b.month;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a.day &lt; b.day;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(Date d)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(d.year%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;d.year%<span class="number">100</span>!=<span class="number">0</span> || d.year%<span class="number">400</span>==<span class="number">0</span>) &#123;</span><br><span class="line">        days[<span class="number">2</span>]=<span class="number">29</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        days[<span class="number">2</span>]=<span class="number">28</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(d.month == <span class="number">0</span> || d.month &gt; <span class="number">12</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(d.day == <span class="number">0</span> || d.day &gt; days[d.month]) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> aa,bb,cc;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d/%d/%d&quot;</span>,&amp;aa,&amp;bb,&amp;cc); <span class="comment">//巧用scanf</span></span><br><span class="line">    <span class="keyword">int</span> aa2=year(aa);</span><br><span class="line">    <span class="keyword">int</span> cc2=year(cc);</span><br><span class="line">    Date date[<span class="number">3</span>]=&#123;&#123;aa2,bb,cc&#125;,&#123;cc2,aa,bb&#125;,&#123;cc2,bb,aa&#125;&#125;;</span><br><span class="line">    sort(date,date+<span class="number">3</span>,compare);</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;<span class="number">3</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(date[i].year==date[i+<span class="number">1</span>].year &amp;&amp; date[i].month==date[i+<span class="number">1</span>].month &amp;&amp; date[i].day==date[i+<span class="number">1</span>].day) &#123;</span><br><span class="line">            date[i].year=<span class="number">0</span>; <span class="comment">//通过设置标志去重，先排序再去重</span></span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(date[i].year &amp;&amp; f(date[i])) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%02d-%02d-%02d\n&quot;</span>,date[i].year,date[i].month,date[i].day); <span class="comment">//巧用printf </span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>大佬的输入输出真的受教了！我习惯了使用C++的输入输出，忘记了C语言输入输出的强大。使用结构体保存日期也是我没有想到的。</p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>STL</tag>
        <tag>输入输出</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2017年第八届省赛 C/C++ B组 04 方格分割</title>
    <url>/2021-03-28-LANQIAO201704.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>6 x 6 的方格，沿着格子的边线剪开成两部分。<br>要求这两部分的形状完全相同。<br>如图：p1.png, p2.png, p3.png就是可行的分割法。<br><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/2017041.1.png"><br><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/2017042.1.png"><br><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/2017043.1.png"><br>试计算：<br>包括这 3 种分法在内，一共有多少种不同的分割方法。<br>注意：旋转对称的属于同一种分割法。</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>使用深度优先搜索算法，从方格中心点 (3, 3) 出发， 每当向某个方向剪一个单位长度时，对称的方向也要剪一个单位长度，到达边界时停止。<br>注意旋转对称的属于同一种分割法，所以最后的结果要除以 4。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">7</span>][<span class="number">7</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dis[<span class="number">4</span>][<span class="number">2</span>]=&#123;&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-1</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x==<span class="number">0</span> || y==<span class="number">0</span> || x==<span class="number">6</span> || y==<span class="number">6</span>) &#123;</span><br><span class="line">        ans++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> tx=x+dis[i][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> ty=y+dis[i][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(!vis[tx][ty]) &#123;</span><br><span class="line">            vis[tx][ty]=<span class="number">1</span>;</span><br><span class="line">            vis[<span class="number">6</span>-tx][<span class="number">6</span>-ty]=<span class="number">1</span>;</span><br><span class="line">            dfs(tx,ty);</span><br><span class="line">            vis[tx][ty]=<span class="number">0</span>;</span><br><span class="line">            vis[<span class="number">6</span>-tx][<span class="number">6</span>-ty]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vis[<span class="number">3</span>][<span class="number">3</span>]=<span class="number">1</span>;</span><br><span class="line">    dfs(<span class="number">3</span>,<span class="number">3</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans/<span class="number">4</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>509</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>深度优先搜索</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2017年第八届省赛 C/C++ B组 03 承压计算</title>
    <url>/2021-03-28-LANQIAO201703.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>X 星球的高科技实验室中整齐地堆放着某批珍贵金属原料。<br>每块金属原料的外形、尺寸完全一致，但重量不同。<br>金属材料被严格地堆放成金字塔形。</p>
<p><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/201703.png"><br>其中的数字代表金属块的重量（计量单位较大）。<br>最下一层的 X 代表 30 台极高精度的电子秤。<br>假设每块原料的重量都十分精确地平均落在下方的两个金属块上，<br>最后，所有的金属块的重量都严格精确地平分落在最底层的电子秤上。<br>电子秤的计量单位很小，所以显示的数字很大。<br>工作人员发现，其中读数最小的电子秤的示数为：2086458231<br>请你推算出：读数最大的电子秤的示数为多少？</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>规律比较简单：<br>$a[i+1][j]=a[i+1][j]+a[i][j]/2$<br>$a[i+1][j+1]=a[i+1][j+1]+a[i][j]/2$<br>难点在于金属块重量的计量单位和电子秤的计量单位不同，差了一个倍数。<br>这个倍数我也是猜测出来的，层数增加一层，金属块的重量就要除以 2，为了保证能整除，所以这个倍数为 2^29。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> n=<span class="number">1</span>,a[<span class="number">30</span>][<span class="number">30</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">29</span>;i++) &#123;</span><br><span class="line">        n&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">29</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=i;j++) &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;a[i][j];</span><br><span class="line">            a[i][j]*=n;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">29</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=i;j++) &#123;</span><br><span class="line">            <span class="keyword">long</span> <span class="keyword">long</span> t=a[i][j]/<span class="number">2</span>;</span><br><span class="line">            a[i+<span class="number">1</span>][j]+=t;</span><br><span class="line">            a[i+<span class="number">1</span>][j+<span class="number">1</span>]+=t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a[<span class="number">29</span>],a[<span class="number">29</span>]+<span class="number">30</span>);</span><br><span class="line"><span class="comment">//    cout&lt;&lt;a[29][0]&lt;&lt;endl;</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;a[<span class="number">29</span>][<span class="number">29</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>72665192664</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>找规律</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2017年第八届省赛 C/C++ B组 02 等差素数列</title>
    <url>/2021-03-28-LANQIAO201702.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>2, 3, 5, 7, 11, 13, …. 是素数序列。<br>类似：7, 37, 67, 97, 127, 157 这样完全由素数组成的等差数列，叫等差素数数列。<br>上边的数列公差为 30，长度为 6。<br>2004年，格林与华人陶哲轩合作证明了：存在任意长度的素数等差数列。<br>这是数论领域一项惊人的成果！<br>有这一理论为基础，请你借助手中的计算机，满怀信心地搜索：<br>长度为 10 的等差素数列，其公差最小值是多少？</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>三层循环暴力即可，注意先打素数表，可大大提高程序效率。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">isPrime</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i*i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(n%i == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> prime[<span class="number">10001</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">10000</span>;i++) &#123; <span class="comment">//素数表</span></span><br><span class="line">        prime[i]=isPrime(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">1000</span>;i++) &#123; <span class="comment">//循环公差</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>;j&lt;=<span class="number">1000</span>;j++) &#123; <span class="comment">//循环首项</span></span><br><span class="line">            <span class="keyword">if</span>(prime[j] == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">int</span> f=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">9</span>;k++) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(prime[j+k*i] == <span class="number">0</span>) &#123;</span><br><span class="line">                        f=<span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(f == <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;    </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>210</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>暴力</tag>
        <tag>素数</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2016年第七届省赛 C/C++ B组 10 最大比例</title>
    <url>/2021-03-27-LANQIAO201610.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>X 星球的某个大奖赛设了 M 级奖励。每个级别的奖金是一个正整数。<br>并且，相邻的两个级别间的比例是个固定值。<br>也就是说：所有级别的奖金数构成了一个等比数列。比如：<br>16, 24, 36, 54<br>其等比值为：3/2<br>现在，我们随机调查了一些获奖者的奖金数。<br>请你据此推算可能的最大的等比值。<br>输入格式：<br>第一行为数字 N (0 &lt; N &lt; 100)，表示接下的一行包含 N 个正整数<br>第二行 N 个正整数 Xi (Xi &lt; 1000000000000)，用空格分开，每个整数表示调查到的某人的奖金数额<br>要求输出：<br>一个形如 A/B 的分数，要求A、B互质。表示可能的最大比例系数。<br>测试数据保证了输入格式正确，并且最大比例是存在的。<br>例如，输入：<br>3<br>1250 200 32<br>程序应该输出：<br>25/4<br>再例如，输入：<br>4<br>3125 32 32 200<br>程序应该输出：<br>5/2<br>再例如，输入：<br>3<br>549755813888 524288 2<br>程序应该输出：<br>4/1</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>使用 set 保存调查到的某人的奖金数额 X<sub>i</sub> ，自动去重且从小到大排序。<br>然后使用辗转相除法计算出 X<sub>i</sub> 与 X<sub>i-1</sub> 的最大公约数，将 X<sub>i</sub> / X<sub>i-1</sub> 化为最简分数，分别保存分子和分母。<br>最后使用与辗转相除法类似的原理分别计算出分子和分母的公底数。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b ? gcd(b,a%b) : a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">gcd2</span><span class="params">(ll a,ll b)</span> </span>&#123; <span class="comment">//求a、b的公底数</span></span><br><span class="line">    <span class="keyword">if</span>(a == b) &#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a &gt; b) &#123;</span><br><span class="line">        <span class="keyword">return</span> gcd2(b,a/b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> gcd2(a,b/a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">set</span>&lt;ll&gt; s; <span class="comment">//set元素不能重复且自动从小到大排序</span></span><br><span class="line">    ll n,t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">        s.insert(t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">vector</span>&lt;ll&gt; up,down; <span class="comment">//保存分子和分母 </span></span><br><span class="line">    ll num1,num2,n2=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">set</span>&lt;ll&gt;::iterator it=--s.<span class="built_in">end</span>();it!=s.<span class="built_in">begin</span>();) &#123;</span><br><span class="line">        num1=*it;</span><br><span class="line">        num2=*(--it);</span><br><span class="line">        t=gcd(num1,num2);</span><br><span class="line">        up.push_back(num1/t);</span><br><span class="line">        down.push_back(num2/t);</span><br><span class="line">        n2++;</span><br><span class="line">    &#125;</span><br><span class="line">    ll a=up[<span class="number">0</span>],b=down[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n2;i++) &#123;</span><br><span class="line">        a=gcd2(a,up[i]);</span><br><span class="line">        b=gcd2(b,down[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;a&lt;&lt;<span class="string">&#x27;/&#x27;</span>&lt;&lt;b&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>STL</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2016年第七届省赛 C/C++ B组 09 交换瓶子</title>
    <url>/2021-03-27-LANQIAO201609.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>有 N 个瓶子，编号1 ~ N，放在架子上。<br>比如有 5 个瓶子：<br>2 1 3 5 4<br>要求每次拿起 2 个瓶子，交换它们的位置。<br>经过若干次后，使得瓶子的序号为：<br>1 2 3 4 5<br>对于这么简单的情况，显然，至少需要交换 2 次就可以复位。<br>如果瓶子更多呢？你可以通过编程来解决。<br>输入格式为两行：<br>第一行：一个正整数 N（N &lt; 10000）, 表示瓶子的数目<br>第二行：N 个正整数，用空格分开，表示瓶子目前的排列情况。<br>输出数据为一行一个正整数，表示至少交换多少次，才能完成排序。<br>例如，输入：<br>5<br>3 1 2 5 4<br>程序应该输出：<br>3<br>再例如，输入：<br>5<br>5 4 3 2 1<br>程序应该输出：<br>2</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>使用贪心算法，当 i 号位置上的瓶子的编号不是 i 时，进行一次交换，将编号为 i 的瓶子交换到 i 号位置。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,a[<span class="number">10001</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i] != i) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[j] == i) &#123;</span><br><span class="line">                    <span class="keyword">int</span> t=a[i];</span><br><span class="line">                    a[i]=a[j];</span><br><span class="line">                    a[j]=t;</span><br><span class="line">                    sum++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>贪心</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2016年第七届省赛 C/C++ B组 08 四平方和</title>
    <url>/2021-03-27-LANQIAO201608.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>四平方和定理，又称为拉格朗日定理：<br>每个正整数都可以表示为至多 4 个正整数的平方和。<br>如果把 0 包括进去，就正好可以表示为 4 个数的平方和。<br>比如：<br>5 = 0^2 + 0^2 + 1^2 + 2^2<br>7 = 1^2 + 1^2 + 1^2 + 2^2<br>（^符号表示乘方的意思）<br>对于一个给定的正整数，可能存在多种平方和的表示法。<br>要求你对 4 个数排序：0 &lt;= a &lt;= b &lt;= c &lt;= d<br>并对所有的可能表示法按 a,b,c,d 为联合主键升序排列，最后输出第一个表示法<br>程序输入为一个正整数 N (N &lt; 5000000)<br>要求输出 4 个非负整数，按从小到大排序，中间用空格分开<br>例如，输入：<br>5<br>则程序应该输出：<br>0 0 1 2<br>再例如，输入：<br>12<br>则程序应该输出：<br>0 2 2 2<br>再例如，输入：<br>773535<br>则程序应该输出：<br>1 1 267 838</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>暴力使用四层循环只能通过 78% 的数据，将四层循环改为三层循环即可。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> a=<span class="number">0</span>;a&lt;=<span class="built_in">sqrt</span>(n);a++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> b=a;b&lt;=<span class="built_in">sqrt</span>(n);b++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a*a+b*b &lt;= n) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> c=b;c&lt;=<span class="built_in">sqrt</span>(n);c++) &#123;</span><br><span class="line">                    <span class="keyword">int</span> t=a*a+b*b+c*c;</span><br><span class="line">                    <span class="keyword">if</span>(t &lt;= n) &#123;</span><br><span class="line">                        <span class="keyword">int</span> d=<span class="built_in">sqrt</span>(n-t); <span class="comment">//四层循环改为三层循环</span></span><br><span class="line">                        <span class="keyword">if</span>(t+d*d == n) &#123;</span><br><span class="line">                            <span class="built_in">cout</span>&lt;&lt;a&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;b&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;c&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;d&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>暴力</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2016年第七届省赛 C/C++ B组 07 剪邮票</title>
    <url>/2021-03-27-LANQIAO201607.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>如【图1.jpg】, 有 12 张连在一起的 12 生肖的邮票。<br>现在你要从中剪下 5 张来，要求必须是连着的。（仅仅连接一个角不算相连）<br>比如，【图2.jpg】，【图3.jpg】中，粉红色所示部分就是合格的剪取。<br>请你计算，一共有多少种不同的剪取方法。<br><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/2016071.jpg"><br><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/2016072.jpg"><br><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/2016073.jpg"></p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>首先枚举从 12 张邮票中剪下 5 张邮票的所有组合，然后使用深度优先搜索判断这 5 张邮票的连通性，注意从 4 和 8 向右走走不到 5 和 9，从 5 和 9 向左走走不到 4 和 8。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dis[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">1</span>,<span class="number">-4</span>,<span class="number">4</span>&#125;,vis[<span class="number">13</span>],num[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> n,sum=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">5</span>) &#123;</span><br><span class="line">        sum++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(dis[i]==<span class="number">1</span> &amp;&amp; (a==<span class="number">4</span> || a==<span class="number">8</span>) || dis[i]==<span class="number">-1</span> &amp;&amp; (a==<span class="number">5</span> || a==<span class="number">9</span>)) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> t=a+dis[i];</span><br><span class="line">        <span class="keyword">if</span>(t&gt;=<span class="number">1</span> &amp;&amp; t&lt;=<span class="number">12</span> &amp;&amp; vis[t]==<span class="number">0</span> &amp;&amp; (t==num[<span class="number">1</span>] || t==num[<span class="number">2</span>] || t==num[<span class="number">3</span>] || t==num[<span class="number">4</span>])) &#123;</span><br><span class="line">            vis[t]=<span class="number">1</span>;</span><br><span class="line">            n++;</span><br><span class="line">            dfs(t);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//12个数里选5个数出来的所有组合</span></span><br><span class="line">    <span class="keyword">for</span>(num[<span class="number">0</span>]=<span class="number">1</span>;num[<span class="number">0</span>]&lt;=<span class="number">12</span><span class="number">-4</span>;num[<span class="number">0</span>]++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(num[<span class="number">1</span>]=num[<span class="number">0</span>]+<span class="number">1</span>;num[<span class="number">1</span>]&lt;=<span class="number">12</span><span class="number">-3</span>;num[<span class="number">1</span>]++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(num[<span class="number">2</span>]=num[<span class="number">1</span>]+<span class="number">1</span>;num[<span class="number">2</span>]&lt;=<span class="number">12</span><span class="number">-2</span>;num[<span class="number">2</span>]++) &#123;</span><br><span class="line">                <span class="keyword">for</span>(num[<span class="number">3</span>]=num[<span class="number">2</span>]+<span class="number">1</span>;num[<span class="number">3</span>]&lt;=<span class="number">12</span><span class="number">-1</span>;num[<span class="number">3</span>]++) &#123;</span><br><span class="line">                    <span class="keyword">for</span>(num[<span class="number">4</span>]=num[<span class="number">3</span>]+<span class="number">1</span>;num[<span class="number">4</span>]&lt;=<span class="number">12</span>;num[<span class="number">4</span>]++) &#123;</span><br><span class="line">                        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">                        vis[num[<span class="number">0</span>]]=<span class="number">1</span>;</span><br><span class="line">                        n=<span class="number">1</span>;</span><br><span class="line">                        dfs(num[<span class="number">0</span>]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>116</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>深度优先搜索</tag>
        <tag>组合问题</tag>
        <tag>连通块</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2016年第七届省赛 C/C++ B组 06 方格填数</title>
    <url>/2021-03-27-LANQIAO201606.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>如下的 10 个格子<br><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/201606.jpg"><br>填入 0 ~ 9 的数字。<br>要求：连续的两个数字不能相邻。（左右、上下、对角都算相邻）<br>一共有多少种可能的填数方案？</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>暴力即可，但要细心一点，对角相邻包括主对角相邻和副对角相邻。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>,a[<span class="number">10</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">abs</span>(a[<span class="number">0</span>]-a[<span class="number">1</span>])!=<span class="number">1</span> &amp;&amp; <span class="built_in">abs</span>(a[<span class="number">0</span>]-a[<span class="number">3</span>])!=<span class="number">1</span> &amp;&amp; <span class="built_in">abs</span>(a[<span class="number">0</span>]-a[<span class="number">4</span>])!=<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">abs</span>(a[<span class="number">1</span>]-a[<span class="number">2</span>])!=<span class="number">1</span> &amp;&amp; <span class="built_in">abs</span>(a[<span class="number">1</span>]-a[<span class="number">3</span>])!=<span class="number">1</span> &amp;&amp; <span class="built_in">abs</span>(a[<span class="number">1</span>]-a[<span class="number">4</span>])!=<span class="number">1</span> &amp;&amp; <span class="built_in">abs</span>(a[<span class="number">1</span>]-a[<span class="number">5</span>])!=<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">abs</span>(a[<span class="number">2</span>]-a[<span class="number">4</span>])!=<span class="number">1</span> &amp;&amp; <span class="built_in">abs</span>(a[<span class="number">2</span>]-a[<span class="number">5</span>])!=<span class="number">1</span> &amp;&amp; <span class="built_in">abs</span>(a[<span class="number">2</span>]-a[<span class="number">6</span>])!=<span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="built_in">abs</span>(a[<span class="number">3</span>]-a[<span class="number">4</span>])!=<span class="number">1</span> &amp;&amp; <span class="built_in">abs</span>(a[<span class="number">3</span>]-a[<span class="number">7</span>])!=<span class="number">1</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="built_in">abs</span>(a[<span class="number">4</span>]-a[<span class="number">5</span>])!=<span class="number">1</span> &amp;&amp; <span class="built_in">abs</span>(a[<span class="number">4</span>]-a[<span class="number">7</span>])!=<span class="number">1</span> &amp;&amp; <span class="built_in">abs</span>(a[<span class="number">4</span>]-a[<span class="number">8</span>])!=<span class="number">1</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span>(<span class="built_in">abs</span>(a[<span class="number">5</span>]-a[<span class="number">6</span>])!=<span class="number">1</span> &amp;&amp; <span class="built_in">abs</span>(a[<span class="number">5</span>]-a[<span class="number">7</span>])!=<span class="number">1</span> </span><br><span class="line">                               &amp;&amp; <span class="built_in">abs</span>(a[<span class="number">5</span>]-a[<span class="number">8</span>])!=<span class="number">1</span> &amp;&amp; <span class="built_in">abs</span>(a[<span class="number">5</span>]-a[<span class="number">9</span>])!=<span class="number">1</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span>(<span class="built_in">abs</span>(a[<span class="number">6</span>]-a[<span class="number">8</span>])!=<span class="number">1</span> &amp;&amp; <span class="built_in">abs</span>(a[<span class="number">6</span>]-a[<span class="number">9</span>])!=<span class="number">1</span>) &#123;</span><br><span class="line">                                    <span class="keyword">if</span>(<span class="built_in">abs</span>(a[<span class="number">7</span>]-a[<span class="number">8</span>])!=<span class="number">1</span> &amp;&amp; <span class="built_in">abs</span>(a[<span class="number">8</span>]-a[<span class="number">9</span>])!=<span class="number">1</span>) &#123;</span><br><span class="line">                                        sum++;    </span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span>(next_permutation(a,a+<span class="number">10</span>));</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>1580</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>全排列</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2016年第七届省赛 C/C++ B组 03 凑算式</title>
    <url>/2021-03-27-LANQIAO201603.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/201603.jpg"><br>这个算式中 A - I 代表 1 - 9 的数字，不同的字母代表不同的数字。<br>比如：<br>6 + 8 / 3 + 952 / 714 就是一种解法，<br>5 + 3 / 1 + 972 / 486 是另一种解法。<br>这个算式一共有多少种解法？</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>全排列问题，使用 next_permutation() 函数，注意浮点数比较相等。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">9</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">int</span> x=a[<span class="number">3</span>]*<span class="number">100</span>+a[<span class="number">4</span>]*<span class="number">10</span>+a[<span class="number">5</span>]; <span class="comment">//DEF</span></span><br><span class="line">        <span class="keyword">int</span> y=a[<span class="number">6</span>]*<span class="number">100</span>+a[<span class="number">7</span>]*<span class="number">10</span>+a[<span class="number">8</span>]; <span class="comment">//GHI</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">fabs</span>(a[<span class="number">0</span>]+(a[<span class="number">1</span>]*y+a[<span class="number">2</span>]*x)*<span class="number">1.0</span>/(a[<span class="number">2</span>]*y) - <span class="number">10</span>) &lt; <span class="number">1e-5</span>) &#123;</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span>(next_permutation(a,a+<span class="number">9</span>));</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>29</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>浮点数</tag>
        <tag>全排列</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2012年第三届省赛 C/C++ B组 01 微生物增殖</title>
    <url>/2021-03-24-LANQIAO201201.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>假设有两种微生物 X 和 Y<br>X 出生后每隔 3 分钟分裂一次（数目加倍），Y 出生后每隔 2 分钟分裂一次（数目加倍）。<br>一个新出生的 X，半分钟之后吃掉 1 个 Y，并且，从此开始，每隔 1 分钟吃 1 个 Y。<br>现在已知有新出生的 X = 10，Y = 89，求 60 分钟后 Y 的数目。<br>如果 X = 10，Y = 90 呢？<br>本题的要求就是写出这两种初始条件下，60 分钟后 Y 的数目。<br>题目的结果令你震惊吗？这不是简单的数字游戏！真实的生物圈有着同样脆弱的性质！也许因为你消灭的那只 Y 就是最终导致 Y 种群灭绝的最后一根稻草！</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>将时间乘以2，即以0.5分钟为单位时间。我们发现：<br>t % 2 == 1&emsp;Y = Y - X<br>t % 4 == 0&emsp;Y = 2 * Y<br>t % 6 == 0&emsp;X = 2 * X</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x,y,t=<span class="number">120</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line">    <span class="keyword">int</span> n=<span class="number">1</span>,f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n &lt;= t) &#123;</span><br><span class="line">        <span class="keyword">if</span>(f==<span class="number">0</span> &amp;&amp; n%<span class="number">2</span>==<span class="number">1</span>) &#123;</span><br><span class="line">            y-=x;</span><br><span class="line">            <span class="keyword">if</span>(y &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                f=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(f==<span class="number">0</span> &amp;&amp; n%<span class="number">4</span>==<span class="number">0</span>) &#123;</span><br><span class="line">            y*=<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">6</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            x*=<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        n++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;x=&quot;</span>&lt;&lt;x&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">if</span>(f == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;y=&quot;</span>&lt;&lt;y&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;y=0&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>0</strong><br><strong>94371840</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2015年第六届省赛 C/C++ B组 10 生命之树</title>
    <url>/2021-03-23-LANQIAO201510.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>在 X 森林里，上帝创建了生命之树。<br>他给每棵树的每个节点（叶子也称为一个节点）上，都标了一个整数，代表这个点的和谐值。<br>上帝要在这棵树内选出一个非空节点集 S，使得对于 S 中的任意两个点a, b，都存在一个点列 {a, v1, v2, … , vk, b} 使得这个点列中的每个点都是 S 里面的元素，且序列中相邻两个点间有一条边相连。<br>在这个前提下，上帝要使得 S 中的点所对应的整数的和尽量大。<br>这个最大的和就是上帝给生命之树的评分。<br>经过 atm 的努力，他已经知道了上帝给每棵树上每个节点上的整数。但是由于 atm 不擅长计算，他不知道怎样有效的求评分。他需要你为他写一个程序来计算一棵树的分数。<br>「输入格式」<br>第一行一个整数 n 表示这棵树有 n 个节点。<br>第二行 n 个整数，依次表示每个节点的评分。<br>接下来 n-1 行，每行 2 个整数 u, v，表示存在一条 u 到 v 的边。由于这是一棵树，所以是不存在环的。<br>「输出格式」<br>输出一行一个数，表示上帝给这棵树的分数。<br>「样例输入」<br>5<br>1 -2 -3 4 5<br>4 2<br>3 1<br>1 2<br>2 5<br>「样例输出」<br>8<br>「数据范围」<br>对于 30% 的数据，n &lt;= 10<br>对于 100% 的数据，0 &lt; n &lt;= 10^5，每个节点的评分的绝对值不超过10^6</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>使用树形DP，状态转移方程：<br>$dp[i]=\sum{max(dp[j],0)+w[i]}$<br>其中$dp[i]$为选择了 i 节点的情况下的最大分数，j 为 i 的子节点，w[i] 为 i 节点的权值<br>使用vector储存邻接矩阵</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100001</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> vis[N]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> d[N],ans=<span class="number">-1e6</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; node[N<span class="number">-1</span>]; <span class="comment">//邻接矩阵</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">    vis[u]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;node[u].<span class="built_in">size</span>();i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[node[u][i]]) &#123;</span><br><span class="line">            dfs(node[u][i]);</span><br><span class="line">            <span class="keyword">if</span>(d[node[u][i]] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                d[u]+=d[node[u][i]]; <span class="comment">//状态转移方程 </span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ans=<span class="built_in">max</span>(ans,d[u]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;d[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> u,v;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;u&gt;&gt;v;</span><br><span class="line">        node[u].push_back(v);</span><br><span class="line">        node[v].push_back(u);</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(u);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>STL</tag>
        <tag>树状DP</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2015年第六届省赛 C/C++ B组 09 垒骰子</title>
    <url>/2021-03-23-LANQIAO201509.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>赌圣 atm 晚年迷恋上了垒骰子，就是把骰子一个垒在另一个上边，不能歪歪扭扭，要垒成方柱体。<br>经过长期观察，atm 发现了稳定骰子的奥秘：有些数字的面贴着会互相排斥！<br>我们先来规范一下骰子：1 的对面是 4，2 的对面是 5，3 的对面是 6。<br>假设有 m 组互斥现象，每组中的那两个数字的面紧贴在一起，骰子就不能稳定的垒起来。<br>atm 想计算一下有多少种不同的可能的垒骰子方式。<br>两种垒骰子方式相同，当且仅当这两种方式中对应高度的骰子的对应数字的朝向都相同。<br>由于方案数可能过多，请输出模 10^9 + 7 的结果。<br>不要小看了 atm 的骰子数量哦～<br>「输入格式」<br>第一行两个整数 n m<br>n 表示骰子数目，接下来 m 行，每行两个整数 a b，表示 a 和 b 数字不能紧贴在一起。<br>「输出格式」<br>一行一个数，表示答案模 10^9 + 7 的结果。<br>「样例输入」<br>2 1<br>1 2<br>「样例输出」<br>544<br>「数据范围」<br>对于 30% 的数据：n &lt;= 5<br>对于 60% 的数据：n &lt;= 100<br>对于 100% 的数据：0 &lt; n &lt;= 10^9，m &lt;= 36</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><h3 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h3><p>使用动态规划，状态转移方程：<br>$dp[i][j]=\sum{dp[i-1][k]}$<br>其中$dp[i][j]$表示第 i 个骰子 j 面朝上的方案数，k 表示能与 j 面的对面紧贴的面<br>使用 vector 储存面与面的紧贴关系<br>仅使用动态规划只能通过 78% 的数据，需要使用矩阵快速幂</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; can[<span class="number">7</span>]; <span class="comment">//can[i]存能与点数i紧贴的点数</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> top[<span class="number">7</span>],bottom[<span class="number">7</span>]; <span class="comment">//top[i]存第n层骰子以点数i为顶面的方案数，bottom[i]存第n层骰子以点数i为底面的方案数</span></span><br><span class="line">    <span class="comment">//初始化 </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">6</span>;i++) &#123;</span><br><span class="line">        top[i]=<span class="number">1</span>; <span class="comment">//第1层骰子以点数i为顶面的方案数为1</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">6</span>;j++) &#123;</span><br><span class="line">            can[i].push_back(j);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++) &#123; <span class="comment">//删除不能紧贴的m组点</span></span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator it=can[a].<span class="built_in">begin</span>();it!=can[a].<span class="built_in">end</span>();it++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(*it == b) &#123;</span><br><span class="line">                can[a].erase(it);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator it=can[b].<span class="built_in">begin</span>();it!=can[b].<span class="built_in">end</span>();it++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(*it == a) &#123;</span><br><span class="line">                can[b].erase(it);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> k=<span class="number">4</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">6</span>;j++) &#123;</span><br><span class="line">            bottom[j]=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator it=can[j].<span class="built_in">begin</span>();it!=can[j].<span class="built_in">end</span>();it++) &#123;</span><br><span class="line">                bottom[j]+=top[*it]; <span class="comment">//状态转移方程</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">6</span>;j++) &#123;</span><br><span class="line">            top[j]=bottom[(j+<span class="number">3</span>)%<span class="number">6</span>==<span class="number">0</span> ? <span class="number">6</span> : (j+<span class="number">3</span>)%<span class="number">6</span>]%MOD;</span><br><span class="line">        &#125;</span><br><span class="line">        k*=<span class="number">4</span>;</span><br><span class="line">        k%=MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">6</span>;i++) &#123;</span><br><span class="line">        sum+=top[i];</span><br><span class="line">        sum%=MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum*k%MOD&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="动态规划-矩阵快速幂"><a href="#动态规划-矩阵快速幂" class="headerlink" title="动态规划+矩阵快速幂"></a>动态规划+矩阵快速幂</h3><p><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/201509.png"><br>其中 T 为转移矩阵，$T[i][j]$表示 i 面和 j 面的冲突关系，$A[k]$表示第 1 个骰子 k 面朝上的方案数，$B[k]$表示第 2 个骰子 k 面朝上的方案数。<br><a href="https://www.jianshu.com/p/1c3f88f63dec">矩阵快速幂入门</a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    ll m[<span class="number">7</span>][<span class="number">7</span>];</span><br><span class="line">&#125; Mat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 矩阵乘法 </span></span><br><span class="line"><span class="function">Mat <span class="title">mul</span><span class="params">(Mat a,Mat b)</span> </span>&#123;</span><br><span class="line">    Mat c;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">6</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">6</span>;j++) &#123;</span><br><span class="line">            c.m[i][j]=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">6</span>;k++) &#123;</span><br><span class="line">                c.m[i][j]+=a.m[i][k]*b.m[k][j]%MOD;</span><br><span class="line">                c.m[i][j]%=MOD;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 矩阵快速幂 </span></span><br><span class="line"><span class="function">Mat <span class="title">pow</span><span class="params">(Mat a,<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    Mat r;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">6</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">6</span>;j++) &#123;</span><br><span class="line">            r.m[i][j]=i==j ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(n) &#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>) &#123;</span><br><span class="line">            r=mul(a,r);</span><br><span class="line">        &#125;</span><br><span class="line">        a=mul(a,a);</span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 快速幂 </span></span><br><span class="line"><span class="function">ll <span class="title">pow</span><span class="params">(ll a,<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    ll r=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n) &#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>) &#123;</span><br><span class="line">            r=r*a%MOD;</span><br><span class="line">        &#125;</span><br><span class="line">        a=a*a%MOD;</span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    Mat dp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">6</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">6</span>;j++) &#123;</span><br><span class="line">            dp.m[i][j]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++) &#123; <span class="comment">//构造转移矩阵（即冲突矩阵）</span></span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        dp.m[a][(b+<span class="number">3</span>)%<span class="number">6</span>==<span class="number">0</span> ? <span class="number">6</span> : (b+<span class="number">3</span>)%<span class="number">6</span>]=<span class="number">0</span>;</span><br><span class="line">        dp.m[b][(a+<span class="number">3</span>)%<span class="number">6</span>==<span class="number">0</span> ? <span class="number">6</span> : (a+<span class="number">3</span>)%<span class="number">6</span>]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    dp=<span class="built_in">pow</span>(dp,n<span class="number">-1</span>);</span><br><span class="line">    ll sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">6</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">6</span>;j++) &#123;</span><br><span class="line">            sum+=dp.m[i][j];</span><br><span class="line">            sum%=MOD;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;sum*pow(4,n)%MOD&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>动态规划</tag>
        <tag>矩阵快速幂</tag>
        <tag>STL</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2015年第六届省赛 C/C++ B组 08 移动距离</title>
    <url>/2021-03-23-LANQIAO201508.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>X 星球居民小区的楼房全是一样的，并且按矩阵样式排列。其楼房的编号为 1, 2, 3 …<br>当排满一行时，从下一行相邻的楼往反方向排号。<br>比如：当小区排号宽度为6时，开始情形如下：<br>1 2 3 4 5 6<br>12 11 10 9 8 7<br>13 14 15 ……<br>我们的问题是：已知了两个楼号 m 和 n，需要求出它们之间的最短移动距离（不能斜线方向移动）<br>输入为 3 个整数w m n，空格分开，都在 1 到 10000 范围内<br>w 为排号宽度，m, n为待计算的楼号。<br>要求输出一个整数，表示m, n两楼间最短移动距离。<br>例如，用户输入：<br>6 8 2<br>则，程序应该输出：<br>4<br>再例如，用户输入：<br>4 7 20<br>则，程序应该输出：<br>5</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>横坐标 x&ensp;&ensp;=&ensp;m / w<br>纵坐标 y1&ensp;=&ensp;( m % w ) == 0 ? w : m % w //正向排号<br>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp; y2&ensp;=&ensp;w - y1 + 1 //反向排号</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> w,d[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;w&gt;&gt;d[<span class="number">0</span>][<span class="number">0</span>]&gt;&gt;d[<span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++) &#123;</span><br><span class="line">        d[i][<span class="number">1</span>]=d[i][<span class="number">0</span>]/w; <span class="comment">//计算x坐标</span></span><br><span class="line">        <span class="comment">//计算y坐标</span></span><br><span class="line">        <span class="keyword">int</span> t=(d[i][<span class="number">0</span>]%w)==<span class="number">0</span>?w:d[i][<span class="number">0</span>]%w;</span><br><span class="line">        <span class="keyword">if</span>(d[i][<span class="number">1</span>]%<span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            d[i][<span class="number">2</span>]=t; <span class="comment">//正向排号</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            d[i][<span class="number">2</span>]=w-t+<span class="number">1</span>; <span class="comment">//反向排号</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">abs</span>(d[<span class="number">0</span>][<span class="number">1</span>]-d[<span class="number">1</span>][<span class="number">1</span>])+<span class="built_in">abs</span>(d[<span class="number">0</span>][<span class="number">2</span>]-d[<span class="number">1</span>][<span class="number">2</span>]); </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>坐标计算</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2015年第六届省赛 C/C++ B组 07 牌型种数</title>
    <url>/2021-03-23-LANQIAO201507.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小明被劫持到 X 赌城，被迫与其他 3 人玩牌。<br>一副扑克牌（去掉大小王牌，共 52 张），均匀发给 4 个人，每个人 13 张。<br>这时，小明脑子里突然冒出一个问题：<br>如果不考虑花色，只考虑点数，也不考虑自己得到的牌的先后顺序，自己手里能拿到的初始牌型组合一共有多少种呢？<br>请填写该整数，不要填写任何多余的内容或说明文字。 </p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><h3 id="暴力枚举"><a href="#暴力枚举" class="headerlink" title="暴力枚举"></a>暴力枚举</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> a=<span class="number">0</span>;a&lt;=<span class="number">4</span>;a++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> b=<span class="number">0</span>;b&lt;=<span class="number">4</span>;b++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> c=<span class="number">0</span>;c&lt;=<span class="number">4</span>;c++)</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> d=<span class="number">0</span>;d&lt;=<span class="number">4</span>;d++)</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> e=<span class="number">0</span>;e&lt;=<span class="number">4</span>;e++)</span><br><span class="line">                        <span class="keyword">for</span>(<span class="keyword">int</span> f=<span class="number">0</span>;f&lt;=<span class="number">4</span>;f++)</span><br><span class="line">                            <span class="keyword">for</span>(<span class="keyword">int</span> g=<span class="number">0</span>;g&lt;=<span class="number">4</span>;g++)</span><br><span class="line">                                <span class="keyword">for</span>(<span class="keyword">int</span> h=<span class="number">0</span>;h&lt;=<span class="number">4</span>;h++)</span><br><span class="line">                                    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line">                                        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">4</span>;j++)</span><br><span class="line">                                            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=<span class="number">4</span>;k++)</span><br><span class="line">                                                <span class="keyword">for</span>(<span class="keyword">int</span> m=<span class="number">0</span>;m&lt;=<span class="number">4</span>;m++)</span><br><span class="line">                                                    <span class="keyword">for</span>(<span class="keyword">int</span> n=<span class="number">0</span>;n&lt;=<span class="number">4</span>;n++)</span><br><span class="line">                                                        <span class="keyword">if</span>(a+b+c+d+e+f+g+h+i+j+k+m+n == <span class="number">13</span>)</span><br><span class="line">                                                            sum++;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> res=<span class="number">0</span>,a[<span class="number">13</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">13</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">13</span>;i++) &#123;</span><br><span class="line">            sum+=a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sum == <span class="number">13</span>) &#123;</span><br><span class="line">            res++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">4</span>;i++) &#123;</span><br><span class="line">        a[n]=i;</span><br><span class="line">        fun(n+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fun(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h3><p>状态转移方程：<br>$dp[i][j]$ = //选完 i 点数的牌，剩余 j 张牌待选时的组合数<br>$dp[i-1][j]$ //上一点数的牌没有选<br>+ $dp[i-1][j+1]$ //上一点数的牌选了一张<br>+ $dp[i-1][j+2]$ //上一点数的牌选了两张<br>+ $dp[i-1][j+3]$ //上一点数的牌选了三张<br>+ $dp[i-1][j+4]$ //上一点数的牌选了四张</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> dp[<span class="number">14</span>][<span class="number">14</span>]=&#123;<span class="number">0</span>&#125;; <span class="comment">//dp[i][j]：选完i点数的牌，剩余j张牌待选时的组合数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">9</span>;i&lt;=<span class="number">13</span>;i++) &#123;</span><br><span class="line">        dp[<span class="number">1</span>][i]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">13</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">13</span>;j++) &#123;</span><br><span class="line">            <span class="comment">//状态转移方程 </span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=<span class="number">4</span>&amp;&amp;j+k&lt;=<span class="number">13</span>;k++) &#123;</span><br><span class="line">                dp[i][j]+=dp[i<span class="number">-1</span>][j+k];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;dp[<span class="number">13</span>][<span class="number">0</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>3598180</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>递归</tag>
        <tag>动态规划</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2015年第六届省赛 C/C++ B组 03 三羊献瑞</title>
    <url>/2021-03-23-LANQIAO201503.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>观察下面的加法算式：<br><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/201503.jpg"><br>其中，相同的汉字代表相同的数字，不同的汉字代表不同的数字。<br>请你填写“三羊献瑞”所代表的 4 位数字（答案唯一），不要填写任何多余内容。</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>分析可得汉字 ‘三’ 代表数字 ‘1’；汉字 ‘祥’ 代表的数字不小于 8；汉字 ‘辉’ 和汉字 ‘瑞’ 不可能代表数字 ‘0’，然后使用全排列函数next_permutation()即可。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">9</span>]=&#123;<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;; <span class="comment">//a[0]-a[6]分别代表羊、献、瑞、祥、生、辉、气 </span></span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[<span class="number">3</span>]&gt;=<span class="number">8</span> &amp;&amp; a[<span class="number">2</span>]!=<span class="number">0</span> &amp;&amp; a[<span class="number">5</span>]!=<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> x=<span class="number">1</span>*<span class="number">1000</span>+a[<span class="number">0</span>]*<span class="number">100</span>+a[<span class="number">1</span>]*<span class="number">10</span>+a[<span class="number">2</span>];</span><br><span class="line">            <span class="keyword">int</span> y=a[<span class="number">3</span>]*<span class="number">1000</span>+a[<span class="number">2</span>]*<span class="number">100</span>+a[<span class="number">4</span>]*<span class="number">10</span>+a[<span class="number">5</span>];</span><br><span class="line">            <span class="keyword">int</span> z=<span class="number">1</span>*<span class="number">10000</span>+a[<span class="number">0</span>]*<span class="number">1000</span>+a[<span class="number">4</span>]*<span class="number">100</span>+a[<span class="number">2</span>]*<span class="number">10</span>+a[<span class="number">6</span>];</span><br><span class="line">            <span class="keyword">if</span>(x+y == z) &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="number">1</span>&lt;&lt;a[<span class="number">0</span>]&lt;&lt;a[<span class="number">1</span>]&lt;&lt;a[<span class="number">2</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span>(next_permutation(a,a+<span class="number">9</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>1085</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>全排列</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2014年第五届省赛 C/C++ B组 10 小朋友排队</title>
    <url>/2021-03-19-LANQIAO201410.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>n 个小朋友站成一排。现在要把他们按身高从低到高的顺序排列，但是每次只能交换位置相邻的两个小朋友。每个小朋友都有一个不高兴的程度。开始的时候，所有小朋友的不高兴程度都是 0。如果某个小朋友第一次被要求交换，则他的不高兴程度增加 1，如果第二次要求他交换，则他的不高兴程度增加 2（即不高兴程度为 3），依次类推。当要求某个小朋友第 k 次交换时，他的不高兴程度增加 k。请问，要让所有小朋友按从低到高排队，他们的不高兴程度之和最小是多少。如果有两个小朋友身高一样，则他们谁站在谁前面是没有关系的。<br>输入的第一行包含一个整数 n，表示小朋友的个数。<br>第二行包含 n 个整数 H1 H2 … Hn，分别表示每个小朋友的身高。<br>输出一行，包含一个整数，表示小朋友的不高兴程度和的最小值。<br>例如，输入：<br>3<br>3 2 1<br>程序应该输出：<br>9<br>首先交换身高为 3 和 2 的小朋友，再交换身高为 3 和 1 的小朋友，再交换身高为 2 和 1 的小朋友，每个小朋友的不高兴程度都是 3，总和为 9。<br>对于10%的数据，1 &lt;= n &lt;= 10；<br>对于30%的数据，1 &lt;= n &lt;= 1000；<br>对于50%的数据，1 &lt;= n &lt;= 10000；<br>对于100%的数据，1 &lt;= n &lt;= 100000，0 &lt;= Hi &lt;= 1000000。</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>小朋友的最小交换次数为小朋友的身高在逆序对（右边比其小或左边比其大）中出现的次数。<br>暴力枚举计算逆序对，只能通过 55% 的数据，需要使用树状数组。<a href="https://blog.csdn.net/Small_Orange_glory/article/details/81290634">树状数组入门</a></p>
<h3 id="暴力枚举"><a href="#暴力枚举" class="headerlink" title="暴力枚举"></a>暴力枚举</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,h[<span class="number">100000</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;h[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> numR,numL;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        numR=numL=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(h[j] &lt; h[i]) &#123;</span><br><span class="line">                numR++; <span class="comment">//右边比起小 </span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i<span class="number">-1</span>;j&gt;=<span class="number">0</span>;j--) &#123;</span><br><span class="line">            <span class="keyword">if</span>(h[j] &gt; h[i]) &#123;</span><br><span class="line">                numL++; <span class="comment">//左边比起大 </span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sum+=(<span class="number">1</span>+numR+numL)*(numR+numL)/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="树状数组"><a href="#树状数组" class="headerlink" title="树状数组"></a>树状数组</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) x&amp;(-x) <span class="comment">//lowbit(x)=2^k,k为x的二进制中从最低位到高位连续零的长度</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> maxh=<span class="number">-1</span>,tree[<span class="number">1000001</span>]; <span class="comment">//树状数组下标为身高，原数组保存每个身高的小朋友个数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> val)</span> </span>&#123; <span class="comment">//更新树状数组</span></span><br><span class="line">    <span class="keyword">while</span>(x &lt;= maxh+<span class="number">1</span>) &#123;</span><br><span class="line">        tree[x]+=val;</span><br><span class="line">        x+=lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getsum</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123; <span class="comment">//通过树状数组计算原数组前x项和，这里即为小于等于h[i]的数据个数</span></span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        sum+=tree[x];</span><br><span class="line">        x-=lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,h[<span class="number">100000</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;h[i];</span><br><span class="line">        maxh=<span class="built_in">max</span>(maxh,h[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> swap[<span class="number">100000</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        update(h[i]+<span class="number">1</span>,<span class="number">1</span>); <span class="comment">//为什么是h[i]+1？树状数组下标从1开始，而h[i]可能为0</span></span><br><span class="line">        swap[i]=i+<span class="number">1</span>-getsum(h[i]+<span class="number">1</span>); <span class="comment">//计算左边比其大的数据个数，等于左边数据总个数-小于等于其的数据个数</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(tree,<span class="number">0</span>,<span class="keyword">sizeof</span>(tree));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) &#123;</span><br><span class="line">        update(h[i]+<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">        swap[i]+=getsum(h[i]); <span class="comment">//计算右边比其小的数据个数</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        res+=(<span class="number">1</span>+swap[i])*swap[i]/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>逆序对</tag>
        <tag>树状数组</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2014年第五届省赛 C/C++ B组 09 地宫取宝</title>
    <url>/2021-03-19-LANQIAO201409.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>X 国王有一个地宫宝库。是 n x m 个格子的矩阵。每个格子放一件宝贝。每个宝贝贴着价值标签。地宫的入口在左上角，出口在右下角。小明被带到地宫的入口，国王要求他只能向右或向下行走。走过某个格子时，如果那个格子中的宝贝价值比小明手中任意宝贝价值都大，小明就可以拿起它（当然，也可以不拿）。当小明走到出口时，如果他手中的宝贝恰好是 k 件，则这些宝贝就可以送给小明。请你帮小明算一算，在给定的局面下，他有多少种不同的行动方案能获得这 k 件宝贝。<br>输入一行 3 个整数，用空格分开：n m k(1 &lt;= n, m &lt;= 50，1 &lt;= k &lt;= 12)<br>接下来有 n 行数据，每行有 m 个整数 Ci (0 &lt;= Ci &lt;= 12)代表这个格子上的宝物的价值。<br>要求输出一个整数，表示正好取 k 个宝贝的行动方案数。该数字可能很大，输出它对 1000000007 取模的结果。<br>例如，输入：<br>2 2 2<br>1 2<br>2 1<br>程序应该输出：<br>2<br>再例如，输入：<br>2 3 2<br>1 2 3<br>2 1 5<br>程序应该输出：<br>14</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>使用递归，但若仅使用深度优先搜索算法，只能通过 50% 的数据，需要使用记忆化搜索。</p>
<h3 id="深度优先搜索"><a href="#深度优先搜索" class="headerlink" title="深度优先搜索"></a>深度优先搜索</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k,sum=<span class="number">0</span>,mapVal[<span class="number">50</span>][<span class="number">50</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">int</span> maxVal,<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i==n<span class="number">-1</span> &amp;&amp; j==m<span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="comment">//走到出口时手中已有k件宝贝 或 手中有k-1件宝贝且出口格子中的宝贝价值比小明手中任意宝贝价值都大</span></span><br><span class="line">        <span class="keyword">if</span>(num==k || maxVal&lt;mapVal[i][j]&amp;&amp;num==k<span class="number">-1</span>) &#123;</span><br><span class="line">            sum++;</span><br><span class="line">            sum%=<span class="number">1000000007</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(i &lt; n<span class="number">-1</span>) &#123; <span class="comment">//能够向下走 </span></span><br><span class="line">        <span class="keyword">if</span>(maxVal &lt; mapVal[i][j]) &#123;</span><br><span class="line">            dfs(i+<span class="number">1</span>,j,mapVal[i][j],num+<span class="number">1</span>); <span class="comment">//拿起宝贝向下走 </span></span><br><span class="line">        &#125;</span><br><span class="line">        dfs(i+<span class="number">1</span>,j,maxVal,num); <span class="comment">//不拿起宝贝向下走 </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j &lt; m<span class="number">-1</span>) &#123; <span class="comment">//能够向右走 </span></span><br><span class="line">        <span class="keyword">if</span>(maxVal &lt; mapVal[i][j]) &#123;</span><br><span class="line">            dfs(i,j+<span class="number">1</span>,mapVal[i][j],num+<span class="number">1</span>); <span class="comment">//拿起宝贝向右走 </span></span><br><span class="line">        &#125;</span><br><span class="line">        dfs(i,j+<span class="number">1</span>,maxVal,num); <span class="comment">//不拿起宝贝向右走 </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++) &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;mapVal[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="深度优先搜索-记忆化搜索"><a href="#深度优先搜索-记忆化搜索" class="headerlink" title="深度优先搜索+记忆化搜索"></a>深度优先搜索+记忆化搜索</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k,mapVal[<span class="number">50</span>][<span class="number">50</span>],dp[<span class="number">50</span>][<span class="number">50</span>][<span class="number">13</span>][<span class="number">13</span>]; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">int</span> maxVal,<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(dp[i][j][maxVal+<span class="number">1</span>][num] != <span class="number">-1</span>) &#123; <span class="comment">//若不等于-1，则表示已搜索过</span></span><br><span class="line">        <span class="keyword">return</span> dp[i][j][maxVal+<span class="number">1</span>][num];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(i==n<span class="number">-1</span> &amp;&amp; j==m<span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(num==k || maxVal&lt;mapVal[i][j]&amp;&amp;num==k<span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> dp[i][j][maxVal+<span class="number">1</span>][num]=<span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> dp[i][j][maxVal+<span class="number">1</span>][num]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(i &lt; n<span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(maxVal &lt; mapVal[i][j]) &#123;</span><br><span class="line">            sum+=dfs(i+<span class="number">1</span>,j,mapVal[i][j],num+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        sum+=dfs(i+<span class="number">1</span>,j,maxVal,num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j &lt; m<span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(maxVal &lt; mapVal[i][j]) &#123;</span><br><span class="line">            sum+=dfs(i,j+<span class="number">1</span>,mapVal[i][j],num+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        sum+=dfs(i,j+<span class="number">1</span>,maxVal,num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//宝贝价值可能为0，所以手中已有宝贝的最大价值初始值为-1</span></span><br><span class="line">    <span class="comment">//数组下标最小值为0，所以是maxVal+1</span></span><br><span class="line">    <span class="keyword">return</span> dp[i][j][maxVal+<span class="number">1</span>][num]=sum%<span class="number">1000000007</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++) &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;mapVal[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(dp,<span class="number">-1</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;dfs(<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>递归</tag>
        <tag>深度优先搜索</tag>
        <tag>记忆化搜索</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2014年第五届省赛 C/C++ B组 08 蚂蚁感冒</title>
    <url>/2021-03-19-LANQIAO201408.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>长 100 厘米的细长直杆子上有 n 只蚂蚁。它们的头有的朝左，有的朝右。 每只蚂蚁都只能沿着杆子向前爬，速度是 1 厘米/秒。当两只蚂蚁碰面时，它们会同时掉头往相反的方向爬行。这些蚂蚁中，有 1 只蚂蚁感冒了，并且在和其它蚂蚁碰面时，会把感冒传染给碰到的蚂蚁。请你计算，当所有蚂蚁都爬离杆子时，有多少只蚂蚁患上了感冒。<br>第一行输入一个整数 n (1 &lt; n &lt; 50), 表示蚂蚁的总数。<br>接着的一行是 n 个用空格分开的整数 Xi (-100 &lt; Xi &lt; 100), Xi 的绝对值表示蚂蚁离杆子左边端点的距离。正值表示头朝右，负值表示头朝左，数据中不会出现 0 值，也不会出现两只蚂蚁占用同一位置。其中，第一个数据代表的蚂蚁感冒了。<br>要求输出 1 个整数，表示最后感冒蚂蚁的数目。<br>例如，输入：<br>3<br>5 -2 8<br>程序应输出：<br>1<br>再例如，输入：<br>5<br>-10 8 -20 12 25<br>程序应输出：<br>3</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/201408.jpg"><br>无视不同蚂蚁的区别，只根据是否感冒分类。与感冒蚂蚁相遇后，两只蚂蚁都为感冒蚂蚁，为同一类，可以认为是保持原样擦肩而过。<br>那么我们就可以得到两种情况：<br>1.当首只蚂蚁右行，若其右边存在左行蚂蚁，则所有右边左行的蚂蚁全部感冒，然后所有左边右行的蚂蚁也全部感冒；<br>2.当首只蚂蚁左行，若其左边存在右行蚂蚁，则所有左边右行的蚂蚁全部感冒，然后所有右边左行的蚂蚁也全部感冒。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,a[<span class="number">50</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> sumL=<span class="number">0</span>,sumR=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">abs</span>(a[<span class="number">0</span>])&gt;<span class="built_in">abs</span>(a[i]) &amp;&amp; a[i]&gt;<span class="number">0</span>) &#123;</span><br><span class="line">            sumL++; <span class="comment">//所有左边右行蚂蚁的数量</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">abs</span>(a[<span class="number">0</span>])&lt;<span class="built_in">abs</span>(a[i]) &amp;&amp; a[i]&lt;<span class="number">0</span>) &#123;</span><br><span class="line">            sumR++; <span class="comment">//所有右边左行蚂蚁的数量</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a[<span class="number">0</span>]&gt;<span class="number">0</span> &amp;&amp; sumR&gt;<span class="number">0</span> || a[<span class="number">0</span>]&lt;<span class="number">0</span> &amp;&amp; sumL&gt;<span class="number">0</span>) &#123; <span class="comment">//存在第一次相遇</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="number">1</span>+sumL+sumR&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>找规律</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2014年第五届省赛 C/C++ B组 07 六角填数</title>
    <url>/2021-03-18-LANQIAO201407.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>如图所示六角形中，填入 1 ~ 12 的数字。<br>使得每条直线上的数字之和都相同。<br>图中，已经替你填好了 3 个数字（1、3、8），请你计算星号位置所代表的数字是多少？<br><img src="https://cdn.jsdelivr.net/gh/love-ziji/LANQIAO/201407.jpg"></p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>使用全排列函数 next_permutation() 或使用递归。<br>注意六条直线上的数字之和（每个顶点计算了两次）等于整个六角形上的数字之和的两倍，所以每条直线上的数字之和为 (1 + 12) * 12 / 6 = 26。</p>
<h3 id="next-permutation-函数"><a href="#next-permutation-函数" class="headerlink" title="next_permutation()函数"></a>next_permutation()函数</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">9</span>]=&#123;<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>&#125;;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">int</span> sum1=<span class="number">1</span>+a[<span class="number">0</span>]+a[<span class="number">3</span>]+a[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">int</span> sum2=<span class="number">1</span>+a[<span class="number">1</span>]+a[<span class="number">4</span>]+a[<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">int</span> sum3=a[<span class="number">5</span>]+a[<span class="number">6</span>]+a[<span class="number">7</span>]+a[<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">int</span> sum4=<span class="number">3</span>+a[<span class="number">6</span>]+a[<span class="number">3</span>]+<span class="number">8</span>;</span><br><span class="line">        <span class="keyword">int</span> sum5=<span class="number">3</span>+a[<span class="number">7</span>]+a[<span class="number">4</span>]+a[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">int</span> sum6=<span class="number">8</span>+a[<span class="number">0</span>]+a[<span class="number">1</span>]+a[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">if</span>(sum1==<span class="number">26</span> &amp;&amp; sum2==<span class="number">26</span> &amp;&amp; sum3==<span class="number">26</span> &amp;&amp; sum4==<span class="number">26</span> &amp;&amp; sum5==<span class="number">26</span> &amp;&amp; sum6==<span class="number">26</span>) &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;a[<span class="number">3</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span>(next_permutation(a,a+<span class="number">9</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> res[<span class="number">9</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">9</span>]=&#123;<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">9</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">9</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> sum1=<span class="number">1</span>+res[<span class="number">0</span>]+res[<span class="number">3</span>]+res[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">int</span> sum2=<span class="number">1</span>+res[<span class="number">1</span>]+res[<span class="number">4</span>]+res[<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">int</span> sum3=res[<span class="number">5</span>]+res[<span class="number">6</span>]+res[<span class="number">7</span>]+res[<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">int</span> sum4=<span class="number">3</span>+res[<span class="number">6</span>]+res[<span class="number">3</span>]+<span class="number">8</span>;</span><br><span class="line">        <span class="keyword">int</span> sum5=<span class="number">3</span>+res[<span class="number">7</span>]+res[<span class="number">4</span>]+res[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">int</span> sum6=<span class="number">8</span>+res[<span class="number">0</span>]+res[<span class="number">1</span>]+res[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">if</span>(sum1==<span class="number">26</span> &amp;&amp; sum2==<span class="number">26</span> &amp;&amp; sum3==<span class="number">26</span> &amp;&amp; sum4==<span class="number">26</span> &amp;&amp; sum5==<span class="number">26</span> &amp;&amp; sum6==<span class="number">26</span>) &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;res[<span class="number">3</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(vis[i] == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        vis[i]=<span class="number">1</span>;</span><br><span class="line">        res[n]=a[i];</span><br><span class="line">        dfs(n+<span class="number">1</span>);</span><br><span class="line">        vis[i]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    dfs(<span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>10</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>递归</tag>
        <tag>深度优先搜索</tag>
        <tag>全排列</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2014年第五届省赛 C/C++ B组 02 切面条</title>
    <url>/2021-03-18-LANQIAO201402.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>一根高筋拉面，中间切一刀，可以得到 2 根面条。<br>如果先对折 1 次，中间切一刀，可以得到 3 根面条。<br>如果连续对折 2 次，中间切一刀，可以得到 5 根面条。<br>那么，连续对折 10 次，中间切一刀，会得到多少面条呢？</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><table>
<thead>
<tr>
<th align="center">对折次数</th>
<th align="center">面条根数</th>
<th align="center">规律</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="center">3</td>
<td align="center">2^2 - (2^1 - 1)</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">5</td>
<td align="center">2^3 - (2^2 - 1)</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">9</td>
<td align="center">2^4 - (2^3 - 1)</td>
</tr>
<tr>
<td align="center">…</td>
<td align="center">…</td>
<td align="center">…</td>
</tr>
<tr>
<td align="center">n</td>
<td align="center">2^n + 1</td>
<td align="center">2^(n+1) - (2^n - 1)</td>
</tr>
</tbody></table>
<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>1025</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>找规律</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2013年第四届省赛 C/C++ B组 10 连号区间数</title>
    <url>/2021-03-13-LANQIAO201310.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小明这些天一直在思考这样一个奇怪而有趣的问题：<br>在 1 ~ N 的某个全排列中有多少个连号区间呢？这里所说的连号区间的定义是：<br>如果区间 [L, R] 里的所有元素（即此排列的第L个到第R个元素）递增排序后能得到一个长度为 R - L + 1 的“连续”数列，则称这个区间为连号区间。<br>当 N 很小的时候，小明可以很快地算出答案，但是当 N 变大的时候，问题就不是那么简单了，现在小明需要你的帮助。<br>输入格式：<br>第一行是一个正整数 N  (1 &lt;= N &lt;= 50000)，表示全排列的规模。<br>第二行是 N 个不同的数字 Pi (1 &lt;= Pi &lt;= N)，表示这 N 个数字的某一全排列。<br>输出格式：<br>输出一个整数，表示不同连号区间的数目。<br>示例：<br>用户输入：<br>4<br>3 2 4 1<br>程序应输出：<br>7<br>用户输入：<br>5<br>3 4 2 5 1<br>程序应输出：<br>9<br>解释：<br>第一个用例中，有 7 个连号区间分别是：[1,1], [1,2], [1,3], [1,4], [2,2], [3,3], [4,4]<br>第二个用例中，有 9 个连号区间分别是：[1,1], [1,2], [1,3], [1,4], [1,5], [2,2], [3,3], [4,4], [5,5]</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>直接将区间 [L, R] 里的元素排序后判断是否“连续”，只能通过 67% 的数据。<br>我们发现若R - L == maxNum - minNum（maxNum、minNum分别为区间 [L, R] 里的最大元素和最小元素），则区间 [L, R] 为连号区间，且若L = R，则区间 [L, R] 为连号区间。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,maxNum,minNum,sum=<span class="number">0</span>,arr[<span class="number">50000</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++) &#123;</span><br><span class="line">        maxNum=arr[i];</span><br><span class="line">        minNum=arr[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[j] &gt; maxNum) &#123;</span><br><span class="line">                maxNum=arr[j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(arr[j] &lt; minNum) &#123;</span><br><span class="line">                minNum=arr[j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(maxNum-minNum == j-i) &#123; </span><br><span class="line">                sum++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum+n&lt;&lt;<span class="built_in">endl</span>; <span class="comment">//若L=R，则区间[L, R]为连号区间 </span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>找规律</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2013年第四届省赛 C/C++ B组 09 带分数</title>
    <url>/2021-03-13-LANQIAO201309.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>100 可以表示为带分数的形式：100 = 3 + 69258 / 714<br>还可以表示为：100 = 82 + 3546 / 197<br>注意特征：带分数中，数字 1 - 9 分别出现且只出现一次（不包含 0）。<br>类似这样的带分数，100 有 11 种表示法。<br>题目要求：<br>从标准输入读入一个正整数 N  (N &lt; 1000*1000)<br>程序输出该数字用数码 1 - 9 不重复不遗漏地组成带分数表示的全部种数。<br>注意：不要求输出每个表示，只统计有多少表示法！<br>例如：<br>用户输入：<br>100<br>程序输出：<br>11<br>再例如：<br>用户输入：<br>105<br>程序输出：<br>6</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>全排列问题，使用next_permutation()函数（使用do-while结构，否则会少原始情况），然后切分为a、b、c三个数，比较 N 与 a + b / c 是否相等。<br>注意 a 的位数最大为 7 位，b 的位数一定大于等于 c 的位数且 c 整除 b。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> arr[<span class="number">9</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getNum</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123; <span class="comment">//由数组求出该数 </span></span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x;i&lt;=y;i++) &#123;</span><br><span class="line">        num=num*<span class="number">10</span>+arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">7</span>;i++) &#123; <span class="comment">//a的位数最大为7位 </span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;<span class="number">8</span>;j++) &#123; <span class="comment">//c的位数不能为0</span></span><br><span class="line">                <span class="keyword">if</span>(j-i &gt;= <span class="number">8</span>-j) &#123;</span><br><span class="line">                    <span class="keyword">int</span> a=getNum(<span class="number">0</span>,i); <span class="comment">//a=arr[0]...arr[i]</span></span><br><span class="line">                    <span class="keyword">int</span> b=getNum(i+<span class="number">1</span>,j); <span class="comment">//b=arr[i+1]...arr[j]</span></span><br><span class="line">                    <span class="keyword">int</span> c=getNum(j+<span class="number">1</span>,<span class="number">8</span>); <span class="comment">//c=arr[j+1]..a[8]</span></span><br><span class="line">                    <span class="keyword">if</span>(b%c==<span class="number">0</span> &amp;&amp; a+b/c==n) &#123;</span><br><span class="line">                        sum++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span>(next_permutation(arr,arr+<span class="number">9</span>));</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>全排列</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2013年第四届省赛 C/C++ B组 08 翻硬币</title>
    <url>/2021-03-13-LANQIAO201308.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小明正在玩一个“翻硬币”的游戏。<br>桌上放着排成一排的若干硬币。我们用 * 表示正面，用 o 表示反面（是小写字母，不是零）。<br>比如，可能情形是：**oo***oooo<br>如果同时翻转左边的两个硬币，则变为：oooo***oooo<br>现在小明的问题是：如果已知了初始状态和要达到的目标状态，每次只能同时翻转相邻的两个硬币,那么对特定的局面，最少要翻动多少次呢？<br>我们约定：把翻动相邻的两个硬币叫做一步操作，那么要求：<br>程序输入：<br>两行等长的字符串，分别表示初始状态和要达到的目标状态。每行的长度 &lt; 1000<br>程序输出：<br>一个整数，表示最小操作步数<br>例如：<br>用户输入：<br>**********<br>o****o****<br>程序应该输出：<br>5<br>再例如：<br>用户输入：<br>*o**o***o***<br>*o***o**o***<br>程序应该输出：<br>1</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><h3 id="解法一"><a href="#解法一" class="headerlink" title="解法一"></a>解法一</h3><p>我们发现若初始状态与目标状态的第 i 个硬币正反面不同，则必然有另外一个第 j 个硬币正反面也不同（正反面不同的硬币个数必然是偶数，否则初始状态无法通过每次只能同时翻转相邻两个硬币的操作达到目标状态），且翻动 j - i 次，初始状态与目标状态的第 i 个硬币至第 j 个硬币正反面相同。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str1,str2;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;str1&gt;&gt;str2;</span><br><span class="line">    <span class="keyword">int</span> n=<span class="number">-1</span>,sum=<span class="number">0</span>; <span class="comment">//n不能取0 </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str1.<span class="built_in">size</span>();i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(str1[i] != str2[i]) &#123;</span><br><span class="line">            <span class="keyword">if</span>(n != <span class="number">-1</span>) &#123;</span><br><span class="line">                sum+=i-n;</span><br><span class="line">                n=<span class="number">-1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                n=i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="解法二"><a href="#解法二" class="headerlink" title="解法二"></a>解法二</h3><p>循环比较初始状态与目标状态每个硬币的正反面是否相同，若第 i 个硬币正反面不同，则进行翻转操作，翻转初始状态的第 i 个硬币和第 i+1 个硬币，翻转后初始状态与目标状态的第 i 个硬币正反面必然相同，所以可以只翻转初始状态的第 i+1 个硬币，翻转后继续比较第 i+1 个硬币。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str1,str2;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;str1&gt;&gt;str2;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str2.<span class="built_in">size</span>();i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(str1[i] != str2[i]) &#123;</span><br><span class="line">            <span class="keyword">if</span>(str1[i+<span class="number">1</span>] == <span class="string">&#x27;*&#x27;</span>) &#123;</span><br><span class="line">                str1[i+<span class="number">1</span>]=<span class="string">&#x27;o&#x27;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                str1[i+<span class="number">1</span>]=<span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>找规律</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2013年第四届省赛 C/C++ B组 07 错误票据</title>
    <url>/2021-03-13-LANQIAO201307.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>某涉密单位下发了某种票据，并要在年终全部收回。<br>每张票据有唯一的 ID 号。全年所有票据的 ID 号是连续的，但 ID 的开始数码是随机选定的。<br>因为工作人员疏忽，在录入 ID 号的时候发生了一处错误，造成了某个 ID 断号，另外一个 ID 重号。<br>你的任务是通过编程，找出断号的 ID 和重号的 ID。<br>假设断号不可能发生在最大和最小号。<br>要求程序首先输入一个整数 N (N &lt; 100)表示后面数据行数。<br>接着读入 N 行数据。<br>每行数据长度不等，是用空格分开的若干个（不大于 100 个）正整数（不大于 100000）<br>每个整数代表一个 ID 号。<br>要求程序输出 1 行，含两个整数m n，用空格分隔。<br>其中，m 表示断号 ID，n 表示重号 ID<br>例如：<br>用户输入：<br>2<br>5 6 8 11 9<br>10 12 9<br>则程序输出：<br>7 9<br>再例如：<br>用户输入：<br>6<br>164 178 108 109 180 155 141 159 104 182 179 118 137 184 115 124 125 129 168 196<br>172 189 127 107 112 192 103 131 133 169 158<br>128 102 110 148 139 157 140 195 197<br>185 152 135 106 123 173 122 136 174 191 145 116 151 143 175 120 161 134 162 190<br>149 138 142 146 199 126 165 156 153 193 144 166 170 121 171 132 101 194 187 188<br>113 130 176 154 177 120 117 150 114 183 186 181 100 163 160 167 147 198 111 119<br>则程序输出：<br>105 120</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>数据行数 N 有什么用？<br>注意每行数据以换行符 ‘\n’ 结束，所以可以通过检测是否输入换行符 ‘\n’ 来确定每行数据是否输入结束。<br>使用哈希表记录每个 ID 号输入的次数后或排序后寻找断号 ID 和重号 ID。</p>
<h3 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,t,minNum=<span class="number">100000</span>,maxNum=<span class="number">0</span>,hash[<span class="number">100001</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--) &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;t) &#123;</span><br><span class="line">            <span class="keyword">if</span>(t&lt;minNum) &#123;</span><br><span class="line">                minNum=t;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;maxNum) &#123;</span><br><span class="line">                maxNum=t;</span><br><span class="line">            &#125;</span><br><span class="line">            hash[t]++;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">cin</span>.<span class="built_in">get</span>() == <span class="string">&#x27;\n&#x27;</span>) &#123; <span class="comment">//每行数据以换行符&#x27;\n&#x27;结束</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> a,b; <span class="comment">//a为断号ID，b为重号ID</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=minNum;i&lt;=maxNum;i++) &#123; <span class="comment">//使用minNum和maxNum保存最大ID号和最小ID号，从而减少循环次数</span></span><br><span class="line">        <span class="keyword">if</span>(hash[i] == <span class="number">0</span>) &#123;</span><br><span class="line">            a=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(hash[i] &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">            b=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;a&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;b&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,i=<span class="number">0</span>,a[<span class="number">10000</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--) &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;a[i++];</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">cin</span>.<span class="built_in">get</span>() == <span class="string">&#x27;\n&#x27;</span>) &#123; <span class="comment">//每行数据以换行符&#x27;\n&#x27;结束 </span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a,a+i);</span><br><span class="line">    <span class="keyword">int</span> x,y; <span class="comment">//x为断号ID，y为重号ID</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[j]+<span class="number">1</span> &lt; a[j+<span class="number">1</span>]) &#123;</span><br><span class="line">            x=a[j]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a[j] == a[j+<span class="number">1</span>]) &#123;</span><br><span class="line">            y=a[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;y&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>哈希表</tag>
        <tag>输入输出</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2013年第四届省赛 C/C++ B组 04 黄金连分数</title>
    <url>/2021-03-12-LANQIAO201304.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>黄金分割数0.61803… 是个无理数，这个常数十分重要，在许多工程问题中会出现。有时需要把这个数字求得很精确。<br>对于某些精密工程，常数的精度很重要。也许你听说过哈勃太空望远镜，它首次升空后就发现了一处人工加工错误，对那样一个庞然大物，其实只是镜面加工时有比头发丝还细许多倍的一处错误而已，却使它成了“近视眼”！<br>言归正传，我们如何求得黄金分割数的尽可能精确的值呢？有许多方法。<br>比较简单的一种是用连分数：</p>
<pre><code>                 1
黄金数 = --------------------
                    1
          1 + --------------
                     1
            1 + ------------
                      1
              1 + ----------
                   1 + ...</code></pre>
<p>这个连分数计算的“层数”越多，它的值越接近黄金分割数。<br>请你利用这一特性，求出黄金分割数的足够精确值，要求四舍五入到小数点后 100 位。<br>小数点后3位的值为：0.618<br>小数点后4位的值为：0.6180<br>小数点后5位的值为：0.61803<br>小数点后7位的值为：0.6180340<br>（注意尾部的0，不能忽略）</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>我们发现1/2 2/3 3/5 5/8…为斐波那契数列前一项除以后一项，相除模拟手算除法，先整除，然后用余数乘以 10 继续整除。<br>但由于 C/C++ 整型数据的限制（unsigned long long 取值范围为[0,2^64-1]），无法精确到小数点后 100 位，除非自己创建大数类。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> a[<span class="number">100</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;<span class="number">100</span>;i++) &#123;</span><br><span class="line">        a[i]=a[i<span class="number">-1</span>]+a[i<span class="number">-2</span>];</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;a[i]&lt;&lt;<span class="built_in">endl</span>; <span class="comment">//a[94]越界</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> x=a[<span class="number">88</span>],y=a[<span class="number">89</span>];</span><br><span class="line">    <span class="comment">// 模拟手算除法：先整除，然后用余数乘以10继续整除</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">102</span>;i++) &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;x/y;</span><br><span class="line">        x=(x%y)*<span class="number">10</span>; <span class="comment">//乘10可能导致越界，测试得x=a[88],y=a[89]，但只能精确到小数点后36位</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>大数处理推荐使用 Java 的 BigInteger 类，填空题可以使用Java、Python，哪种语言解决这道题简单用哪种！</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> lanqiao2013;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">BigInteger类相关运算</span></span><br><span class="line"><span class="comment">a+b:a.add(b)</span></span><br><span class="line"><span class="comment">a-b:a.subtract(b)</span></span><br><span class="line"><span class="comment">a*b:a.multiply(b)</span></span><br><span class="line"><span class="comment">a/b:a.divide(b)</span></span><br><span class="line"><span class="comment">a%b:a.mod(b)</span></span><br><span class="line"><span class="comment">a==b:a.compareTo(b)==0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">D</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        BigInteger a, b;</span><br><span class="line">        BigInteger arr1[] = <span class="keyword">new</span> BigInteger[<span class="number">102</span>];</span><br><span class="line">        BigInteger arr2[] = <span class="keyword">new</span> BigInteger[<span class="number">102</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> f = <span class="number">1</span>, f2; <span class="comment">//f标志是否为第一次循环，f2标志是否精确到了小数点后100位</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> end = <span class="number">100</span>; end &lt; <span class="number">200</span>; end++) &#123; <span class="comment">//end为斐波拉契数列循环次数</span></span><br><span class="line">            a = BigInteger.ZERO;</span><br><span class="line">            b = BigInteger.ONE;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 计算斐波拉契数列</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; end; i++) &#123;</span><br><span class="line">                a = a.add(b);</span><br><span class="line">                b = b.add(a);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 模拟手算除法：先整除，然后用余数乘以10继续整除</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">102</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (f == <span class="number">1</span>) &#123;</span><br><span class="line">                    arr1[i] = a.divide(b);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    arr2[i] = a.divide(b);</span><br><span class="line">                &#125;</span><br><span class="line">                a = a.mod(b).multiply(BigInteger.TEN);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (f == <span class="number">0</span>) &#123;</span><br><span class="line">                f2 = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">102</span>; i++) &#123; <span class="comment">//判断是否精确到了小数点后100位</span></span><br><span class="line">                    System.out.print(arr1[i]);</span><br><span class="line">                    <span class="keyword">if</span> (arr1[i].compareTo(arr2[i]) != <span class="number">0</span>) &#123;</span><br><span class="line">                        arr1[i] = arr2[i];</span><br><span class="line">                        f2 = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println();</span><br><span class="line">                <span class="keyword">if</span> (f2 == <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            f = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>0.6180339887498948482045868343656381177203091798057628621354486227052604628189024497072072041893911375</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>大数处理</tag>
        <tag>斐波那契数列</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2013年第四届省赛 C/C++ B组 03 第39级台阶</title>
    <url>/2021-03-12-LANQIAO201303.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小明刚刚看完电影《第39级台阶》，离开电影院的时候，他数了数礼堂前的台阶数，恰好是 39 级!<br>站在台阶前，他突然又想着一个问题：<br>如果我每一步只能迈上 1 个或 2 个台阶。先迈左脚，然后左右交替，最后一步是迈右脚，也就是说一共要走偶数步。<br>那么，上完 39 级台阶，有多少种不同的上法呢？<br>请你利用计算机的优势，帮助小明寻找答案。<br>要求提交的是一个整数。</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>使用递归，以迈上 1 个台阶或迈上 2 个台阶进行递归，递归的终止条件是上完 39 级台阶，若一共走了偶数步则为一种上法。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> <span class="built_in">step</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(num &gt; <span class="number">39</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(num==<span class="number">39</span> &amp;&amp; <span class="built_in">step</span>%<span class="number">2</span>==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> fun(num+<span class="number">1</span>,<span class="built_in">step</span>+<span class="number">1</span>)+fun(num+<span class="number">2</span>,<span class="built_in">step</span>+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;fun(<span class="number">0</span>,<span class="number">0</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>51167078</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>递归</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2013年第四届省赛 C/C++ B组 01 高斯日记</title>
    <url>/2021-03-12-LANQIAO201301.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>大数学家高斯有个好习惯：无论如何都要记日记。<br>他的日记有个与众不同的地方，他从不注明年月日，而是用一个整数代替，比如：4210<br>后来人们知道，那个整数就是日期，它表示那一天是高斯出生后的第几天。这或许也是个好习惯，它时时刻刻提醒着主人：日子又过去一天，还有多少时光可以用于浪费呢？<br>高斯出生于：1777 年 4 月 30 日。<br>在高斯发现的一个重要定理的日记上标注着：5343，因此可算出那天是：1791 年 12 月 15 日。<br>高斯获得博士学位的那天日记上标着：8113<br>请你算出高斯获得博士学位的年月日。<br>提交答案的格式是：yyyy-mm-dd，例如：1980-03-21</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>日期计算题常使用计算器自带的日期计算功能，这道题可能需要多尝试几次，但也比编程快，且准确性高。</p>
<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>1799-07-16</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>日期计算</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2012年第三届省赛 C/C++ B组 10 取球游戏</title>
    <url>/2021-03-10-LANQIAO201210.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>今盒子里有 n 个小球，A 、B 两人轮流从盒中取球，每个人都可以看到另一个人取了多少个，也可以看到盒中还剩下多少个，并且两人都很聪明，不会做出错误的判断。<br>我们约定：<br>每个人从盒子中取出的球的数目必须是：1，3，7或者 8 个。<br>轮到某一方取球时不能弃权！<br>A先取球，然后双方交替取球，直到取完。<br>被迫拿到最后一个球的一方为负方（输方）<br>请编程确定出在双方都不判断失误的情况下，对于特定的初始球数，A是否能赢？<br>程序运行时，从标准输入获得数据，其格式如下：<br>先是一个整数 n (n &lt; 100)，表示接下来有 n 个整数。然后是 n 个整数，每个占一行（整数 &lt; 10000），表示初始球数。<br>程序则输出 n 行，表示 A 的输赢情况（输为 0，赢为 1）。<br>例如，用户输入：<br>4<br>1<br>2<br>10<br>18<br>则程序应该输出：<br>0<br>1<br>1<br>0</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>使用动态规划算法，先确定盒子里有 1 至 8 个小球时 A 的输赢情况，然后使用状态转移方程：<br>a[i] = (a[i-1] &amp;&amp; a[i-3] &amp;&amp; a[i-7] &amp;&amp; a[i-8]) ? 0 : 1​<br>来确定小球个数大于 8 时 A 的输赢情况<br>如小球个数等于 9 时，A 有 4 种取法：<br>1、取 1 个小球 =&gt; B 取时盒子里有 8 个小球 =&gt; a[8] = 1 =&gt; B 赢A 输<br>2、取 3 个小球 =&gt; B 取时盒子里有 6 个小球 =&gt; a[6] = 1 =&gt; B 赢A 输<br>3、取 7 个小球 =&gt; B 取时盒子里有 2 个小球 =&gt; a[2] = 1 =&gt; B 赢A 输<br>4、取 8 个小球 =&gt; B 取时盒子里有 1 个小球 =&gt; a[1] = 0 =&gt; B 输A 赢<br>4 种情况中至少有 1 种情况 A 赢，则 A 赢</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">10000</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;; <span class="comment">//a[0]可为任意值</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">9</span>;i&lt;<span class="number">10000</span>;i++) &#123;</span><br><span class="line">        a[i]=(a[i<span class="number">-1</span>] &amp;&amp; a[i<span class="number">-3</span>] &amp;&amp; a[i<span class="number">-7</span>] &amp;&amp; a[i<span class="number">-8</span>]) ? <span class="number">0</span> : <span class="number">1</span>; <span class="comment">//状态转移方程 </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--) &#123;</span><br><span class="line">        <span class="keyword">int</span> num;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;num;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;a[num]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>动态规划</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2012年第三届省赛 C/C++ B组 09 夺冠概率</title>
    <url>/2021-03-10-LANQIAO201209.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>足球比赛具有一定程度的偶然性，弱队也有战胜强队的可能。<br>假设有甲、乙、丙、丁四个球队。根据他们过去比赛的成绩，得出每个队与另一个队对阵时取胜的概率表：</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">甲</th>
<th align="center">乙</th>
<th align="center">丙</th>
<th align="center">丁</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><strong>甲</strong></td>
<td align="center">-</td>
<td align="center">0.1</td>
<td align="center">0.3</td>
<td align="center">0.5</td>
</tr>
<tr>
<td align="center"><strong>乙</strong></td>
<td align="center">0.9</td>
<td align="center">-</td>
<td align="center">0.7</td>
<td align="center">0.4</td>
</tr>
<tr>
<td align="center"><strong>丙</strong></td>
<td align="center">0.7</td>
<td align="center">0.3</td>
<td align="center">-</td>
<td align="center">0.2</td>
</tr>
<tr>
<td align="center"><strong>丁</strong></td>
<td align="center">0.5</td>
<td align="center">0.6</td>
<td align="center">0.8</td>
<td align="center">-</td>
</tr>
</tbody></table>
<p>数据含义：甲对乙的取胜概率为0.1，丙对乙的胜率为0.3，…<br>现在要举行一次锦标赛。双方抽签，分两个组比，获胜的两个队再争夺冠军。<br>请你进行 10 万次模拟，计算出甲队夺冠的概率。</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>四个队两两比赛，只有 3 种情况（$\frac{C_4^2}{2}$），这 3 种情况分别是甲对乙、甲对丙、甲对丁，分别计算甲获得最终胜利的概率。<br>要求进行 10 万次模拟，使用 rand() 函数产生 10 万个从 0 到 2 的随机数，0、1、2分别对应上述三种情况甲胜的概率。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> a[<span class="number">3</span>];</span><br><span class="line">    a[<span class="number">0</span>]=<span class="number">0.1</span>*<span class="number">0.2</span>*<span class="number">0.3</span>+<span class="number">0.1</span>*<span class="number">0.8</span>*<span class="number">0.5</span>; <span class="comment">//甲对乙</span></span><br><span class="line">    a[<span class="number">1</span>]=<span class="number">0.3</span>*<span class="number">0.4</span>*<span class="number">0.1</span>+<span class="number">0.3</span>*<span class="number">0.6</span>*<span class="number">0.5</span>; <span class="comment">//甲对丙</span></span><br><span class="line">    a[<span class="number">2</span>]=<span class="number">0.5</span>*<span class="number">0.7</span>*<span class="number">0.1</span>+<span class="number">0.5</span>*<span class="number">0.3</span>*<span class="number">0.3</span>; <span class="comment">//甲对丁</span></span><br><span class="line">    <span class="keyword">double</span> sum=<span class="number">0</span>;</span><br><span class="line">    srand(time(<span class="number">0</span>)); <span class="comment">//以时间为种子</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100000</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> n=rand()%<span class="number">3</span>; <span class="comment">//产生随机数</span></span><br><span class="line">        sum+=a[n];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum/<span class="number">100000</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>组合问题</tag>
        <tag>随机数</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2012年第三届省赛 C/C++ B组 08 密码发生器</title>
    <url>/2021-03-10-LANQIAO201208.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>在对银行账户等重要权限设置密码的时候，我们常常遇到这样的烦恼：如果为了好记用生日吧，容易被破解，不安全；如果设置不好记的密码，又担心自己也会忘记；如果写在纸上，担心纸张被别人发现或弄丢了…<br>这个程序的任务就是把一串拼音字母转换为 6 位数字（密码）。我们可以使用任何好记的拼音串(比如名字，王喜明，就写：wangximing)作为输入，程序输出 6 位数字。<br>变换的过程如下：<br>第一步. 把字符串 6 个一组折叠起来，比如 wangximing 则变为：<br>wangxi<br>ming<br>第二步. 把所有垂直在同一个位置的字符的 ascii 码值相加，得出 6 个数字，如上面的例子，则得出：<br>228 202 220 206 120 105<br>第三步. 再把每个数字“缩位”处理：就是把每个位的数字相加，得出的数字如果不是一位数字，就再缩位，直到变成一位数字为止。例如:<br>228 =&gt; 2+2+8=12 =&gt; 1+2=3<br>上面的数字缩位后变为：344836，这就是程序最终的输出结果！<br>要求程序从标准输入接收数据，在标准输出上输出结果。<br>输入格式为：第一行是一个整数n（&lt;100），表示下边有多少输入行，接下来是 n 行字符串，就是等待变换的字符串。<br>输出格式为：n 行变换后的 6 位密码。<br>例如，输入：<br>5<br>zhangfeng<br>wangximing<br>jiujingfazi<br>woaibeijingtiananmen<br>haohaoxuexi<br>则输出：<br>772243<br>344836<br>297332<br>716652<br>875843</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>注意以字符为单位处理字符串的方法，使用 str.size() 函数。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">6</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;str;</span><br><span class="line">        <span class="comment">//以字符为单位处理字符串</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;str.<span class="built_in">size</span>();j++) &#123;</span><br><span class="line">            a[j%<span class="number">6</span>]+=str[j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">6</span>;j++) &#123;</span><br><span class="line">            <span class="keyword">while</span>(a[j]/<span class="number">10</span>) &#123;</span><br><span class="line">                <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span>(a[j]) &#123;</span><br><span class="line">                    sum+=a[j]%<span class="number">10</span>;</span><br><span class="line">                    a[j]/=<span class="number">10</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                a[j]=sum;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;a[j];</span><br><span class="line">            a[j]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>字符串</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2012年第三届省赛 C/C++ B组 04 奇怪的比赛</title>
    <url>/2021-03-10-LANQIAO201204.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>某电视台举办了低碳生活大奖赛。题目的计分规则相当奇怪：<br>每位选手需要回答 10 个问题（其编号为 1 到 10），越后面越有难度。答对的，当前分数翻倍；答错了则扣掉与题号相同的分数（选手必须回答问题，不回答按错误处理）。<br>每位选手都有一个起步的分数为 10 分。<br>某获胜选手最终得分刚好是 100 分，如果不让你看比赛过程，你能推断出他（她）哪个题目答对了，哪个题目答错了吗？<br>如果把答对的记为 1，答错的记为 0，则 10 个题目的回答情况可以用仅含有 1 和 0 的串来表示。例如：0010110011 就是可能的情况。<br>你的任务是算出所有可能情况。每个答案占一行。</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>使用递归，使用数组保存 10 个题目的回答情况，以题目答对或答错进行递归，递归的终止条件是回答完 10 个题目，若最终得分为 100分 则为一种可能情况。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">11</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> score)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n &gt; <span class="number">11</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">11</span> &amp;&amp; score==<span class="number">100</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++) &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    a[n]=<span class="number">0</span>;</span><br><span class="line">    fun(n+<span class="number">1</span>,score-n);</span><br><span class="line">    a[n]=<span class="number">1</span>;</span><br><span class="line">    fun(n+<span class="number">1</span>,score*<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fun(<span class="number">1</span>,<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>0010110011</strong><br><strong>0111010000</strong><br><strong>1011010000</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>递归</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2012年第三届省赛 C/C++ B组 03 比酒量</title>
    <url>/2021-03-10-LANQIAO201203.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>有一群海盗（不多于 20 人），在船上比拼酒量。<br>过程如下：打开一瓶酒，所有在场的人平分喝下，有几个人倒下了。再打开一瓶酒平分，又有倒下的，再次重复…… 直到开了第 4 瓶酒，坐着的已经所剩无几，海盗船长也在其中。当第 4 瓶酒平分喝下后，大家都倒下了。<br>等船长醒来，发现海盗船搁浅了。他在航海日志中写到：“……昨天，我正好喝了一瓶…….奉劝大家，开船不喝酒，喝酒别开船……”<br>请你根据这些信息，推断开始有多少人，每一轮喝下来还剩多少人。<br>如果有多个可能的答案，请列出所有答案，每个答案占一行。<br>格式是：人数,人数,…<br>例如，有一种可能是：20,5,4,2,0</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>暴力枚举即可，注意浮点数比较大小的方法。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> a=<span class="number">1</span>;a&lt;=<span class="number">20</span>;a++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> b=<span class="number">1</span>;b&lt;a;b++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> c=<span class="number">1</span>;c&lt;b;c++) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> d=<span class="number">1</span>;d&lt;c;d++) &#123;</span><br><span class="line">                    <span class="comment">//浮点数比较大小</span></span><br><span class="line">                    <span class="keyword">if</span>(<span class="built_in">fabs</span>(<span class="number">1.0</span>/a+<span class="number">1.0</span>/b+<span class="number">1.0</span>/c+<span class="number">1.0</span>/d<span class="number">-1</span>) &lt;= <span class="number">1e-5</span>) &#123;</span><br><span class="line">                        <span class="built_in">cout</span>&lt;&lt;a&lt;&lt;<span class="string">&#x27;,&#x27;</span>&lt;&lt;b&lt;&lt;<span class="string">&#x27;,&#x27;</span>&lt;&lt;c&lt;&lt;<span class="string">&#x27;,&#x27;</span>&lt;&lt;d&lt;&lt;<span class="string">&quot;,0&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>12,6,4,2,0</strong><br><strong>15,10,3,2,0</strong><br><strong>18,9,3,2,0</strong><br><strong>20,5,4,2,0</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>浮点数</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝桥杯 2012年第三届省赛 C/C++ B组 02 古堡算式</title>
    <url>/2021-03-09-LANQIAO201202.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>福尔摩斯到某古堡探险，看到门上写着一个奇怪的算式：<br>ABCDE * ? = EDCBA<br>他对华生说：“ABCDE 应该代表不同的数字，问号也代表某个数字！”<br>华生：“我猜也是！”<br>于是，两人沉默了好久，还是没有算出合适的结果来。<br>请你利用计算机的优势，找到破解的答案。<br>把 ABCDE 所代表的数字写出来。</p>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>全排列问题，暴力枚举或使用 next_permutation() 函数。</p>
<h3 id="暴力枚举"><a href="#暴力枚举" class="headerlink" title="暴力枚举"></a>暴力枚举</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> a=<span class="number">1</span>;a&lt;<span class="number">10</span>;a++) &#123; <span class="comment">//A和E为首位不能为零</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> b=<span class="number">0</span>;b&lt;<span class="number">10</span>;b++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> c=<span class="number">0</span>;c&lt;<span class="number">10</span>;c++) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> d=<span class="number">0</span>;d&lt;<span class="number">10</span>;d++) &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> e=<span class="number">1</span>;e&lt;<span class="number">10</span>;e++) &#123;</span><br><span class="line">                        <span class="comment">//两两互不相同</span></span><br><span class="line">                        <span class="keyword">if</span>(a!=b &amp;&amp; a!=c &amp;&amp; a!=d &amp;&amp; a!=e &amp;&amp; b!=c &amp;&amp; b!=d &amp;&amp; b!=e &amp;&amp; c!=d &amp;&amp; c!=e &amp;&amp; d!=e) &#123;</span><br><span class="line">                            <span class="keyword">for</span>(<span class="keyword">int</span> t=<span class="number">0</span>;t&lt;<span class="number">10</span>;t++) &#123;</span><br><span class="line">                                <span class="keyword">int</span> left=a*<span class="number">10000</span>+b*<span class="number">1000</span>+c*<span class="number">100</span>+d*<span class="number">10</span>+e;</span><br><span class="line">                                <span class="keyword">int</span> right=e*<span class="number">10000</span>+d*<span class="number">1000</span>+c*<span class="number">100</span>+b*<span class="number">10</span>+a;</span><br><span class="line">                                <span class="keyword">if</span>(left*t == right) &#123;</span><br><span class="line">                                    <span class="built_in">cout</span>&lt;&lt;left&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<h3 id="next-permutation-函数"><a href="#next-permutation-函数" class="headerlink" title="next_permutation()函数"></a>next_permutation()函数</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> numArr[<span class="number">10</span>] =&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(numArr[<span class="number">0</span>]!=<span class="number">0</span> &amp;&amp; numArr[<span class="number">4</span>]!=<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> left=numArr[<span class="number">0</span>]*<span class="number">10000</span>+numArr[<span class="number">1</span>]*<span class="number">1000</span>+numArr[<span class="number">2</span>]*<span class="number">100</span>+numArr[<span class="number">3</span>]*<span class="number">10</span>+numArr[<span class="number">4</span>];</span><br><span class="line">            <span class="keyword">int</span> right=numArr[<span class="number">4</span>]*<span class="number">10000</span>+numArr[<span class="number">3</span>]*<span class="number">1000</span>+numArr[<span class="number">2</span>]*<span class="number">100</span>+numArr[<span class="number">1</span>]*<span class="number">10</span>+numArr[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> t=<span class="number">0</span>;t&lt;<span class="number">10</span>;t++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(left*t == right) &#123;</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;left&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">while</span>(next_permutation(numArr,numArr+<span class="number">10</span>)); <span class="comment">//全排列函数next_permutation()</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="题目答案"><a href="#题目答案" class="headerlink" title="题目答案"></a>题目答案</h2><p><strong>21978</strong></p>
]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
      <tags>
        <tag>全排列</tag>
      </tags>
  </entry>
</search>
